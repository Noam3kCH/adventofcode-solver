{"version":3,"sources":["day18.js"],"names":["life","grid","stuck","calc","state","i","j","safe","idiff","jdiff","adjacent","filter","x","length","map","row","cell","part1","input","steps","grid1","split","c","result","Array","fill","undefined","reduce","prev","concat","part2","corner","grid2"],"mappings":"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","sourcesContent":["function life(grid, stuck) {\n  function calc(state, i, j) {\n    const safe = (idiff, jdiff) =>\n      grid[i + idiff] && grid[i + idiff][j + jdiff];\n    const adjacent = [\n      safe(-1, -1),\n      safe(-1, 0),\n      safe(-1, 1),\n      safe(0, -1),\n      safe(0, 1),\n      safe(1, -1),\n      safe(1, 0),\n      safe(1, 1),\n    ].filter(x => x).length;\n    switch (adjacent) {\n      case 3:\n        return true;\n      case 2:\n        return state;\n      default:\n        return false;\n    }\n  }\n  return grid.map((row, i) =>\n    row.map((cell, j) => stuck(i, j) || calc(cell, i, j)),\n  );\n}\n\nexport function part1(input, steps = 100) {\n  const grid1 = input.split('\\n').map(x => x.split('').map(c => c === '#'));\n  const result = new Array(steps)\n    .fill(undefined)\n    .reduce(x => life(x, () => false), grid1);\n  return result.reduce((prev, row) => prev.concat(row)).filter(x => x).length;\n}\n\nexport function part2(input, steps = 100) {\n  const grid1 = input.split('\\n').map(x => x.split('').map(c => c === '#'));\n  const corner = (i, j) =>\n    (i === 0 || i === grid1.length - 1) && (j === 0 || j === grid1.length - 1);\n  const grid2 = grid1.map((row, i) =>\n    row.map((cell, j) => cell || corner(i, j)),\n  );\n  const result = new Array(steps)\n    .fill(undefined)\n    .reduce(x => life(x, corner), grid2);\n  return result.reduce((prev, row) => prev.concat(row)).filter(x => x).length;\n}\n"]}