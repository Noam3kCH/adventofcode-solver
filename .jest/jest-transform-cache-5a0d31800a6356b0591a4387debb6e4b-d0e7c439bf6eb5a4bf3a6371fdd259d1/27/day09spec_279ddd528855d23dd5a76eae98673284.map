{"version":3,"sources":["day09.spec.js"],"names":["input","url","describe","it","expect","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CAAC,gBAAM,oCAAN,CAAD,CAAN,CAAoDC,OAApD,CAA4D,EAA5D;AACAD,MAAAA,MAAM,CAAC,gBAAM,uCAAN,CAAD,CAAN,CAAuDC,OAAvD,CAA+D,IAA/D;AACAD,MAAAA,MAAM,CAAC,gBAAM,8CAAN,CAAD,CAAN,CAA8DC,OAA9D,CACE,MADF;AAGAD,MAAAA,MAAM,CAAC,gBAAM,8CAAN,CAAD,CAAN,CAA8DC,OAA9D,CACE,IADF;AAGAD,MAAAA,MAAM,CAAC,gBAAM,8CAAN,CAAD,CAAN,CAA8DC,OAA9D,CACE,KADF;AAGAD,MAAAA,MAAM,CAAC,gBAAM,8CAAN,CAAD,CAAN,CAA8DC,OAA9D,CACE,KADF;AAGD,KAfC,CAAF;AAiBAF,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBK,OAArB,CAA6B,MAA7B;AACD,KAFC,CAAF;AAGD,GArBO,CAAR;AAuBAH,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM,CAC1C;AACD,KAFC,CAAF;AAIAA,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBK,OAArB,CAA6B,UAA7B;AACD,KAFC,CAAF;AAGD,GARO,CAAR;AASD,CAjCO,CAAR","sourcesContent":["import { part1, part2 } from './day09.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day09 2018', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(part1('9 players; last marble is worth 25')).toEqual(32);\n      expect(part1('10 players; last marble is worth 1618')).toEqual(8317);\n      expect(part1('13 players; last marble is worth 7999 points')).toEqual(\n        146373,\n      );\n      expect(part1('17 players; last marble is worth 1104 points')).toEqual(\n        2764,\n      );\n      expect(part1('21 players; last marble is worth 6111 points')).toEqual(\n        54718,\n      );\n      expect(part1('30 players; last marble is worth 5807 points')).toEqual(\n        37305,\n      );\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(439089);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      // expect(part2('1')).toEqual(0);\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(3668541094);\n    });\n  });\n});\n"]}