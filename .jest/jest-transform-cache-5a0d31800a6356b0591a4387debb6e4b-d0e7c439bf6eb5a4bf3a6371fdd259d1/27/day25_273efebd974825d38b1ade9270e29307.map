{"version":3,"sources":["day25.js"],"names":["distance","a","b","reduce","sum","x","i","Math","abs","part1","input","constellations","lines","split","points","map","line","parseInt","forEach","p","near","filter","q","length","queue","shift","idx","indexOf","push","splice","part2","undefined"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;AACtB,SAAOD,CAAC,CAACE,MAAF,CAAS,CAACC,GAAD,EAAMC,CAAN,EAASC,CAAT,KAAeF,GAAG,GAAGG,IAAI,CAACC,GAAL,CAASH,CAAC,GAAGH,CAAC,CAACI,CAAD,CAAd,CAA9B,EAAkD,CAAlD,CAAP;AACD;;AAEM,SAASG,KAAT,CAAeC,KAAf,EAAsB;AAC3B,MAAIC,cAAc,GAAG,CAArB;AACA,QAAMC,KAAK,GAAGF,KAAK,CAACG,KAAN,CAAY,IAAZ,CAAd;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACH,KAAL,CAAW,GAAX,EAAgBE,GAAhB,CAAoBV,CAAC,IAAIY,QAAQ,CAACZ,CAAD,CAAjC,CAAlB,CAAf;AACAS,EAAAA,MAAM,CAACI,OAAP,CAAeC,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACC,IAAF,GAASN,MAAM,CAACO,MAAP,CAAcC,CAAC,IAAItB,QAAQ,CAACmB,CAAD,EAAIG,CAAJ,CAAR,IAAkB,CAArC,CAAT;AACD,GAFD;;AAGA,SAAOR,MAAM,CAACS,MAAP,GAAgB,CAAvB,EAA0B;AACxB,UAAMC,KAAK,GAAG,CAACV,MAAM,CAACW,KAAP,EAAD,CAAd;;AACA,WAAOD,KAAK,CAACD,MAAN,GAAe,CAAtB,EAAyB;AACvBC,MAAAA,KAAK,CAACC,KAAN,GAAcL,IAAd,CAAmBF,OAAnB,CAA2BC,CAAC,IAAI;AAC9B,cAAMO,GAAG,GAAGZ,MAAM,CAACa,OAAP,CAAeR,CAAf,CAAZ;;AACA,YAAIO,GAAG,KAAK,CAAC,CAAb,EAAgB;AACdF,UAAAA,KAAK,CAACI,IAAN,CAAWT,CAAX;AACAL,UAAAA,MAAM,CAACe,MAAP,CAAcH,GAAd,EAAmB,CAAnB;AACD;AACF,OAND;AAOD;;AACDf,IAAAA,cAAc;AACf;;AACD,SAAOA,cAAP;AACD;;AAEM,MAAMmB,KAAK,GAAG,MAAMC,SAApB","sourcesContent":["function distance(a, b) {\n  return a.reduce((sum, x, i) => sum + Math.abs(x - b[i]), 0);\n}\n\nexport function part1(input) {\n  let constellations = 0;\n  const lines = input.split('\\n');\n  const points = lines.map(line => line.split(',').map(x => parseInt(x)));\n  points.forEach(p => {\n    p.near = points.filter(q => distance(p, q) <= 3);\n  });\n  while (points.length > 0) {\n    const queue = [points.shift()];\n    while (queue.length > 0) {\n      queue.shift().near.forEach(p => {\n        const idx = points.indexOf(p);\n        if (idx !== -1) {\n          queue.push(p);\n          points.splice(idx, 1);\n        }\n      });\n    }\n    constellations++;\n  }\n  return constellations;\n}\n\nexport const part2 = () => undefined;\n"]}