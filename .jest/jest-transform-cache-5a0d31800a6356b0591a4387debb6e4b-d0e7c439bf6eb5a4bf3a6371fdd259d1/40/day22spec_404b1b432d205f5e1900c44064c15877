3340fe463f8a470b016658cca050967f
"use strict";

var _day = require("./day22.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day22 2015', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)(`Hit Points: 13
Damage: 8`, 10, 250)).toEqual(173 + 53);
      expect((0, _day.part1)(`Hit Points: 14
Damage: 8`, 10, 250)).toEqual(229 + 113 + 73 + 173 + 53);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(1824);
    });
  });
  describe('part2', () => {
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(1937);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTIyLnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7OztBQUVBLE1BQU1BLEtBQUssR0FBRyx3QkFBVSxLQUFZQyxHQUF0QixDQUFkO0FBRUFDLFFBQVEsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUMzQkEsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUNKLGdCQUNHO1VBREgsRUFHRSxFQUhGLEVBSUUsR0FKRixDQURJLENBQU4sQ0FPRUMsT0FQRixDQU9VLE1BQU0sRUFQaEI7QUFRQUQsTUFBQUEsTUFBTSxDQUNKLGdCQUNHO1VBREgsRUFHRSxFQUhGLEVBSUUsR0FKRixDQURJLENBQU4sQ0FPRUMsT0FQRixDQU9VLE1BQU0sR0FBTixHQUFZLEVBQVosR0FBaUIsR0FBakIsR0FBdUIsRUFQakM7QUFRRCxLQWpCQyxDQUFGO0FBbUJBRixJQUFBQSxFQUFFLENBQUMsOEJBQUQsRUFBaUMsTUFBTTtBQUN2Q0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNSixLQUFOLENBQUQsQ0FBTixDQUFxQkssT0FBckIsQ0FBNkIsSUFBN0I7QUFDRCxLQUZDLENBQUY7QUFHRCxHQXZCTyxDQUFSO0FBeUJBSCxFQUFBQSxRQUFRLENBQUMsT0FBRCxFQUFVLE1BQU07QUFDdEJDLElBQUFBLEVBQUUsQ0FBQyw4QkFBRCxFQUFpQyxNQUFNO0FBQ3ZDQyxNQUFBQSxNQUFNLENBQUMsZ0JBQU1KLEtBQU4sQ0FBRCxDQUFOLENBQXFCSyxPQUFyQixDQUE2QixJQUE3QjtBQUNELEtBRkMsQ0FBRjtBQUdELEdBSk8sQ0FBUjtBQUtELENBL0JPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJ0MSwgcGFydDIgfSBmcm9tICcuL2RheTIyLmpzJztcbmltcG9ydCByZWFkSW5wdXQgZnJvbSAnLi4vdXRpbHMvcmVhZC1pbnB1dCc7XG5cbmNvbnN0IGlucHV0ID0gcmVhZElucHV0KGltcG9ydC5tZXRhLnVybCk7XG5cbmRlc2NyaWJlKCdkYXkyMiAyMDE1JywgKCkgPT4ge1xuICBkZXNjcmliZSgncGFydDEnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDEgZXhhbXBsZXMnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoXG4gICAgICAgIHBhcnQxKFxuICAgICAgICAgIGBIaXQgUG9pbnRzOiAxM1xuRGFtYWdlOiA4YCxcbiAgICAgICAgICAxMCxcbiAgICAgICAgICAyNTAsXG4gICAgICAgICksXG4gICAgICApLnRvRXF1YWwoMTczICsgNTMpO1xuICAgICAgZXhwZWN0KFxuICAgICAgICBwYXJ0MShcbiAgICAgICAgICBgSGl0IFBvaW50czogMTRcbkRhbWFnZTogOGAsXG4gICAgICAgICAgMTAsXG4gICAgICAgICAgMjUwLFxuICAgICAgICApLFxuICAgICAgKS50b0VxdWFsKDIyOSArIDExMyArIDczICsgMTczICsgNTMpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDEgaW5wdXQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QocGFydDEoaW5wdXQpKS50b0VxdWFsKDE4MjQpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgncGFydDInLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDIgaW5wdXQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QocGFydDIoaW5wdXQpKS50b0VxdWFsKDE5MzcpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19