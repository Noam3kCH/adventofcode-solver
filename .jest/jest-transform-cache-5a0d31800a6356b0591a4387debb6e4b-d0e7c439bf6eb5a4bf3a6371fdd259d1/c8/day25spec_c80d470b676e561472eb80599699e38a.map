{"version":3,"sources":["day25.spec.js"],"names":["input","url","describe","it","expect","toEqual","undefined"],"mappings":"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","sourcesContent":["import { part1, part2 } from './day25.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day25 2015', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(part1('row 1, column 1.')).toEqual(20151125);\n      expect(part1('row 2, column 1.')).toEqual(31916031);\n      expect(part1('row 3, column 1.')).toEqual(16080970);\n      expect(part1('row 4, column 1.')).toEqual(24592653);\n      expect(part1('row 5, column 1.')).toEqual(77061);\n      expect(part1('row 6, column 1.')).toEqual(33071741);\n\n      expect(part1('row 1, column 2.')).toEqual(18749137);\n      expect(part1('row 2, column 2.')).toEqual(21629792);\n      expect(part1('row 3, column 2.')).toEqual(8057251);\n      expect(part1('row 4, column 2.')).toEqual(32451966);\n      expect(part1('row 5, column 2.')).toEqual(17552253);\n      expect(part1('row 6, column 2.')).toEqual(6796745);\n\n      expect(part1('row 1, column 3.')).toEqual(17289845);\n      expect(part1('row 2, column 3.')).toEqual(16929656);\n      expect(part1('row 3, column 3.')).toEqual(1601130);\n      expect(part1('row 4, column 3.')).toEqual(21345942);\n      expect(part1('row 5, column 3.')).toEqual(28094349);\n      expect(part1('row 6, column 3.')).toEqual(25397450);\n\n      expect(part1('row 1, column 4.')).toEqual(30943339);\n      expect(part1('row 2, column 4.')).toEqual(7726640);\n      expect(part1('row 3, column 4.')).toEqual(7981243);\n      expect(part1('row 4, column 4.')).toEqual(9380097);\n      expect(part1('row 5, column 4.')).toEqual(6899651);\n      expect(part1('row 6, column 4.')).toEqual(24659492);\n\n      expect(part1('row 1, column 5.')).toEqual(10071777);\n      expect(part1('row 2, column 5.')).toEqual(15514188);\n      expect(part1('row 3, column 5.')).toEqual(11661866);\n      expect(part1('row 4, column 5.')).toEqual(10600672);\n      expect(part1('row 5, column 5.')).toEqual(9250759);\n      expect(part1('row 6, column 5.')).toEqual(1534922);\n\n      expect(part1('row 1, column 6.')).toEqual(33511524);\n      expect(part1('row 2, column 6.')).toEqual(4041754);\n      expect(part1('row 3, column 6.')).toEqual(16474243);\n      expect(part1('row 4, column 6.')).toEqual(31527494);\n      expect(part1('row 5, column 6.')).toEqual(31663883);\n      expect(part1('row 6, column 6.')).toEqual(27995004);\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(9132360);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(undefined);\n    });\n  });\n});\n"]}