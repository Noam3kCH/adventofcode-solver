{"version":3,"sources":["day12.spec.js"],"names":["input","url","describe","it","expect","join","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,SADF,EAEE,SAFF,EAGE,eAHF,EAIE,YAJF,EAKE,eALF,EAME,SANF,EAOE,YAPF,EAQEC,IARF,CAQO,IARP,CADF,CADI,CAAN,CAYEC,OAZF,CAYU,CAZV;AAaD,KAdC,CAAF;AAgBAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,GAA7B;AACD,KAFC,CAAF;AAGD,GApBO,CAAR;AAsBAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,SADF,EAEE,SAFF,EAGE,eAHF,EAIE,YAJF,EAKE,eALF,EAME,SANF,EAOE,YAPF,EAQEC,IARF,CAQO,IARP,CADF,CADI,CAAN,CAYEC,OAZF,CAYU,CAZV;AAaD,KAdC,CAAF;AAgBAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,GAA7B;AACD,KAFC,CAAF;AAGD,GApBO,CAAR;AAqBD,CA5CO,CAAR","sourcesContent":["import { part1, part2 } from './day12.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day12 2017', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(\n          [\n            '0 <-> 2',\n            '1 <-> 1',\n            '2 <-> 0, 3, 4',\n            '3 <-> 2, 4',\n            '4 <-> 2, 3, 6',\n            '5 <-> 6',\n            '6 <-> 4, 5',\n          ].join('\\n'),\n        ),\n      ).toEqual(6);\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(175);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      expect(\n        part2(\n          [\n            '0 <-> 2',\n            '1 <-> 1',\n            '2 <-> 0, 3, 4',\n            '3 <-> 2, 4',\n            '4 <-> 2, 3, 6',\n            '5 <-> 6',\n            '6 <-> 4, 5',\n          ].join('\\n'),\n        ),\n      ).toEqual(2);\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(213);\n    });\n  });\n});\n"]}