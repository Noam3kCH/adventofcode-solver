{"version":3,"sources":["day05.spec.js"],"names":["input","url","describe","it","expect","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CAAC,gBAAM,kBAAN,CAAD,CAAN,CAAkCC,OAAlC,CAA0C,CAA1C;AACAD,MAAAA,MAAM,CAAC,gBAAM,KAAN,CAAD,CAAN,CAAqBC,OAArB,CAA6B,CAA7B;AACAD,MAAAA,MAAM,CAAC,gBAAM,kBAAN,CAAD,CAAN,CAAkCC,OAAlC,CAA0C,CAA1C;AACAD,MAAAA,MAAM,CAAC,gBAAM,kBAAN,CAAD,CAAN,CAAkCC,OAAlC,CAA0C,CAA1C;AACAD,MAAAA,MAAM,CAAC,gBAAM,kBAAN,CAAD,CAAN,CAAkCC,OAAlC,CAA0C,CAA1C;AACD,KANC,CAAF;AAQAF,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBK,OAArB,CAA6B,GAA7B;AACD,KAFC,CAAF;AAGD,GAZO,CAAR;AAcAH,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CAAC,gBAAM,kBAAN,CAAD,CAAN,CAAkCC,OAAlC,CAA0C,CAA1C;AACAD,MAAAA,MAAM,CAAC,gBAAM,OAAN,CAAD,CAAN,CAAuBC,OAAvB,CAA+B,CAA/B;AACAD,MAAAA,MAAM,CAAC,gBAAM,kBAAN,CAAD,CAAN,CAAkCC,OAAlC,CAA0C,CAA1C;AACAD,MAAAA,MAAM,CAAC,gBAAM,kBAAN,CAAD,CAAN,CAAkCC,OAAlC,CAA0C,CAA1C;AACD,KALC,CAAF;AAOAF,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBK,OAArB,CAA6B,EAA7B;AACD,KAFC,CAAF;AAGD,GAXO,CAAR;AAYD,CA3BO,CAAR","sourcesContent":["import { part1, part2 } from './day05.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day05 2015', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(part1('ugknbfddgicrmopn')).toEqual(1);\n      expect(part1('aaa')).toEqual(1);\n      expect(part1('jchzalrnumimnmhp')).toEqual(0);\n      expect(part1('haegwjzuvuyypxyu')).toEqual(0);\n      expect(part1('dvszwmarrgswjxmb')).toEqual(0);\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(236);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      expect(part2('qjhvhtzxzqqjkmpb')).toEqual(1);\n      expect(part2('xxyxx')).toEqual(1);\n      expect(part2('uurcxstgmygtbstg')).toEqual(0);\n      expect(part2('ieodomkazucvgmuy')).toEqual(0);\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(51);\n    });\n  });\n});\n"]}