{"version":3,"sources":["day23.js"],"names":["ops","cpy","src","register","state","undefined","parseInt","inc","dec","jnz","distance","index","tgl","commands","toggle","command","dic","name","toReducer","str","params","split","cmd","shift","run","length","slice","map","x","join","a","b","d","c","part1","input","commands1","part2","commands2"],"mappings":"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","sourcesContent":["const ops = {\n  cpy: (src, register) => state => {\n    if (state[register] !== undefined) {\n      src = state[src] === undefined ? parseInt(src) : state[src];\n      state[register] = src;\n    }\n  },\n  inc: register => state => {\n    if (state[register] !== undefined) {\n      state[register]++;\n    }\n  },\n  dec: register => state => {\n    if (state[register] !== undefined) {\n      state[register]--;\n    }\n  },\n  jnz: (register, distance) => state => {\n    if (\n      (state[register] !== undefined && state[register] !== 0) ||\n      (state[register] === undefined && register !== '0')\n    ) {\n      distance =\n        state[distance] === undefined ? parseInt(distance) : state[distance];\n      state.index += distance - 1;\n    }\n  },\n  tgl: distance => (state, commands) => {\n    distance =\n      state[distance] === undefined ? parseInt(distance) : state[distance];\n    toggle(commands[state.index + distance]);\n  },\n};\n\nfunction toggle(command) {\n  const dic = {\n    cpy: 'jnz',\n    inc: 'dec',\n    dec: 'inc',\n    jnz: 'cpy',\n    tgl: 'inc',\n  };\n  if (command) {\n    command.name = dic[command.name];\n  }\n}\n\nfunction toReducer(str) {\n  const params = str.split(/\\s+/);\n  const cmd = { name: params.shift(), params };\n  return cmd;\n}\n\nfunction run(commands, state) {\n  while (commands.length > state.index) {\n    if (\n      state.index === 4 &&\n      commands\n        .slice(4, 10)\n        .map(x => x.name)\n        .join(' ') === 'cpy inc dec jnz dec jnz'\n    ) {\n      state.a += state.b * state.d;\n      state.c = 0;\n      state.d = 0;\n      state.index = 10;\n    } else {\n      const cmd = commands[state.index];\n      ops[cmd.name](...cmd.params)(state, commands);\n      state.index++;\n    }\n  }\n  return state;\n}\n\nexport function part1(input, state = { a: 7, b: 0, c: 0, d: 0, index: 0 }) {\n  const commands1 = input.split('\\n').map(toReducer);\n  return run(commands1, state).a;\n}\n\nexport function part2(input, state = { a: 12, b: 0, c: 0, d: 0, index: 0 }) {\n  const commands2 = input.split('\\n').map(toReducer);\n  return run(commands2, state).a;\n}\n"]}