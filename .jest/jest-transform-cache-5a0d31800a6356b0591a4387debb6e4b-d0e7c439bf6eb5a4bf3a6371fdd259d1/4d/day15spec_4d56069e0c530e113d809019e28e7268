27001194a80913f95c70af56ac895150
"use strict";

var _day = require("./day15.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day15 2017', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)(['Generator A starts with 65', 'Generator B starts with 8921'].join('\n'), 5)).toEqual(1);
      expect((0, _day.part1)(['Generator A starts with 65', 'Generator B starts with 8921'].join('\n'))).toEqual(588);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(638);
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples', () => {
      expect((0, _day.part2)(['Generator A starts with 65', 'Generator B starts with 8921'].join('\n'), 1056)).toEqual(1);
      expect((0, _day.part2)(['Generator A starts with 65', 'Generator B starts with 8921'].join('\n'))).toEqual(309);
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(343);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTE1LnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0Iiwiam9pbiIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7Ozs7QUFFQSxNQUFNQSxLQUFLLEdBQUcsd0JBQVUsS0FBWUMsR0FBdEIsQ0FBZDtBQUVBQyxRQUFRLENBQUMsWUFBRCxFQUFlLE1BQU07QUFDM0JBLEVBQUFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBTTtBQUN0QkMsSUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLE1BQU07QUFDMUNDLE1BQUFBLE1BQU0sQ0FDSixnQkFDRSxDQUFDLDRCQUFELEVBQStCLDhCQUEvQixFQUErREMsSUFBL0QsQ0FDRSxJQURGLENBREYsRUFJRSxDQUpGLENBREksQ0FBTixDQU9FQyxPQVBGLENBT1UsQ0FQVjtBQVNBRixNQUFBQSxNQUFNLENBQ0osZ0JBQ0UsQ0FBQyw0QkFBRCxFQUErQiw4QkFBL0IsRUFBK0RDLElBQS9ELENBQ0UsSUFERixDQURGLENBREksQ0FBTixDQU1FQyxPQU5GLENBTVUsR0FOVjtBQU9ELEtBakJDLENBQUY7QUFtQkFILElBQUFBLEVBQUUsQ0FBQyw4QkFBRCxFQUFpQyxNQUFNO0FBQ3ZDQyxNQUFBQSxNQUFNLENBQUMsZ0JBQU1KLEtBQU4sQ0FBRCxDQUFOLENBQXFCTSxPQUFyQixDQUE2QixHQUE3QjtBQUNELEtBRkMsQ0FBRjtBQUdELEdBdkJPLENBQVI7QUF5QkFKLEVBQUFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBTTtBQUN0QkMsSUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLE1BQU07QUFDMUNDLE1BQUFBLE1BQU0sQ0FDSixnQkFDRSxDQUFDLDRCQUFELEVBQStCLDhCQUEvQixFQUErREMsSUFBL0QsQ0FDRSxJQURGLENBREYsRUFJRSxJQUpGLENBREksQ0FBTixDQU9FQyxPQVBGLENBT1UsQ0FQVjtBQVFBRixNQUFBQSxNQUFNLENBQ0osZ0JBQ0UsQ0FBQyw0QkFBRCxFQUErQiw4QkFBL0IsRUFBK0RDLElBQS9ELENBQ0UsSUFERixDQURGLENBREksQ0FBTixDQU1FQyxPQU5GLENBTVUsR0FOVjtBQU9ELEtBaEJDLENBQUY7QUFrQkFILElBQUFBLEVBQUUsQ0FBQyw4QkFBRCxFQUFpQyxNQUFNO0FBQ3ZDQyxNQUFBQSxNQUFNLENBQUMsZ0JBQU1KLEtBQU4sQ0FBRCxDQUFOLENBQXFCTSxPQUFyQixDQUE2QixHQUE3QjtBQUNELEtBRkMsQ0FBRjtBQUdELEdBdEJPLENBQVI7QUF1QkQsQ0FqRE8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnQxLCBwYXJ0MiB9IGZyb20gJy4vZGF5MTUuanMnO1xuaW1wb3J0IHJlYWRJbnB1dCBmcm9tICcuLi91dGlscy9yZWFkLWlucHV0JztcblxuY29uc3QgaW5wdXQgPSByZWFkSW5wdXQoaW1wb3J0Lm1ldGEudXJsKTtcblxuZGVzY3JpYmUoJ2RheTE1IDIwMTcnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdwYXJ0MScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBleGFtcGxlcycsICgpID0+IHtcbiAgICAgIGV4cGVjdChcbiAgICAgICAgcGFydDEoXG4gICAgICAgICAgWydHZW5lcmF0b3IgQSBzdGFydHMgd2l0aCA2NScsICdHZW5lcmF0b3IgQiBzdGFydHMgd2l0aCA4OTIxJ10uam9pbihcbiAgICAgICAgICAgICdcXG4nLFxuICAgICAgICAgICksXG4gICAgICAgICAgNSxcbiAgICAgICAgKSxcbiAgICAgICkudG9FcXVhbCgxKTtcblxuICAgICAgZXhwZWN0KFxuICAgICAgICBwYXJ0MShcbiAgICAgICAgICBbJ0dlbmVyYXRvciBBIHN0YXJ0cyB3aXRoIDY1JywgJ0dlbmVyYXRvciBCIHN0YXJ0cyB3aXRoIDg5MjEnXS5qb2luKFxuICAgICAgICAgICAgJ1xcbicsXG4gICAgICAgICAgKSxcbiAgICAgICAgKSxcbiAgICAgICkudG9FcXVhbCg1ODgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDEgaW5wdXQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QocGFydDEoaW5wdXQpKS50b0VxdWFsKDYzOCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdwYXJ0MicsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMiBleGFtcGxlcycsICgpID0+IHtcbiAgICAgIGV4cGVjdChcbiAgICAgICAgcGFydDIoXG4gICAgICAgICAgWydHZW5lcmF0b3IgQSBzdGFydHMgd2l0aCA2NScsICdHZW5lcmF0b3IgQiBzdGFydHMgd2l0aCA4OTIxJ10uam9pbihcbiAgICAgICAgICAgICdcXG4nLFxuICAgICAgICAgICksXG4gICAgICAgICAgMTA1NixcbiAgICAgICAgKSxcbiAgICAgICkudG9FcXVhbCgxKTtcbiAgICAgIGV4cGVjdChcbiAgICAgICAgcGFydDIoXG4gICAgICAgICAgWydHZW5lcmF0b3IgQSBzdGFydHMgd2l0aCA2NScsICdHZW5lcmF0b3IgQiBzdGFydHMgd2l0aCA4OTIxJ10uam9pbihcbiAgICAgICAgICAgICdcXG4nLFxuICAgICAgICAgICksXG4gICAgICAgICksXG4gICAgICApLnRvRXF1YWwoMzA5KTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAyIGlucHV0JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQyKGlucHV0KSkudG9FcXVhbCgzNDMpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19