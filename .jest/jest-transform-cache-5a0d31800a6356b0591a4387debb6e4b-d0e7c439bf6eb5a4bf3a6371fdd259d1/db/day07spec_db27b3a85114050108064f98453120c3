21bb6eb116847a338d30393b619a7b96
"use strict";

var _day = require("./day07.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day07 2015', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)('123 -> x\n456 -> y\nx AND y -> a')).toEqual(72);
      expect((0, _day.part1)(`123 -> x\n456 -> y\nx OR y -> a`)).toEqual(507);
      expect((0, _day.part1)(`123 -> x\n456 -> y\nx LSHIFT 2 -> a`)).toEqual(492);
      expect((0, _day.part1)(`123 -> x\n456 -> y\ny RSHIFT 2 -> a`)).toEqual(114);
      expect((0, _day.part1)(`123 -> x\n456 -> y\nNOT x -> a`)).toEqual(65412);
      expect((0, _day.part1)(`123 -> x\n456 -> y\nNOT y -> a`)).toEqual(65079);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(16076);
    });
  });
  describe('part2', () => {
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(2797);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTA3LnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7OztBQUVBLE1BQU1BLEtBQUssR0FBRyx3QkFBVSxLQUFZQyxHQUF0QixDQUFkO0FBRUFDLFFBQVEsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUMzQkEsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLGtDQUFOLENBQUQsQ0FBTixDQUFrREMsT0FBbEQsQ0FBMEQsRUFBMUQ7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFPLGlDQUFQLENBQUQsQ0FBTixDQUFpREMsT0FBakQsQ0FBeUQsR0FBekQ7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFPLHFDQUFQLENBQUQsQ0FBTixDQUFxREMsT0FBckQsQ0FBNkQsR0FBN0Q7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFPLHFDQUFQLENBQUQsQ0FBTixDQUFxREMsT0FBckQsQ0FBNkQsR0FBN0Q7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFPLGdDQUFQLENBQUQsQ0FBTixDQUFnREMsT0FBaEQsQ0FBd0QsS0FBeEQ7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFPLGdDQUFQLENBQUQsQ0FBTixDQUFnREMsT0FBaEQsQ0FBd0QsS0FBeEQ7QUFDRCxLQVBDLENBQUY7QUFTQUYsSUFBQUEsRUFBRSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDdkNDLE1BQUFBLE1BQU0sQ0FBQyxnQkFBTUosS0FBTixDQUFELENBQU4sQ0FBcUJLLE9BQXJCLENBQTZCLEtBQTdCO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0FiTyxDQUFSO0FBZUFILEVBQUFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBTTtBQUN0QkMsSUFBQUEsRUFBRSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDdkNDLE1BQUFBLE1BQU0sQ0FBQyxnQkFBTUosS0FBTixDQUFELENBQU4sQ0FBcUJLLE9BQXJCLENBQTZCLElBQTdCO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0FKTyxDQUFSO0FBS0QsQ0FyQk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnQxLCBwYXJ0MiB9IGZyb20gJy4vZGF5MDcuanMnO1xuaW1wb3J0IHJlYWRJbnB1dCBmcm9tICcuLi91dGlscy9yZWFkLWlucHV0JztcblxuY29uc3QgaW5wdXQgPSByZWFkSW5wdXQoaW1wb3J0Lm1ldGEudXJsKTtcblxuZGVzY3JpYmUoJ2RheTA3IDIwMTUnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdwYXJ0MScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBleGFtcGxlcycsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MSgnMTIzIC0+IHhcXG40NTYgLT4geVxcbnggQU5EIHkgLT4gYScpKS50b0VxdWFsKDcyKTtcbiAgICAgIGV4cGVjdChwYXJ0MShgMTIzIC0+IHhcXG40NTYgLT4geVxcbnggT1IgeSAtPiBhYCkpLnRvRXF1YWwoNTA3KTtcbiAgICAgIGV4cGVjdChwYXJ0MShgMTIzIC0+IHhcXG40NTYgLT4geVxcbnggTFNISUZUIDIgLT4gYWApKS50b0VxdWFsKDQ5Mik7XG4gICAgICBleHBlY3QocGFydDEoYDEyMyAtPiB4XFxuNDU2IC0+IHlcXG55IFJTSElGVCAyIC0+IGFgKSkudG9FcXVhbCgxMTQpO1xuICAgICAgZXhwZWN0KHBhcnQxKGAxMjMgLT4geFxcbjQ1NiAtPiB5XFxuTk9UIHggLT4gYWApKS50b0VxdWFsKDY1NDEyKTtcbiAgICAgIGV4cGVjdChwYXJ0MShgMTIzIC0+IHhcXG40NTYgLT4geVxcbk5PVCB5IC0+IGFgKSkudG9FcXVhbCg2NTA3OSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBpbnB1dCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MShpbnB1dCkpLnRvRXF1YWwoMTYwNzYpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgncGFydDInLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDIgaW5wdXQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QocGFydDIoaW5wdXQpKS50b0VxdWFsKDI3OTcpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19