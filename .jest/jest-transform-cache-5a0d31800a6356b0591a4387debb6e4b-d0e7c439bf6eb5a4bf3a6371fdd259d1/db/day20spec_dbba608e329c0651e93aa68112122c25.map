{"version":3,"sources":["day20.spec.js"],"names":["input","url","describe","it","expect","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,mCAAD,EAAsC,MAAM;AAC5CC,MAAAA,MAAM,CAAC,gBAAM,OAAN,CAAD,CAAN,CAAuBC,OAAvB,CAA+B,CAA/B;AACAD,MAAAA,MAAM,CAAC,gBAAM,yBAAN,CAAD,CAAN,CAAyCC,OAAzC,CAAiD,EAAjD;AACAD,MAAAA,MAAM,CAAC,gBAAM,2CAAN,CAAD,CAAN,CAA2DC,OAA3D,CAAmE,EAAnE;AACD,KAJC,CAAF;AAMAF,IAAAA,EAAE,CAAC,mCAAD,EAAsC,MAAM;AAC5CC,MAAAA,MAAM,CACJ,gBAAM,qDAAN,CADI,CAAN,CAEEC,OAFF,CAEU,EAFV;AAGD,KAJC,CAAF;AAMAF,IAAAA,EAAE,CAAC,mCAAD,EAAsC,MAAM;AAC5CC,MAAAA,MAAM,CACJ,gBACE,mEADF,CADI,CAAN,CAIEC,OAJF,CAIU,EAJV;AAKD,KANC,CAAF;AAQAF,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBK,OAArB,CAA6B,IAA7B;AACD,KAFC,CAAF;AAGD,GAxBO,CAAR;AA0BAH,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM,CAC1C;AACD,KAFC,CAAF;AAIAA,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBK,OAArB,CAA6B,IAA7B;AACD,KAFC,CAAF;AAGD,GARO,CAAR;AASD,CApCO,CAAR","sourcesContent":["import { part1, part2 } from './day20.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day20 2018', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples 1', () => {\n      expect(part1('^WNE$')).toEqual(3);\n      expect(part1('^ENWWW(NEEE|SSE(EE|N))$')).toEqual(10);\n      expect(part1('^ENNWSWW(NEWS|)SSSEEN(WNSE|)EE(SWEN|)NNN$')).toEqual(18);\n    });\n\n    it('should work for part 1 examples 2', () => {\n      expect(\n        part1('^ESSWWN(E|NNENN(EESS(WNSE|)SSS|WWWSSSSE(SW|NNNE)))$'),\n      ).toEqual(23);\n    });\n\n    it('should work for part 1 examples 3', () => {\n      expect(\n        part1(\n          '^WSSEESWWWNW(S|NENNEEEENN(ESSSSW(NWSW|SSEN)|WSWWN(E|WWS(E|SS))))$',\n        ),\n      ).toEqual(31);\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(3721);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      // expect(part2('1')).toEqual(0);\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(8613);\n    });\n  });\n});\n"]}