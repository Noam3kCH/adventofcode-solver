{"version":3,"sources":["day07.spec.js"],"names":["input","url","describe","it","expect","join","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,kDADF,EAEE,kDAFF,EAGE,kDAHF,EAIE,kDAJF,EAKE,kDALF,EAME,kDANF,EAOE,kDAPF,EAQEC,IARF,CAQO,IARP,CADF,CADI,CAAN,CAYEC,OAZF,CAYU,QAZV;AAaD,KAdC,CAAF;AAgBAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,4BAA7B;AACD,KAFC,CAAF;AAGD,GApBO,CAAR;AAsBAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,kDADF,EAEE,kDAFF,EAGE,kDAHF,EAIE,kDAJF,EAKE,kDALF,EAME,kDANF,EAOE,kDAPF,EAQEC,IARF,CAQO,IARP,CADF,EAUE,CAVF,EAWE,CAXF,CADI,CAAN,CAcEC,OAdF,CAcU,EAdV;AAeD,KAhBC,CAAF;AAkBAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,IAA7B;AACD,KAFC,CAAF;AAGD,GAtBO,CAAR;AAuBD,CA9CO,CAAR","sourcesContent":["import { part1, part2 } from './day07.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day07 2018', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(\n          [\n            'Step C must be finished before step A can begin.',\n            'Step C must be finished before step F can begin.',\n            'Step A must be finished before step B can begin.',\n            'Step A must be finished before step D can begin.',\n            'Step B must be finished before step E can begin.',\n            'Step D must be finished before step E can begin.',\n            'Step F must be finished before step E can begin.',\n          ].join('\\n'),\n        ),\n      ).toEqual('CABDFE');\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual('IJLFUVDACEHGRZPNKQWSBTMXOY');\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      expect(\n        part2(\n          [\n            'Step C must be finished before step A can begin.',\n            'Step C must be finished before step F can begin.',\n            'Step A must be finished before step B can begin.',\n            'Step A must be finished before step D can begin.',\n            'Step B must be finished before step E can begin.',\n            'Step D must be finished before step E can begin.',\n            'Step F must be finished before step E can begin.',\n          ].join('\\n'),\n          2,\n          0,\n        ),\n      ).toEqual(15);\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(1072);\n    });\n  });\n});\n"]}