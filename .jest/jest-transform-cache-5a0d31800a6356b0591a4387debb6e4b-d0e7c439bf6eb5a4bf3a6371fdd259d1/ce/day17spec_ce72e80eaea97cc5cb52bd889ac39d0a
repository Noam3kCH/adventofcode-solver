e184411b183b0552ea5483975a2ddf5c
"use strict";

var _day = require("./day17.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day17 2017', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)('3')).toEqual(638);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(2000);
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples', () => {
      expect((0, _day.part1)('3', 0)).toEqual((0, _day.part2)('3', 2017));
      expect((0, _day.part1)(input, 0)).toEqual((0, _day.part2)(input, 2017));
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(10242889);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTE3LnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7OztBQUVBLE1BQU1BLEtBQUssR0FBRyx3QkFBVSxLQUFZQyxHQUF0QixDQUFkO0FBRUFDLFFBQVEsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUMzQkEsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLEdBQU4sQ0FBRCxDQUFOLENBQW1CQyxPQUFuQixDQUEyQixHQUEzQjtBQUNELEtBRkMsQ0FBRjtBQUlBRixJQUFBQSxFQUFFLENBQUMsOEJBQUQsRUFBaUMsTUFBTTtBQUN2Q0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNSixLQUFOLENBQUQsQ0FBTixDQUFxQkssT0FBckIsQ0FBNkIsSUFBN0I7QUFDRCxLQUZDLENBQUY7QUFHRCxHQVJPLENBQVI7QUFVQUgsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLEdBQU4sRUFBVyxDQUFYLENBQUQsQ0FBTixDQUFzQkMsT0FBdEIsQ0FBOEIsZ0JBQU0sR0FBTixFQUFXLElBQVgsQ0FBOUI7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFNSixLQUFOLEVBQWEsQ0FBYixDQUFELENBQU4sQ0FBd0JLLE9BQXhCLENBQWdDLGdCQUFNTCxLQUFOLEVBQWEsSUFBYixDQUFoQztBQUNELEtBSEMsQ0FBRjtBQUtBRyxJQUFBQSxFQUFFLENBQUMsOEJBQUQsRUFBaUMsTUFBTTtBQUN2Q0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNSixLQUFOLENBQUQsQ0FBTixDQUFxQkssT0FBckIsQ0FBNkIsUUFBN0I7QUFDRCxLQUZDLENBQUY7QUFHRCxHQVRPLENBQVI7QUFVRCxDQXJCTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFydDEsIHBhcnQyIH0gZnJvbSAnLi9kYXkxNy5qcyc7XG5pbXBvcnQgcmVhZElucHV0IGZyb20gJy4uL3V0aWxzL3JlYWQtaW5wdXQnO1xuXG5jb25zdCBpbnB1dCA9IHJlYWRJbnB1dChpbXBvcnQubWV0YS51cmwpO1xuXG5kZXNjcmliZSgnZGF5MTcgMjAxNycsICgpID0+IHtcbiAgZGVzY3JpYmUoJ3BhcnQxJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAxIGV4YW1wbGVzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQxKCczJykpLnRvRXF1YWwoNjM4KTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAxIGlucHV0JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQxKGlucHV0KSkudG9FcXVhbCgyMDAwKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3BhcnQyJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAyIGV4YW1wbGVzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQxKCczJywgMCkpLnRvRXF1YWwocGFydDIoJzMnLCAyMDE3KSk7XG4gICAgICBleHBlY3QocGFydDEoaW5wdXQsIDApKS50b0VxdWFsKHBhcnQyKGlucHV0LCAyMDE3KSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMiBpbnB1dCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MihpbnB1dCkpLnRvRXF1YWwoMTAyNDI4ODkpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19