{"version":3,"sources":["day23.spec.js"],"names":["input","url","describe","it","expect","join","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,kBADF,EAEE,kBAFF,EAGE,kBAHF,EAIE,kBAJF,EAKE,kBALF,EAME,kBANF,EAOE,kBAPF,EAQE,kBARF,EASE,kBATF,EAUEC,IAVF,CAUO,IAVP,CADF,CADI,CAAN,CAcEC,OAdF,CAcU,CAdV;AAeD,KAhBC,CAAF;AAkBAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,GAA7B;AACD,KAFC,CAAF;AAGD,GAtBO,CAAR;AAwBAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,qBADF,EAEE,qBAFF,EAGE,qBAHF,EAIE,qBAJF,EAKE,uBALF,EAME,qBANF,EAOEC,IAPF,CAOO,IAPP,CADF,CADI,CAAN,CAWEC,OAXF,CAWU,EAXV;AAYD,KAbC,CAAF;AAeAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,QAA7B;AACD,KAFC,CAAF;AAGD,GAnBO,CAAR;AAoBD,CA7CO,CAAR","sourcesContent":["import { part1, part2 } from './day23.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day23 2018', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(\n          [\n            'pos=<0,0,0>, r=4',\n            'pos=<1,0,0>, r=1',\n            'pos=<4,0,0>, r=3',\n            'pos=<0,2,0>, r=1',\n            'pos=<0,5,0>, r=3',\n            'pos=<0,0,3>, r=1',\n            'pos=<1,1,1>, r=1',\n            'pos=<1,1,2>, r=1',\n            'pos=<1,3,1>, r=1',\n          ].join('\\n'),\n        ),\n      ).toEqual(7);\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(933);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      expect(\n        part2(\n          [\n            'pos=<10,12,12>, r=2',\n            'pos=<12,14,12>, r=2',\n            'pos=<16,12,12>, r=4',\n            'pos=<14,14,14>, r=6',\n            'pos=<50,50,50>, r=200',\n            'pos=<10,10,10>, r=5',\n          ].join('\\n'),\n        ),\n      ).toEqual(36);\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(70887840);\n    });\n  });\n});\n"]}