b95d244adf92536b4fd18e388e265074
"use strict";

var _day = require("./day01.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day01 2018', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)('+1, +1, +1'.split(', ').join('\n'))).toEqual(3);
      expect((0, _day.part1)('+1, +1, -2'.split(', ').join('\n'))).toEqual(0);
      expect((0, _day.part1)('-1, -2, -3'.split(', ').join('\n'))).toEqual(-6);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(531);
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples', () => {
      expect((0, _day.part2)('+1, -1'.split(', ').join('\n'))).toEqual(0);
      expect((0, _day.part2)('+3, +3, +4, -2, -4'.split(', ').join('\n'))).toEqual(10);
      expect((0, _day.part2)('-6, +3, +8, +5, -6'.split(', ').join('\n'))).toEqual(5);
      expect((0, _day.part2)('+7, +7, -2, -7, -4'.split(', ').join('\n'))).toEqual(14);
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(76787);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTAxLnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0Iiwic3BsaXQiLCJqb2luIiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7OztBQUVBLE1BQU1BLEtBQUssR0FBRyx3QkFBVSxLQUFZQyxHQUF0QixDQUFkO0FBRUFDLFFBQVEsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUMzQkEsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLGFBQWFDLEtBQWIsQ0FBbUIsSUFBbkIsRUFBeUJDLElBQXpCLENBQThCLElBQTlCLENBQU4sQ0FBRCxDQUFOLENBQW1EQyxPQUFuRCxDQUEyRCxDQUEzRDtBQUNBSCxNQUFBQSxNQUFNLENBQUMsZ0JBQU0sYUFBYUMsS0FBYixDQUFtQixJQUFuQixFQUF5QkMsSUFBekIsQ0FBOEIsSUFBOUIsQ0FBTixDQUFELENBQU4sQ0FBbURDLE9BQW5ELENBQTJELENBQTNEO0FBQ0FILE1BQUFBLE1BQU0sQ0FBQyxnQkFBTSxhQUFhQyxLQUFiLENBQW1CLElBQW5CLEVBQXlCQyxJQUF6QixDQUE4QixJQUE5QixDQUFOLENBQUQsQ0FBTixDQUFtREMsT0FBbkQsQ0FBMkQsQ0FBQyxDQUE1RDtBQUNELEtBSkMsQ0FBRjtBQU1BSixJQUFBQSxFQUFFLENBQUMsOEJBQUQsRUFBaUMsTUFBTTtBQUN2Q0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNSixLQUFOLENBQUQsQ0FBTixDQUFxQk8sT0FBckIsQ0FBNkIsR0FBN0I7QUFDRCxLQUZDLENBQUY7QUFHRCxHQVZPLENBQVI7QUFZQUwsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLFNBQVNDLEtBQVQsQ0FBZSxJQUFmLEVBQXFCQyxJQUFyQixDQUEwQixJQUExQixDQUFOLENBQUQsQ0FBTixDQUErQ0MsT0FBL0MsQ0FBdUQsQ0FBdkQ7QUFDQUgsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLHFCQUFxQkMsS0FBckIsQ0FBMkIsSUFBM0IsRUFBaUNDLElBQWpDLENBQXNDLElBQXRDLENBQU4sQ0FBRCxDQUFOLENBQTJEQyxPQUEzRCxDQUFtRSxFQUFuRTtBQUNBSCxNQUFBQSxNQUFNLENBQUMsZ0JBQU0scUJBQXFCQyxLQUFyQixDQUEyQixJQUEzQixFQUFpQ0MsSUFBakMsQ0FBc0MsSUFBdEMsQ0FBTixDQUFELENBQU4sQ0FBMkRDLE9BQTNELENBQW1FLENBQW5FO0FBQ0FILE1BQUFBLE1BQU0sQ0FBQyxnQkFBTSxxQkFBcUJDLEtBQXJCLENBQTJCLElBQTNCLEVBQWlDQyxJQUFqQyxDQUFzQyxJQUF0QyxDQUFOLENBQUQsQ0FBTixDQUEyREMsT0FBM0QsQ0FBbUUsRUFBbkU7QUFDRCxLQUxDLENBQUY7QUFPQUosSUFBQUEsRUFBRSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDdkNDLE1BQUFBLE1BQU0sQ0FBQyxnQkFBTUosS0FBTixDQUFELENBQU4sQ0FBcUJPLE9BQXJCLENBQTZCLEtBQTdCO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0FYTyxDQUFSO0FBWUQsQ0F6Qk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnQxLCBwYXJ0MiB9IGZyb20gJy4vZGF5MDEuanMnO1xuaW1wb3J0IHJlYWRJbnB1dCBmcm9tICcuLi91dGlscy9yZWFkLWlucHV0JztcblxuY29uc3QgaW5wdXQgPSByZWFkSW5wdXQoaW1wb3J0Lm1ldGEudXJsKTtcblxuZGVzY3JpYmUoJ2RheTAxIDIwMTgnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdwYXJ0MScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBleGFtcGxlcycsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MSgnKzEsICsxLCArMScuc3BsaXQoJywgJykuam9pbignXFxuJykpKS50b0VxdWFsKDMpO1xuICAgICAgZXhwZWN0KHBhcnQxKCcrMSwgKzEsIC0yJy5zcGxpdCgnLCAnKS5qb2luKCdcXG4nKSkpLnRvRXF1YWwoMCk7XG4gICAgICBleHBlY3QocGFydDEoJy0xLCAtMiwgLTMnLnNwbGl0KCcsICcpLmpvaW4oJ1xcbicpKSkudG9FcXVhbCgtNik7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBpbnB1dCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MShpbnB1dCkpLnRvRXF1YWwoNTMxKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3BhcnQyJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAyIGV4YW1wbGVzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQyKCcrMSwgLTEnLnNwbGl0KCcsICcpLmpvaW4oJ1xcbicpKSkudG9FcXVhbCgwKTtcbiAgICAgIGV4cGVjdChwYXJ0MignKzMsICszLCArNCwgLTIsIC00Jy5zcGxpdCgnLCAnKS5qb2luKCdcXG4nKSkpLnRvRXF1YWwoMTApO1xuICAgICAgZXhwZWN0KHBhcnQyKCctNiwgKzMsICs4LCArNSwgLTYnLnNwbGl0KCcsICcpLmpvaW4oJ1xcbicpKSkudG9FcXVhbCg1KTtcbiAgICAgIGV4cGVjdChwYXJ0MignKzcsICs3LCAtMiwgLTcsIC00Jy5zcGxpdCgnLCAnKS5qb2luKCdcXG4nKSkpLnRvRXF1YWwoMTQpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDIgaW5wdXQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QocGFydDIoaW5wdXQpKS50b0VxdWFsKDc2Nzg3KTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==