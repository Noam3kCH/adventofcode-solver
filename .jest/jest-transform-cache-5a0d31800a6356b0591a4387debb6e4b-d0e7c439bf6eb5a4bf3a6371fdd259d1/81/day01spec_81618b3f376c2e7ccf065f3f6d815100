5d69544dd18d17626bad2c68c7409f99
"use strict";

var _day = require("./day01.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day01 2019', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)('12')).toEqual(2);
      expect((0, _day.part1)('14')).toEqual(2);
      expect((0, _day.part1)('1969')).toEqual(654);
      expect((0, _day.part1)('100756')).toEqual(33583);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(3287899);
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples', () => {
      expect((0, _day.part2)('14')).toEqual(2);
      expect((0, _day.part2)('1969')).toEqual(966);
      expect((0, _day.part2)('100756')).toEqual(50346);
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(4928963);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTAxLnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7OztBQUVBLE1BQU1BLEtBQUssR0FBRyx3QkFBVSxLQUFZQyxHQUF0QixDQUFkO0FBRUFDLFFBQVEsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUMzQkEsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLElBQU4sQ0FBRCxDQUFOLENBQW9CQyxPQUFwQixDQUE0QixDQUE1QjtBQUNBRCxNQUFBQSxNQUFNLENBQUMsZ0JBQU0sSUFBTixDQUFELENBQU4sQ0FBb0JDLE9BQXBCLENBQTRCLENBQTVCO0FBQ0FELE1BQUFBLE1BQU0sQ0FBQyxnQkFBTSxNQUFOLENBQUQsQ0FBTixDQUFzQkMsT0FBdEIsQ0FBOEIsR0FBOUI7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLFFBQU4sQ0FBRCxDQUFOLENBQXdCQyxPQUF4QixDQUFnQyxLQUFoQztBQUNELEtBTEMsQ0FBRjtBQU9BRixJQUFBQSxFQUFFLENBQUMsOEJBQUQsRUFBaUMsTUFBTTtBQUN2Q0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNSixLQUFOLENBQUQsQ0FBTixDQUFxQkssT0FBckIsQ0FBNkIsT0FBN0I7QUFDRCxLQUZDLENBQUY7QUFHRCxHQVhPLENBQVI7QUFhQUgsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLElBQU4sQ0FBRCxDQUFOLENBQW9CQyxPQUFwQixDQUE0QixDQUE1QjtBQUNBRCxNQUFBQSxNQUFNLENBQUMsZ0JBQU0sTUFBTixDQUFELENBQU4sQ0FBc0JDLE9BQXRCLENBQThCLEdBQTlCO0FBQ0FELE1BQUFBLE1BQU0sQ0FBQyxnQkFBTSxRQUFOLENBQUQsQ0FBTixDQUF3QkMsT0FBeEIsQ0FBZ0MsS0FBaEM7QUFDRCxLQUpDLENBQUY7QUFNQUYsSUFBQUEsRUFBRSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDdkNDLE1BQUFBLE1BQU0sQ0FBQyxnQkFBTUosS0FBTixDQUFELENBQU4sQ0FBcUJLLE9BQXJCLENBQTZCLE9BQTdCO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0FWTyxDQUFSO0FBV0QsQ0F6Qk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnQxLCBwYXJ0MiB9IGZyb20gJy4vZGF5MDEuanMnO1xuaW1wb3J0IHJlYWRJbnB1dCBmcm9tICcuLi91dGlscy9yZWFkLWlucHV0JztcblxuY29uc3QgaW5wdXQgPSByZWFkSW5wdXQoaW1wb3J0Lm1ldGEudXJsKTtcblxuZGVzY3JpYmUoJ2RheTAxIDIwMTknLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdwYXJ0MScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBleGFtcGxlcycsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MSgnMTInKSkudG9FcXVhbCgyKTtcbiAgICAgIGV4cGVjdChwYXJ0MSgnMTQnKSkudG9FcXVhbCgyKTtcbiAgICAgIGV4cGVjdChwYXJ0MSgnMTk2OScpKS50b0VxdWFsKDY1NCk7XG4gICAgICBleHBlY3QocGFydDEoJzEwMDc1NicpKS50b0VxdWFsKDMzNTgzKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAxIGlucHV0JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQxKGlucHV0KSkudG9FcXVhbCgzMjg3ODk5KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3BhcnQyJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAyIGV4YW1wbGVzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQyKCcxNCcpKS50b0VxdWFsKDIpO1xuICAgICAgZXhwZWN0KHBhcnQyKCcxOTY5JykpLnRvRXF1YWwoOTY2KTtcbiAgICAgIGV4cGVjdChwYXJ0MignMTAwNzU2JykpLnRvRXF1YWwoNTAzNDYpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDIgaW5wdXQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QocGFydDIoaW5wdXQpKS50b0VxdWFsKDQ5Mjg5NjMpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19