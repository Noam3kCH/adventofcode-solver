{"version":3,"sources":["day04.spec.js"],"names":["input","url","describe","it","expect","join","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,iBAArC,EAAwDC,IAAxD,CAA6D,IAA7D,CADF,CADI,CAAN,CAIEC,OAJF,CAIU,CAJV;AAKD,KANC,CAAF;AAQAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,GAA7B;AACD,KAFC,CAAF;AAGD,GAZO,CAAR;AAcAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,aADF,EAEE,iBAFF,EAGE,sBAHF,EAIE,0BAJF,EAKE,qBALF,EAMEC,IANF,CAMO,IANP,CADF,CADI,CAAN,CAUEC,OAVF,CAUU,CAVV;AAWD,KAZC,CAAF;AAcAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,GAA7B;AACD,KAFC,CAAF;AAGD,GAlBO,CAAR;AAmBD,CAlCO,CAAR","sourcesContent":["import { part1, part2 } from './day04.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day04 2017', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(\n          ['aa bb cc dd ee', 'aa bb cc dd aa', 'aa bb cc dd aaa'].join('\\n'),\n        ),\n      ).toEqual(2);\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(325);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      expect(\n        part2(\n          [\n            'abcde fghij',\n            'abcde xyz ecdab',\n            'a ab abc abd abf abj',\n            'iiii oiii ooii oooi oooo',\n            'oiii ioii iioi iiio',\n          ].join('\\n'),\n        ),\n      ).toEqual(3);\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(119);\n    });\n  });\n});\n"]}