{"version":3,"sources":["day25.js"],"names":["toReducer","str","params","split","ops","cpy","src","register","state","undefined","parseInt","inc","dec","jnz","distance","index","out","cmd","shift","run","commands","length","part1","input","map","a","b","c","d","part2"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,QAAMC,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAU,KAAV,CAAf;AACA,QAAMC,GAAG,GAAG;AACVC,IAAAA,GAAG,EAAE,CAACC,GAAD,EAAMC,QAAN,KAAmBC,KAAK,IAC1BA,KAAK,CAACD,QAAD,CAAL,GAAkBC,KAAK,CAACF,GAAD,CAAL,KAAeG,SAAf,GAA2BC,QAAQ,CAACJ,GAAD,CAAnC,GAA2CE,KAAK,CAACF,GAAD,CAF3D;AAGVK,IAAAA,GAAG,EAAEJ,QAAQ,IAAIC,KAAK,IAAIA,KAAK,CAACD,QAAD,CAAL,EAHhB;AAIVK,IAAAA,GAAG,EAAEL,QAAQ,IAAIC,KAAK,IAAIA,KAAK,CAACD,QAAD,CAAL,EAJhB;AAKVM,IAAAA,GAAG,EAAE,CAACN,QAAD,EAAWO,QAAX,KAAwBN,KAAK,IAAI;AACpC,UACGA,KAAK,CAACD,QAAD,CAAL,KAAoBE,SAApB,IAAiCD,KAAK,CAACD,QAAD,CAAL,KAAoB,CAAtD,IACCC,KAAK,CAACD,QAAD,CAAL,KAAoBE,SAApB,IAAiCF,QAAQ,KAAK,GAFjD,EAGE;AACAO,QAAAA,QAAQ,GACNN,KAAK,CAACM,QAAD,CAAL,KAAoBL,SAApB,GAAgCC,QAAQ,CAACI,QAAD,CAAxC,GAAqDN,KAAK,CAACM,QAAD,CAD5D;AAEAN,QAAAA,KAAK,CAACO,KAAN,IAAeD,QAAQ,GAAG,CAA1B;AACD;AACF,KAdS;AAeVE,IAAAA,GAAG,EAAET,QAAQ,IAAIC,KAAK,IAAKA,KAAK,CAACQ,GAAN,IAAaR,KAAK,CAACD,QAAD;AAfnC,GAAZ;AAiBA,QAAMU,GAAG,GAAGb,GAAG,CAACF,MAAM,CAACgB,KAAP,EAAD,CAAH,CAAoB,GAAGhB,MAAvB,CAAZ;AACA,SAAOM,KAAK,IAAI;AACdS,IAAAA,GAAG,CAACT,KAAD,CAAH;AACAA,IAAAA,KAAK,CAACO,KAAN;AACD,GAHD;AAID;;AAED,SAASI,GAAT,CAAaC,QAAb,EAAuBZ,KAAvB,EAA8B;AAC5B,SAAOY,QAAQ,CAACC,MAAT,GAAkBb,KAAK,CAACO,KAAxB,IAAiCP,KAAK,CAACQ,GAAN,CAAUK,MAAV,GAAmB,GAA3D,EAAgE;AAC9DD,IAAAA,QAAQ,CAACZ,KAAK,CAACO,KAAP,CAAR,CAAsBP,KAAtB;AACD;;AACD,SAAOA,KAAP;AACD;;AAEM,SAASc,KAAT,CAAeC,KAAf,EAAsB;AAC3B,QAAMH,QAAQ,GAAGG,KAAK,CAACpB,KAAN,CAAY,IAAZ,EAAkBqB,GAAlB,CAAsBxB,SAAtB,CAAjB;AACA,MAAIyB,CAAC,GAAG,CAAR;;AACA,SACEN,GAAG,CAACC,QAAD,EAAW;AAAEK,IAAAA,CAAF;AAAKC,IAAAA,CAAC,EAAE,CAAR;AAAWC,IAAAA,CAAC,EAAE,CAAd;AAAiBC,IAAAA,CAAC,EAAE,CAApB;AAAuBb,IAAAA,KAAK,EAAE,CAA9B;AAAiCC,IAAAA,GAAG,EAAE;AAAtC,GAAX,CAAH,CAA0DA,GAA1D,KACA,sGAFF,EAGE;AACAS,IAAAA,CAAC;AACF;;AACD,SAAOA,CAAP;AACD;;AAEM,MAAMI,KAAK,GAAG,MAAMpB,SAApB","sourcesContent":["function toReducer(str) {\n  const params = str.split(/\\s+/);\n  const ops = {\n    cpy: (src, register) => state =>\n      (state[register] = state[src] === undefined ? parseInt(src) : state[src]),\n    inc: register => state => state[register]++,\n    dec: register => state => state[register]--,\n    jnz: (register, distance) => state => {\n      if (\n        (state[register] !== undefined && state[register] !== 0) ||\n        (state[register] === undefined && register !== '0')\n      ) {\n        distance =\n          state[distance] === undefined ? parseInt(distance) : state[distance];\n        state.index += distance - 1;\n      }\n    },\n    out: register => state => (state.out += state[register]),\n  };\n  const cmd = ops[params.shift()](...params);\n  return state => {\n    cmd(state);\n    state.index++;\n  };\n}\n\nfunction run(commands, state) {\n  while (commands.length > state.index && state.out.length < 100) {\n    commands[state.index](state);\n  }\n  return state;\n}\n\nexport function part1(input) {\n  const commands = input.split('\\n').map(toReducer);\n  let a = 0;\n  while (\n    run(commands, { a, b: 0, c: 0, d: 0, index: 0, out: '' }).out !==\n    '0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101'\n  ) {\n    a++;\n  }\n  return a;\n}\n\nexport const part2 = () => undefined;\n"]}