{"version":3,"sources":["day12.spec.js"],"names":["input","url","describe","it","expect","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CAAC,gBAAM,SAAN,CAAD,CAAN,CAAyBC,OAAzB,CAAiC,CAAjC;AACAD,MAAAA,MAAM,CAAC,gBAAM,eAAN,CAAD,CAAN,CAA+BC,OAA/B,CAAuC,CAAvC;AACAD,MAAAA,MAAM,CAAC,gBAAM,SAAN,CAAD,CAAN,CAAyBC,OAAzB,CAAiC,CAAjC;AACAD,MAAAA,MAAM,CAAC,gBAAM,sBAAN,CAAD,CAAN,CAAsCC,OAAtC,CAA8C,CAA9C;AACAD,MAAAA,MAAM,CAAC,gBAAM,cAAN,CAAD,CAAN,CAA8BC,OAA9B,CAAsC,CAAtC;AACAD,MAAAA,MAAM,CAAC,gBAAM,cAAN,CAAD,CAAN,CAA8BC,OAA9B,CAAsC,CAAtC;AACAD,MAAAA,MAAM,CAAC,gBAAM,IAAN,CAAD,CAAN,CAAoBC,OAApB,CAA4B,CAA5B;AACAD,MAAAA,MAAM,CAAC,gBAAM,IAAN,CAAD,CAAN,CAAoBC,OAApB,CAA4B,CAA5B;AACD,KATC,CAAF;AAWAF,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBK,OAArB,CAA6B,MAA7B;AACD,KAFC,CAAF;AAGD,GAfO,CAAR;AAiBAH,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CAAC,gBAAM,SAAN,CAAD,CAAN,CAAyBC,OAAzB,CAAiC,CAAjC;AACAD,MAAAA,MAAM,CAAC,gBAAM,yBAAN,CAAD,CAAN,CAAyCC,OAAzC,CAAiD,CAAjD;AACAD,MAAAA,MAAM,CAAC,gBAAM,iCAAN,CAAD,CAAN,CAAiDC,OAAjD,CAAyD,CAAzD;AACAD,MAAAA,MAAM,CAAC,gBAAM,aAAN,CAAD,CAAN,CAA6BC,OAA7B,CAAqC,CAArC;AACD,KALC,CAAF;AAOAF,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBK,OAArB,CAA6B,KAA7B;AACD,KAFC,CAAF;AAGD,GAXO,CAAR;AAYD,CA9BO,CAAR","sourcesContent":["import { part1, part2 } from './day12.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day12 2015', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(part1('[1,2,3]')).toEqual(6);\n      expect(part1('{\"a\":2,\"b\":4}')).toEqual(6);\n      expect(part1('[[[3]]]')).toEqual(3);\n      expect(part1('{\"a\":{\"b\":4},\"c\":-1}')).toEqual(3);\n      expect(part1('{\"a\":[-1,1]}')).toEqual(0);\n      expect(part1('[-1,{\"a\":1}]')).toEqual(0);\n      expect(part1('[]')).toEqual(0);\n      expect(part1('{}')).toEqual(0);\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(119433);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      expect(part2('[1,2,3]')).toEqual(6);\n      expect(part2('[1,{\"c\":\"red\",\"b\":2},3]')).toEqual(4);\n      expect(part2('{\"d\":\"red\",\"e\":[1,2,3,4],\"f\":5}')).toEqual(0);\n      expect(part2('[1,\"red\",5]')).toEqual(6);\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(68466);\n    });\n  });\n});\n"]}