2c4b3b222b9f25a18b197bc84fa79468
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.part1 = part1;
exports.part2 = part2;

function longest(graph, curr, visited) {
  const paths = Object.keys(graph[curr]).filter(node => visited.indexOf(node) === -1).map(node => graph[curr][node] + longest(graph, node, visited.concat(curr)));
  return paths.length ? Math.max.apply(Math, paths) : graph[curr][visited[0]] || 0;
}

function parse(input) {
  const signs = {
    gain: +1,
    lose: -1
  };
  const graph = input.split('\n').map(x => x.match(/^(.*) would (gain|lose) (\d+) happiness .* next to (.*)\.$/)).map(x => ({
    p1: x[1],
    p2: x[4],
    d: signs[x[2]] * parseInt(x[3])
  })).reduce((graph, edge) => {
    const prev = graph[edge.p1] && graph[edge.p1][edge.p2] || 0;
    graph[edge.p1] = { ...graph[edge.p1],
      [edge.p2]: edge.d + prev
    };
    graph[edge.p2] = { ...graph[edge.p2],
      [edge.p1]: edge.d + prev
    };
    return graph;
  }, {});
  graph.$$me = Object.keys(graph).reduce((obj, key) => ({
    [key]: 0,
    ...obj
  }), {});
  return graph;
}

function part1(input) {
  const graph = parse(input);
  return longest(graph, Object.keys(graph).shift(), []);
}

function part2(input) {
  const graph = parse(input);
  return longest(graph, '$$me', []);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTEzLmpzIl0sIm5hbWVzIjpbImxvbmdlc3QiLCJncmFwaCIsImN1cnIiLCJ2aXNpdGVkIiwicGF0aHMiLCJPYmplY3QiLCJrZXlzIiwiZmlsdGVyIiwibm9kZSIsImluZGV4T2YiLCJtYXAiLCJjb25jYXQiLCJsZW5ndGgiLCJNYXRoIiwibWF4IiwiYXBwbHkiLCJwYXJzZSIsImlucHV0Iiwic2lnbnMiLCJnYWluIiwibG9zZSIsInNwbGl0IiwieCIsIm1hdGNoIiwicDEiLCJwMiIsImQiLCJwYXJzZUludCIsInJlZHVjZSIsImVkZ2UiLCJwcmV2IiwiJCRtZSIsIm9iaiIsImtleSIsInBhcnQxIiwic2hpZnQiLCJwYXJ0MiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxTQUFTQSxPQUFULENBQWlCQyxLQUFqQixFQUF3QkMsSUFBeEIsRUFBOEJDLE9BQTlCLEVBQXVDO0FBQ3JDLFFBQU1DLEtBQUssR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlMLEtBQUssQ0FBQ0MsSUFBRCxDQUFqQixFQUNYSyxNQURXLENBQ0pDLElBQUksSUFBSUwsT0FBTyxDQUFDTSxPQUFSLENBQWdCRCxJQUFoQixNQUEwQixDQUFDLENBRC9CLEVBRVhFLEdBRlcsQ0FHVkYsSUFBSSxJQUFJUCxLQUFLLENBQUNDLElBQUQsQ0FBTCxDQUFZTSxJQUFaLElBQW9CUixPQUFPLENBQUNDLEtBQUQsRUFBUU8sSUFBUixFQUFjTCxPQUFPLENBQUNRLE1BQVIsQ0FBZVQsSUFBZixDQUFkLENBSHpCLENBQWQ7QUFLQSxTQUFPRSxLQUFLLENBQUNRLE1BQU4sR0FDSEMsSUFBSSxDQUFDQyxHQUFMLENBQVNDLEtBQVQsQ0FBZUYsSUFBZixFQUFxQlQsS0FBckIsQ0FERyxHQUVISCxLQUFLLENBQUNDLElBQUQsQ0FBTCxDQUFZQyxPQUFPLENBQUMsQ0FBRCxDQUFuQixLQUEyQixDQUYvQjtBQUdEOztBQUVELFNBQVNhLEtBQVQsQ0FBZUMsS0FBZixFQUFzQjtBQUNwQixRQUFNQyxLQUFLLEdBQUc7QUFBRUMsSUFBQUEsSUFBSSxFQUFFLENBQUMsQ0FBVDtBQUFZQyxJQUFBQSxJQUFJLEVBQUUsQ0FBQztBQUFuQixHQUFkO0FBQ0EsUUFBTW5CLEtBQUssR0FBR2dCLEtBQUssQ0FDaEJJLEtBRFcsQ0FDTCxJQURLLEVBRVhYLEdBRlcsQ0FFUFksQ0FBQyxJQUNKQSxDQUFDLENBQUNDLEtBQUYsQ0FBUSw0REFBUixDQUhVLEVBS1hiLEdBTFcsQ0FLUFksQ0FBQyxLQUFLO0FBQUVFLElBQUFBLEVBQUUsRUFBRUYsQ0FBQyxDQUFDLENBQUQsQ0FBUDtBQUFZRyxJQUFBQSxFQUFFLEVBQUVILENBQUMsQ0FBQyxDQUFELENBQWpCO0FBQXNCSSxJQUFBQSxDQUFDLEVBQUVSLEtBQUssQ0FBQ0ksQ0FBQyxDQUFDLENBQUQsQ0FBRixDQUFMLEdBQWNLLFFBQVEsQ0FBQ0wsQ0FBQyxDQUFDLENBQUQsQ0FBRjtBQUEvQyxHQUFMLENBTE0sRUFNWE0sTUFOVyxDQU1KLENBQUMzQixLQUFELEVBQVE0QixJQUFSLEtBQWlCO0FBQ3ZCLFVBQU1DLElBQUksR0FBSTdCLEtBQUssQ0FBQzRCLElBQUksQ0FBQ0wsRUFBTixDQUFMLElBQWtCdkIsS0FBSyxDQUFDNEIsSUFBSSxDQUFDTCxFQUFOLENBQUwsQ0FBZUssSUFBSSxDQUFDSixFQUFwQixDQUFuQixJQUErQyxDQUE1RDtBQUNBeEIsSUFBQUEsS0FBSyxDQUFDNEIsSUFBSSxDQUFDTCxFQUFOLENBQUwsR0FBaUIsRUFBRSxHQUFHdkIsS0FBSyxDQUFDNEIsSUFBSSxDQUFDTCxFQUFOLENBQVY7QUFBcUIsT0FBQ0ssSUFBSSxDQUFDSixFQUFOLEdBQVdJLElBQUksQ0FBQ0gsQ0FBTCxHQUFTSTtBQUF6QyxLQUFqQjtBQUNBN0IsSUFBQUEsS0FBSyxDQUFDNEIsSUFBSSxDQUFDSixFQUFOLENBQUwsR0FBaUIsRUFBRSxHQUFHeEIsS0FBSyxDQUFDNEIsSUFBSSxDQUFDSixFQUFOLENBQVY7QUFBcUIsT0FBQ0ksSUFBSSxDQUFDTCxFQUFOLEdBQVdLLElBQUksQ0FBQ0gsQ0FBTCxHQUFTSTtBQUF6QyxLQUFqQjtBQUNBLFdBQU83QixLQUFQO0FBQ0QsR0FYVyxFQVdULEVBWFMsQ0FBZDtBQVlBQSxFQUFBQSxLQUFLLENBQUM4QixJQUFOLEdBQWExQixNQUFNLENBQUNDLElBQVAsQ0FBWUwsS0FBWixFQUFtQjJCLE1BQW5CLENBQ1gsQ0FBQ0ksR0FBRCxFQUFNQyxHQUFOLE1BQWU7QUFBRSxLQUFDQSxHQUFELEdBQU8sQ0FBVDtBQUFZLE9BQUdEO0FBQWYsR0FBZixDQURXLEVBRVgsRUFGVyxDQUFiO0FBSUEsU0FBTy9CLEtBQVA7QUFDRDs7QUFFTSxTQUFTaUMsS0FBVCxDQUFlakIsS0FBZixFQUFzQjtBQUMzQixRQUFNaEIsS0FBSyxHQUFHZSxLQUFLLENBQUNDLEtBQUQsQ0FBbkI7QUFDQSxTQUFPakIsT0FBTyxDQUFDQyxLQUFELEVBQVFJLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZTCxLQUFaLEVBQW1Ca0MsS0FBbkIsRUFBUixFQUFvQyxFQUFwQyxDQUFkO0FBQ0Q7O0FBRU0sU0FBU0MsS0FBVCxDQUFlbkIsS0FBZixFQUFzQjtBQUMzQixRQUFNaEIsS0FBSyxHQUFHZSxLQUFLLENBQUNDLEtBQUQsQ0FBbkI7QUFDQSxTQUFPakIsT0FBTyxDQUFDQyxLQUFELEVBQVEsTUFBUixFQUFnQixFQUFoQixDQUFkO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBsb25nZXN0KGdyYXBoLCBjdXJyLCB2aXNpdGVkKSB7XG4gIGNvbnN0IHBhdGhzID0gT2JqZWN0LmtleXMoZ3JhcGhbY3Vycl0pXG4gICAgLmZpbHRlcihub2RlID0+IHZpc2l0ZWQuaW5kZXhPZihub2RlKSA9PT0gLTEpXG4gICAgLm1hcChcbiAgICAgIG5vZGUgPT4gZ3JhcGhbY3Vycl1bbm9kZV0gKyBsb25nZXN0KGdyYXBoLCBub2RlLCB2aXNpdGVkLmNvbmNhdChjdXJyKSksXG4gICAgKTtcbiAgcmV0dXJuIHBhdGhzLmxlbmd0aFxuICAgID8gTWF0aC5tYXguYXBwbHkoTWF0aCwgcGF0aHMpXG4gICAgOiBncmFwaFtjdXJyXVt2aXNpdGVkWzBdXSB8fCAwO1xufVxuXG5mdW5jdGlvbiBwYXJzZShpbnB1dCkge1xuICBjb25zdCBzaWducyA9IHsgZ2FpbjogKzEsIGxvc2U6IC0xIH07XG4gIGNvbnN0IGdyYXBoID0gaW5wdXRcbiAgICAuc3BsaXQoJ1xcbicpXG4gICAgLm1hcCh4ID0+XG4gICAgICB4Lm1hdGNoKC9eKC4qKSB3b3VsZCAoZ2Fpbnxsb3NlKSAoXFxkKykgaGFwcGluZXNzIC4qIG5leHQgdG8gKC4qKVxcLiQvKSxcbiAgICApXG4gICAgLm1hcCh4ID0+ICh7IHAxOiB4WzFdLCBwMjogeFs0XSwgZDogc2lnbnNbeFsyXV0gKiBwYXJzZUludCh4WzNdKSB9KSlcbiAgICAucmVkdWNlKChncmFwaCwgZWRnZSkgPT4ge1xuICAgICAgY29uc3QgcHJldiA9IChncmFwaFtlZGdlLnAxXSAmJiBncmFwaFtlZGdlLnAxXVtlZGdlLnAyXSkgfHwgMDtcbiAgICAgIGdyYXBoW2VkZ2UucDFdID0geyAuLi5ncmFwaFtlZGdlLnAxXSwgW2VkZ2UucDJdOiBlZGdlLmQgKyBwcmV2IH07XG4gICAgICBncmFwaFtlZGdlLnAyXSA9IHsgLi4uZ3JhcGhbZWRnZS5wMl0sIFtlZGdlLnAxXTogZWRnZS5kICsgcHJldiB9O1xuICAgICAgcmV0dXJuIGdyYXBoO1xuICAgIH0sIHt9KTtcbiAgZ3JhcGguJCRtZSA9IE9iamVjdC5rZXlzKGdyYXBoKS5yZWR1Y2UoXG4gICAgKG9iaiwga2V5KSA9PiAoeyBba2V5XTogMCwgLi4ub2JqIH0pLFxuICAgIHt9LFxuICApO1xuICByZXR1cm4gZ3JhcGg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJ0MShpbnB1dCkge1xuICBjb25zdCBncmFwaCA9IHBhcnNlKGlucHV0KTtcbiAgcmV0dXJuIGxvbmdlc3QoZ3JhcGgsIE9iamVjdC5rZXlzKGdyYXBoKS5zaGlmdCgpLCBbXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJ0MihpbnB1dCkge1xuICBjb25zdCBncmFwaCA9IHBhcnNlKGlucHV0KTtcbiAgcmV0dXJuIGxvbmdlc3QoZ3JhcGgsICckJG1lJywgW10pO1xufVxuIl19