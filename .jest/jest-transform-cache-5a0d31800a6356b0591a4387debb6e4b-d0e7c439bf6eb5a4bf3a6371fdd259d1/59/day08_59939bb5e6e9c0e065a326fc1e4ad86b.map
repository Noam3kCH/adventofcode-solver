{"version":3,"sources":["day08.js"],"names":["value","arr","part1","childCount","metaCount","splice","children","Array","fill","map","result","concat","x","reduce","sum","input","split","parseInt","part2"],"mappings":";;;;;;;;AAAA,SAASA,KAAT,CAAeC,GAAf,EAAoBC,KAAK,GAAG,KAA5B,EAAmC;AACjC,QAAM,CAACC,UAAD,EAAaC,SAAb,IAA0BH,GAAG,CAACI,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAhC;AACA,QAAMC,QAAQ,GAAG,IAAIC,KAAJ,CAAUJ,UAAV,EAAsBK,IAAtB,GAA6BC,GAA7B,CAAiC,MAAMT,KAAK,CAACC,GAAD,EAAMC,KAAN,CAA5C,CAAjB;AACA,MAAIQ,MAAM,GAAGT,GAAG,CAACI,MAAJ,CAAW,CAAX,EAAcD,SAAd,CAAb;;AACA,MAAIF,KAAJ,EAAW;AACTQ,IAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAcL,QAAd,CAAT;AACD,GAFD,MAEO,IAAIH,UAAU,GAAG,CAAjB,EAAoB;AACzBO,IAAAA,MAAM,GAAGA,MAAM,CAACD,GAAP,CAAWG,CAAC,IAAIN,QAAQ,CAACM,CAAC,GAAG,CAAL,CAAR,IAAmB,CAAnC,CAAT;AACD;;AACD,SAAOF,MAAM,CAACG,MAAP,CAAc,CAACC,GAAD,EAAMF,CAAN,KAAYE,GAAG,GAAGF,CAAhC,EAAmC,CAAnC,CAAP;AACD;;AAEM,SAASV,KAAT,CAAea,KAAf,EAAsB;AAC3B,SAAOf,KAAK,CACVe,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBP,GAAjB,CAAqBG,CAAC,IAAIK,QAAQ,CAACL,CAAD,CAAlC,CADU,EAEV,IAFU,CAAZ;AAID;;AAEM,SAASM,KAAT,CAAeH,KAAf,EAAsB;AAC3B,SAAOf,KAAK,CAACe,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBP,GAAjB,CAAqBG,CAAC,IAAIK,QAAQ,CAACL,CAAD,CAAlC,CAAD,CAAZ;AACD","sourcesContent":["function value(arr, part1 = false) {\n  const [childCount, metaCount] = arr.splice(0, 2);\n  const children = new Array(childCount).fill().map(() => value(arr, part1));\n  let result = arr.splice(0, metaCount);\n  if (part1) {\n    result = result.concat(children);\n  } else if (childCount > 0) {\n    result = result.map(x => children[x - 1] || 0);\n  }\n  return result.reduce((sum, x) => sum + x, 0);\n}\n\nexport function part1(input) {\n  return value(\n    input.split(' ').map(x => parseInt(x)),\n    true,\n  );\n}\n\nexport function part2(input) {\n  return value(input.split(' ').map(x => parseInt(x)));\n}\n"]}