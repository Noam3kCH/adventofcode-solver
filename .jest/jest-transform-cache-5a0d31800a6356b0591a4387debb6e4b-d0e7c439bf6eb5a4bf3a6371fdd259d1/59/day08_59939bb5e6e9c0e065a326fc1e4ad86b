bdebf07fdd50eb5b7834251e8f71e290
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.part1 = part1;
exports.part2 = part2;

function value(arr, part1 = false) {
  const [childCount, metaCount] = arr.splice(0, 2);
  const children = new Array(childCount).fill().map(() => value(arr, part1));
  let result = arr.splice(0, metaCount);

  if (part1) {
    result = result.concat(children);
  } else if (childCount > 0) {
    result = result.map(x => children[x - 1] || 0);
  }

  return result.reduce((sum, x) => sum + x, 0);
}

function part1(input) {
  return value(input.split(' ').map(x => parseInt(x)), true);
}

function part2(input) {
  return value(input.split(' ').map(x => parseInt(x)));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTA4LmpzIl0sIm5hbWVzIjpbInZhbHVlIiwiYXJyIiwicGFydDEiLCJjaGlsZENvdW50IiwibWV0YUNvdW50Iiwic3BsaWNlIiwiY2hpbGRyZW4iLCJBcnJheSIsImZpbGwiLCJtYXAiLCJyZXN1bHQiLCJjb25jYXQiLCJ4IiwicmVkdWNlIiwic3VtIiwiaW5wdXQiLCJzcGxpdCIsInBhcnNlSW50IiwicGFydDIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsU0FBU0EsS0FBVCxDQUFlQyxHQUFmLEVBQW9CQyxLQUFLLEdBQUcsS0FBNUIsRUFBbUM7QUFDakMsUUFBTSxDQUFDQyxVQUFELEVBQWFDLFNBQWIsSUFBMEJILEdBQUcsQ0FBQ0ksTUFBSixDQUFXLENBQVgsRUFBYyxDQUFkLENBQWhDO0FBQ0EsUUFBTUMsUUFBUSxHQUFHLElBQUlDLEtBQUosQ0FBVUosVUFBVixFQUFzQkssSUFBdEIsR0FBNkJDLEdBQTdCLENBQWlDLE1BQU1ULEtBQUssQ0FBQ0MsR0FBRCxFQUFNQyxLQUFOLENBQTVDLENBQWpCO0FBQ0EsTUFBSVEsTUFBTSxHQUFHVCxHQUFHLENBQUNJLE1BQUosQ0FBVyxDQUFYLEVBQWNELFNBQWQsQ0FBYjs7QUFDQSxNQUFJRixLQUFKLEVBQVc7QUFDVFEsSUFBQUEsTUFBTSxHQUFHQSxNQUFNLENBQUNDLE1BQVAsQ0FBY0wsUUFBZCxDQUFUO0FBQ0QsR0FGRCxNQUVPLElBQUlILFVBQVUsR0FBRyxDQUFqQixFQUFvQjtBQUN6Qk8sSUFBQUEsTUFBTSxHQUFHQSxNQUFNLENBQUNELEdBQVAsQ0FBV0csQ0FBQyxJQUFJTixRQUFRLENBQUNNLENBQUMsR0FBRyxDQUFMLENBQVIsSUFBbUIsQ0FBbkMsQ0FBVDtBQUNEOztBQUNELFNBQU9GLE1BQU0sQ0FBQ0csTUFBUCxDQUFjLENBQUNDLEdBQUQsRUFBTUYsQ0FBTixLQUFZRSxHQUFHLEdBQUdGLENBQWhDLEVBQW1DLENBQW5DLENBQVA7QUFDRDs7QUFFTSxTQUFTVixLQUFULENBQWVhLEtBQWYsRUFBc0I7QUFDM0IsU0FBT2YsS0FBSyxDQUNWZSxLQUFLLENBQUNDLEtBQU4sQ0FBWSxHQUFaLEVBQWlCUCxHQUFqQixDQUFxQkcsQ0FBQyxJQUFJSyxRQUFRLENBQUNMLENBQUQsQ0FBbEMsQ0FEVSxFQUVWLElBRlUsQ0FBWjtBQUlEOztBQUVNLFNBQVNNLEtBQVQsQ0FBZUgsS0FBZixFQUFzQjtBQUMzQixTQUFPZixLQUFLLENBQUNlLEtBQUssQ0FBQ0MsS0FBTixDQUFZLEdBQVosRUFBaUJQLEdBQWpCLENBQXFCRyxDQUFDLElBQUlLLFFBQVEsQ0FBQ0wsQ0FBRCxDQUFsQyxDQUFELENBQVo7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHZhbHVlKGFyciwgcGFydDEgPSBmYWxzZSkge1xuICBjb25zdCBbY2hpbGRDb3VudCwgbWV0YUNvdW50XSA9IGFyci5zcGxpY2UoMCwgMik7XG4gIGNvbnN0IGNoaWxkcmVuID0gbmV3IEFycmF5KGNoaWxkQ291bnQpLmZpbGwoKS5tYXAoKCkgPT4gdmFsdWUoYXJyLCBwYXJ0MSkpO1xuICBsZXQgcmVzdWx0ID0gYXJyLnNwbGljZSgwLCBtZXRhQ291bnQpO1xuICBpZiAocGFydDEpIHtcbiAgICByZXN1bHQgPSByZXN1bHQuY29uY2F0KGNoaWxkcmVuKTtcbiAgfSBlbHNlIGlmIChjaGlsZENvdW50ID4gMCkge1xuICAgIHJlc3VsdCA9IHJlc3VsdC5tYXAoeCA9PiBjaGlsZHJlblt4IC0gMV0gfHwgMCk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdC5yZWR1Y2UoKHN1bSwgeCkgPT4gc3VtICsgeCwgMCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJ0MShpbnB1dCkge1xuICByZXR1cm4gdmFsdWUoXG4gICAgaW5wdXQuc3BsaXQoJyAnKS5tYXAoeCA9PiBwYXJzZUludCh4KSksXG4gICAgdHJ1ZSxcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnQyKGlucHV0KSB7XG4gIHJldHVybiB2YWx1ZShpbnB1dC5zcGxpdCgnICcpLm1hcCh4ID0+IHBhcnNlSW50KHgpKSk7XG59XG4iXX0=