{"version":3,"sources":["day06.spec.js"],"names":["input","url","describe","it","expect","join","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,QADF,EAEE,QAFF,EAGE,QAHF,EAIE,QAJF,EAKE,QALF,EAME,QANF,EAOE,QAPF,EAQE,QARF,EASE,QATF,EAUE,QAVF,EAWE,QAXF,EAYE,QAZF,EAaE,QAbF,EAcE,QAdF,EAeE,QAfF,EAgBE,QAhBF,EAiBEC,IAjBF,CAiBO,IAjBP,CADF,CADI,CAAN,CAqBEC,OArBF,CAqBU,QArBV;AAsBD,KAvBC,CAAF;AAyBAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,UAA7B;AACD,KAFC,CAAF;AAGD,GA7BO,CAAR;AA+BAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,QADF,EAEE,QAFF,EAGE,QAHF,EAIE,QAJF,EAKE,QALF,EAME,QANF,EAOE,QAPF,EAQE,QARF,EASE,QATF,EAUE,QAVF,EAWE,QAXF,EAYE,QAZF,EAaE,QAbF,EAcE,QAdF,EAeE,QAfF,EAgBE,QAhBF,EAiBEC,IAjBF,CAiBO,IAjBP,CADF,CADI,CAAN,CAqBEC,OArBF,CAqBU,QArBV;AAsBD,KAvBC,CAAF;AAyBAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,UAA7B;AACD,KAFC,CAAF;AAGD,GA7BO,CAAR;AA8BD,CA9DO,CAAR","sourcesContent":["import { part1, part2 } from './day06.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day06 2016', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(\n          [\n            'eedadn',\n            'drvtee',\n            'eandsr',\n            'raavrd',\n            'atevrs',\n            'tsrnev',\n            'sdttsa',\n            'rasrtv',\n            'nssdts',\n            'ntnada',\n            'svetve',\n            'tesnvt',\n            'vntsnd',\n            'vrdear',\n            'dvrsen',\n            'enarar',\n          ].join('\\n'),\n        ),\n      ).toEqual('easter');\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual('qzedlxso');\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      expect(\n        part2(\n          [\n            'eedadn',\n            'drvtee',\n            'eandsr',\n            'raavrd',\n            'atevrs',\n            'tsrnev',\n            'sdttsa',\n            'rasrtv',\n            'nssdts',\n            'ntnada',\n            'svetve',\n            'tesnvt',\n            'vntsnd',\n            'vrdear',\n            'dvrsen',\n            'enarar',\n          ].join('\\n'),\n        ),\n      ).toEqual('advent');\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual('ucmifjae');\n    });\n  });\n});\n"]}