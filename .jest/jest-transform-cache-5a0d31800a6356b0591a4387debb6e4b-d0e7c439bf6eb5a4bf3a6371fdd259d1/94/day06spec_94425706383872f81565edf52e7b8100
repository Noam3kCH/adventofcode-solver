1a8b6801708ae766ad9d867542bd7722
"use strict";

var _day = require("./day06.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day06 2016', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)(['eedadn', 'drvtee', 'eandsr', 'raavrd', 'atevrs', 'tsrnev', 'sdttsa', 'rasrtv', 'nssdts', 'ntnada', 'svetve', 'tesnvt', 'vntsnd', 'vrdear', 'dvrsen', 'enarar'].join('\n'))).toEqual('easter');
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual('qzedlxso');
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples', () => {
      expect((0, _day.part2)(['eedadn', 'drvtee', 'eandsr', 'raavrd', 'atevrs', 'tsrnev', 'sdttsa', 'rasrtv', 'nssdts', 'ntnada', 'svetve', 'tesnvt', 'vntsnd', 'vrdear', 'dvrsen', 'enarar'].join('\n'))).toEqual('advent');
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual('ucmifjae');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTA2LnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0Iiwiam9pbiIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7Ozs7QUFFQSxNQUFNQSxLQUFLLEdBQUcsd0JBQVUsS0FBWUMsR0FBdEIsQ0FBZDtBQUVBQyxRQUFRLENBQUMsWUFBRCxFQUFlLE1BQU07QUFDM0JBLEVBQUFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBTTtBQUN0QkMsSUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLE1BQU07QUFDMUNDLE1BQUFBLE1BQU0sQ0FDSixnQkFDRSxDQUNFLFFBREYsRUFFRSxRQUZGLEVBR0UsUUFIRixFQUlFLFFBSkYsRUFLRSxRQUxGLEVBTUUsUUFORixFQU9FLFFBUEYsRUFRRSxRQVJGLEVBU0UsUUFURixFQVVFLFFBVkYsRUFXRSxRQVhGLEVBWUUsUUFaRixFQWFFLFFBYkYsRUFjRSxRQWRGLEVBZUUsUUFmRixFQWdCRSxRQWhCRixFQWlCRUMsSUFqQkYsQ0FpQk8sSUFqQlAsQ0FERixDQURJLENBQU4sQ0FxQkVDLE9BckJGLENBcUJVLFFBckJWO0FBc0JELEtBdkJDLENBQUY7QUF5QkFILElBQUFBLEVBQUUsQ0FBQyw4QkFBRCxFQUFpQyxNQUFNO0FBQ3ZDQyxNQUFBQSxNQUFNLENBQUMsZ0JBQU1KLEtBQU4sQ0FBRCxDQUFOLENBQXFCTSxPQUFyQixDQUE2QixVQUE3QjtBQUNELEtBRkMsQ0FBRjtBQUdELEdBN0JPLENBQVI7QUErQkFKLEVBQUFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBTTtBQUN0QkMsSUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLE1BQU07QUFDMUNDLE1BQUFBLE1BQU0sQ0FDSixnQkFDRSxDQUNFLFFBREYsRUFFRSxRQUZGLEVBR0UsUUFIRixFQUlFLFFBSkYsRUFLRSxRQUxGLEVBTUUsUUFORixFQU9FLFFBUEYsRUFRRSxRQVJGLEVBU0UsUUFURixFQVVFLFFBVkYsRUFXRSxRQVhGLEVBWUUsUUFaRixFQWFFLFFBYkYsRUFjRSxRQWRGLEVBZUUsUUFmRixFQWdCRSxRQWhCRixFQWlCRUMsSUFqQkYsQ0FpQk8sSUFqQlAsQ0FERixDQURJLENBQU4sQ0FxQkVDLE9BckJGLENBcUJVLFFBckJWO0FBc0JELEtBdkJDLENBQUY7QUF5QkFILElBQUFBLEVBQUUsQ0FBQyw4QkFBRCxFQUFpQyxNQUFNO0FBQ3ZDQyxNQUFBQSxNQUFNLENBQUMsZ0JBQU1KLEtBQU4sQ0FBRCxDQUFOLENBQXFCTSxPQUFyQixDQUE2QixVQUE3QjtBQUNELEtBRkMsQ0FBRjtBQUdELEdBN0JPLENBQVI7QUE4QkQsQ0E5RE8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnQxLCBwYXJ0MiB9IGZyb20gJy4vZGF5MDYuanMnO1xuaW1wb3J0IHJlYWRJbnB1dCBmcm9tICcuLi91dGlscy9yZWFkLWlucHV0JztcblxuY29uc3QgaW5wdXQgPSByZWFkSW5wdXQoaW1wb3J0Lm1ldGEudXJsKTtcblxuZGVzY3JpYmUoJ2RheTA2IDIwMTYnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdwYXJ0MScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBleGFtcGxlcycsICgpID0+IHtcbiAgICAgIGV4cGVjdChcbiAgICAgICAgcGFydDEoXG4gICAgICAgICAgW1xuICAgICAgICAgICAgJ2VlZGFkbicsXG4gICAgICAgICAgICAnZHJ2dGVlJyxcbiAgICAgICAgICAgICdlYW5kc3InLFxuICAgICAgICAgICAgJ3JhYXZyZCcsXG4gICAgICAgICAgICAnYXRldnJzJyxcbiAgICAgICAgICAgICd0c3JuZXYnLFxuICAgICAgICAgICAgJ3NkdHRzYScsXG4gICAgICAgICAgICAncmFzcnR2JyxcbiAgICAgICAgICAgICduc3NkdHMnLFxuICAgICAgICAgICAgJ250bmFkYScsXG4gICAgICAgICAgICAnc3ZldHZlJyxcbiAgICAgICAgICAgICd0ZXNudnQnLFxuICAgICAgICAgICAgJ3ZudHNuZCcsXG4gICAgICAgICAgICAndnJkZWFyJyxcbiAgICAgICAgICAgICdkdnJzZW4nLFxuICAgICAgICAgICAgJ2VuYXJhcicsXG4gICAgICAgICAgXS5qb2luKCdcXG4nKSxcbiAgICAgICAgKSxcbiAgICAgICkudG9FcXVhbCgnZWFzdGVyJyk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBpbnB1dCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MShpbnB1dCkpLnRvRXF1YWwoJ3F6ZWRseHNvJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdwYXJ0MicsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMiBleGFtcGxlcycsICgpID0+IHtcbiAgICAgIGV4cGVjdChcbiAgICAgICAgcGFydDIoXG4gICAgICAgICAgW1xuICAgICAgICAgICAgJ2VlZGFkbicsXG4gICAgICAgICAgICAnZHJ2dGVlJyxcbiAgICAgICAgICAgICdlYW5kc3InLFxuICAgICAgICAgICAgJ3JhYXZyZCcsXG4gICAgICAgICAgICAnYXRldnJzJyxcbiAgICAgICAgICAgICd0c3JuZXYnLFxuICAgICAgICAgICAgJ3NkdHRzYScsXG4gICAgICAgICAgICAncmFzcnR2JyxcbiAgICAgICAgICAgICduc3NkdHMnLFxuICAgICAgICAgICAgJ250bmFkYScsXG4gICAgICAgICAgICAnc3ZldHZlJyxcbiAgICAgICAgICAgICd0ZXNudnQnLFxuICAgICAgICAgICAgJ3ZudHNuZCcsXG4gICAgICAgICAgICAndnJkZWFyJyxcbiAgICAgICAgICAgICdkdnJzZW4nLFxuICAgICAgICAgICAgJ2VuYXJhcicsXG4gICAgICAgICAgXS5qb2luKCdcXG4nKSxcbiAgICAgICAgKSxcbiAgICAgICkudG9FcXVhbCgnYWR2ZW50Jyk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMiBpbnB1dCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MihpbnB1dCkpLnRvRXF1YWwoJ3VjbWlmamFlJyk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=