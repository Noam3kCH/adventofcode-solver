{"version":3,"sources":["day22.js"],"names":["spells","Missile","mana","effect","game","boss","hit","turns","Drain","hero","Shield","armor","Poison","Recharge","canSpell","spell","active","runSpells","castSpell","playBoss","Math","max","damage","memoize","fn","memo","x","s","JSON","stringify","play","Infinity","min","move","parse","input","initialHit","initialMana","match","parseInt","Object","keys","reduce","obj","part1","part2","state"],"mappings":"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","sourcesContent":["const spells = {\n  Missile: {\n    mana: 53,\n    effect: game => {\n      return { ...game, boss: { ...game.boss, hit: game.boss.hit - 4 } };\n    },\n    turns: 1,\n  },\n  Drain: {\n    mana: 73,\n    effect: game => {\n      return {\n        ...game,\n        boss: { ...game.boss, hit: game.boss.hit - 2 },\n        hero: { ...game.hero, hit: game.hero.hit + 2 },\n      };\n    },\n    turns: 1,\n  },\n  Shield: {\n    mana: 113,\n    effect: game => {\n      return { ...game, hero: { ...game.hero, armor: 7 } };\n    },\n    turns: 6,\n  },\n  Poison: {\n    mana: 173,\n    effect: game => {\n      return { ...game, boss: { ...game.boss, hit: game.boss.hit - 3 } };\n    },\n    turns: 6,\n  },\n  Recharge: {\n    mana: 229,\n    effect: game => {\n      return { ...game, hero: { ...game.hero, mana: game.hero.mana + 101 } };\n    },\n    turns: 5,\n  },\n};\n\nfunction canSpell(spell, game) {\n  return game.hero.mana >= spells[spell].mana && game.active[spell] === 0;\n}\n\nfunction runSpells(game) {\n  game = { ...game, hero: { ...game.hero, armor: 0 } };\n  for (const spell in game.active) {\n    if (game.active[spell] > 0) {\n      game = spells[spell].effect(game);\n      game = {\n        ...game,\n        active: { ...game.active, [spell]: game.active[spell] - 1 },\n      };\n    }\n  }\n  return game;\n}\n\nfunction castSpell(spell, game) {\n  return {\n    ...game,\n    hero: { ...game.hero, mana: game.hero.mana - spells[spell].mana },\n    active: { ...game.active, [spell]: spells[spell].turns },\n  };\n}\n\nfunction playBoss(game) {\n  return {\n    ...game,\n    hero: {\n      ...game.hero,\n      hit: game.hero.hit - Math.max(1, game.boss.damage - game.hero.armor),\n    },\n  };\n}\n\nfunction memoize(fn) {\n  const memo = {};\n  return function(x) {\n    const s = JSON.stringify(x);\n    if (!memo[s]) {\n      memo[s] = fn(x);\n    }\n    return memo[s];\n  };\n}\n\nconst play = memoize(game => {\n  if (game.boss.hit <= 0) {\n    return 0;\n  } else if (game.hero.hit <= 0) {\n    return Infinity;\n  }\n  let min = Infinity;\n  game = runSpells(game);\n  for (const spell in spells) {\n    if (canSpell(spell, game)) {\n      let move = castSpell(spell, game);\n      move = runSpells(move);\n      move = playBoss(move);\n      min = Math.min(spells[spell].mana + play(move), min);\n    }\n  }\n  return min;\n});\n\nfunction parse(input, initialHit, initialMana) {\n  const [hit, damage] = input.match(/\\d+/g);\n  const hero = { hit: initialHit, mana: initialMana, armor: 0 };\n  const boss = {\n    hit: parseInt(hit),\n    damage: parseInt(damage),\n    armor: 0,\n  };\n  const active = Object.keys(spells).reduce(\n    (obj, spell) => ({ ...obj, [spell]: 0 }),\n    {},\n  );\n  return { hero, boss, active };\n}\n\nexport function part1(input, initialHit = 50, initialMana = 500) {\n  return play(parse(input, initialHit, initialMana));\n}\n\nexport function part2(input, initialHit = 50, initialMana = 500) {\n  const state = parse(input, initialHit, initialMana);\n  state.hero.hit--;\n  state.boss.damage++;\n  return play(state);\n}\n"]}