3128032426cb0e2b24d20ec8589e2a0f
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.part2 = exports.part1 = void 0;
const MAX_IP = 4294967295;

function merge(ranges) {
  ranges.sort((a, b) => a[0] - b[0]);
  return ranges.reduce((segments, range) => {
    const lastSegment = segments[segments.length - 1];

    if (range[0] > lastSegment[1] + 1) {
      segments.push(range);
    } else {
      lastSegment[1] = Math.max(range[1], lastSegment[1]);
    }

    return segments;
  }, [[0, 0]]);
}

function parse(input) {
  return input.split('\n').map(x => x.match(/^(\d+)-(\d+)$/).slice(1).map(x => parseInt(x)));
}

const part1 = input => merge(parse(input))[0][1] + 1;

exports.part1 = part1;

const part2 = input => MAX_IP - merge(parse(input)).reduce((sum, x) => sum + x[1] - x[0] + 1, 0) + 1;

exports.part2 = part2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTIwLmpzIl0sIm5hbWVzIjpbIk1BWF9JUCIsIm1lcmdlIiwicmFuZ2VzIiwic29ydCIsImEiLCJiIiwicmVkdWNlIiwic2VnbWVudHMiLCJyYW5nZSIsImxhc3RTZWdtZW50IiwibGVuZ3RoIiwicHVzaCIsIk1hdGgiLCJtYXgiLCJwYXJzZSIsImlucHV0Iiwic3BsaXQiLCJtYXAiLCJ4IiwibWF0Y2giLCJzbGljZSIsInBhcnNlSW50IiwicGFydDEiLCJwYXJ0MiIsInN1bSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsTUFBTUEsTUFBTSxHQUFHLFVBQWY7O0FBRUEsU0FBU0MsS0FBVCxDQUFlQyxNQUFmLEVBQXVCO0FBQ3JCQSxFQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWSxDQUFDQyxDQUFELEVBQUlDLENBQUosS0FBVUQsQ0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPQyxDQUFDLENBQUMsQ0FBRCxDQUE5QjtBQUNBLFNBQU9ILE1BQU0sQ0FBQ0ksTUFBUCxDQUNMLENBQUNDLFFBQUQsRUFBV0MsS0FBWCxLQUFxQjtBQUNuQixVQUFNQyxXQUFXLEdBQUdGLFFBQVEsQ0FBQ0EsUUFBUSxDQUFDRyxNQUFULEdBQWtCLENBQW5CLENBQTVCOztBQUNBLFFBQUlGLEtBQUssQ0FBQyxDQUFELENBQUwsR0FBV0MsV0FBVyxDQUFDLENBQUQsQ0FBWCxHQUFpQixDQUFoQyxFQUFtQztBQUNqQ0YsTUFBQUEsUUFBUSxDQUFDSSxJQUFULENBQWNILEtBQWQ7QUFDRCxLQUZELE1BRU87QUFDTEMsTUFBQUEsV0FBVyxDQUFDLENBQUQsQ0FBWCxHQUFpQkcsSUFBSSxDQUFDQyxHQUFMLENBQVNMLEtBQUssQ0FBQyxDQUFELENBQWQsRUFBbUJDLFdBQVcsQ0FBQyxDQUFELENBQTlCLENBQWpCO0FBQ0Q7O0FBQ0QsV0FBT0YsUUFBUDtBQUNELEdBVEksRUFVTCxDQUFDLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBRCxDQVZLLENBQVA7QUFZRDs7QUFFRCxTQUFTTyxLQUFULENBQWVDLEtBQWYsRUFBc0I7QUFDcEIsU0FBT0EsS0FBSyxDQUFDQyxLQUFOLENBQVksSUFBWixFQUFrQkMsR0FBbEIsQ0FBc0JDLENBQUMsSUFDNUJBLENBQUMsQ0FDRUMsS0FESCxDQUNTLGVBRFQsRUFFR0MsS0FGSCxDQUVTLENBRlQsRUFHR0gsR0FISCxDQUdPQyxDQUFDLElBQUlHLFFBQVEsQ0FBQ0gsQ0FBRCxDQUhwQixDQURLLENBQVA7QUFNRDs7QUFFTSxNQUFNSSxLQUFLLEdBQUdQLEtBQUssSUFBSWQsS0FBSyxDQUFDYSxLQUFLLENBQUNDLEtBQUQsQ0FBTixDQUFMLENBQW9CLENBQXBCLEVBQXVCLENBQXZCLElBQTRCLENBQW5EOzs7O0FBQ0EsTUFBTVEsS0FBSyxHQUFHUixLQUFLLElBQ3hCZixNQUFNLEdBQUdDLEtBQUssQ0FBQ2EsS0FBSyxDQUFDQyxLQUFELENBQU4sQ0FBTCxDQUFvQlQsTUFBcEIsQ0FBMkIsQ0FBQ2tCLEdBQUQsRUFBTU4sQ0FBTixLQUFZTSxHQUFHLEdBQUdOLENBQUMsQ0FBQyxDQUFELENBQVAsR0FBYUEsQ0FBQyxDQUFDLENBQUQsQ0FBZCxHQUFvQixDQUEzRCxFQUE4RCxDQUE5RCxDQUFULEdBQTRFLENBRHZFIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTUFYX0lQID0gNDI5NDk2NzI5NTtcblxuZnVuY3Rpb24gbWVyZ2UocmFuZ2VzKSB7XG4gIHJhbmdlcy5zb3J0KChhLCBiKSA9PiBhWzBdIC0gYlswXSk7XG4gIHJldHVybiByYW5nZXMucmVkdWNlKFxuICAgIChzZWdtZW50cywgcmFuZ2UpID0+IHtcbiAgICAgIGNvbnN0IGxhc3RTZWdtZW50ID0gc2VnbWVudHNbc2VnbWVudHMubGVuZ3RoIC0gMV07XG4gICAgICBpZiAocmFuZ2VbMF0gPiBsYXN0U2VnbWVudFsxXSArIDEpIHtcbiAgICAgICAgc2VnbWVudHMucHVzaChyYW5nZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsYXN0U2VnbWVudFsxXSA9IE1hdGgubWF4KHJhbmdlWzFdLCBsYXN0U2VnbWVudFsxXSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gc2VnbWVudHM7XG4gICAgfSxcbiAgICBbWzAsIDBdXSxcbiAgKTtcbn1cblxuZnVuY3Rpb24gcGFyc2UoaW5wdXQpIHtcbiAgcmV0dXJuIGlucHV0LnNwbGl0KCdcXG4nKS5tYXAoeCA9PlxuICAgIHhcbiAgICAgIC5tYXRjaCgvXihcXGQrKS0oXFxkKykkLylcbiAgICAgIC5zbGljZSgxKVxuICAgICAgLm1hcCh4ID0+IHBhcnNlSW50KHgpKSxcbiAgKTtcbn1cblxuZXhwb3J0IGNvbnN0IHBhcnQxID0gaW5wdXQgPT4gbWVyZ2UocGFyc2UoaW5wdXQpKVswXVsxXSArIDE7XG5leHBvcnQgY29uc3QgcGFydDIgPSBpbnB1dCA9PlxuICBNQVhfSVAgLSBtZXJnZShwYXJzZShpbnB1dCkpLnJlZHVjZSgoc3VtLCB4KSA9PiBzdW0gKyB4WzFdIC0geFswXSArIDEsIDApICsgMTtcbiJdfQ==