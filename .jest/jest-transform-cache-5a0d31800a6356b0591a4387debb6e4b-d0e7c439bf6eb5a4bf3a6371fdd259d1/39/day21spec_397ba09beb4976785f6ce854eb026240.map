{"version":3,"sources":["day21.spec.js"],"names":["input","url","describe","it","expect","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACG;;;;;;;qCADH,EASE,OATF,CADI,CAAN,CAYEC,OAZF,CAYU,OAZV;AAaD,KAdC,CAAF;AAgBAF,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBK,OAArB,CAA6B,UAA7B;AACD,KAFC,CAAF;AAGD,GApBO,CAAR;AAsBAH,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACG;;;;;;;qCADH,EASE,OATF,CADI,CAAN,CAYEC,OAZF,CAYU,OAZV;AAaD,KAdC,CAAF;AAgBAF,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBK,OAArB,CAA6B,UAA7B;AACD,KAFC,CAAF;AAGD,GApBO,CAAR;AAqBD,CA5CO,CAAR","sourcesContent":["import { part1, part2 } from './day21.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day21 2016', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(\n          `swap position 4 with position 0\nswap letter d with letter b\nreverse positions 0 through 4\nrotate left 1 step\nmove position 1 to position 4\nmove position 3 to position 0\nrotate based on position of letter b\nrotate based on position of letter d`,\n          'abcde',\n        ),\n      ).toEqual('decab');\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual('fdhbcgea');\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      expect(\n        part2(\n          `swap position 4 with position 0\nswap letter d with letter b\nreverse positions 0 through 4\nrotate left 1 step\nmove position 1 to position 4\nmove position 3 to position 0\nrotate based on position of letter b\nrotate based on position of letter d`,\n          'decab',\n        ),\n      ).toEqual('abcde');\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual('egfbcadh');\n    });\n  });\n});\n"]}