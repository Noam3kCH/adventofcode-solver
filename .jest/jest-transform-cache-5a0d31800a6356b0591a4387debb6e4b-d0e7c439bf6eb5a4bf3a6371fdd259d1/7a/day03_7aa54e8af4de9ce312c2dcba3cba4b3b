49b95054844e83ab3908f1d87042635c
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.part1 = part1;
exports.part2 = part2;

function parseClaims(input) {
  return input.split('\n').map(claim => {
    const [, id, x, y, w, h] = claim.match(/^#(\d+) @ (\d+),(\d+): (\d+)x(\d+)$/).map(x => parseInt(x));
    return {
      id,
      x,
      y,
      w,
      h
    };
  });
}

function resolveClaims(claims) {
  const fabric = new Map();
  claims.forEach(claim => {
    for (let i = 0; i < claim.w; i++) {
      for (let j = 0; j < claim.h; j++) {
        const point = `(${claim.x + i}, ${claim.y + j})`;
        fabric.set(point, (fabric.get(point) || []).concat(claim.id));
      }
    }
  });
  return fabric;
}

function getConflicts(fabric) {
  return Array.from(fabric.values()).filter(x => x.length >= 2);
}

function part1(input) {
  const claims = parseClaims(input);
  const fabric = resolveClaims(claims);
  const conflicts = getConflicts(fabric);
  return conflicts.length;
}

function part2(input) {
  const claims = parseClaims(input);
  const fabric = resolveClaims(claims);
  const conflicts = getConflicts(fabric);
  const ok = new Set(claims.map(x => x.id));
  conflicts.forEach(x => x.forEach(id => ok.delete(id)));
  return Array.from(ok).shift();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTAzLmpzIl0sIm5hbWVzIjpbInBhcnNlQ2xhaW1zIiwiaW5wdXQiLCJzcGxpdCIsIm1hcCIsImNsYWltIiwiaWQiLCJ4IiwieSIsInciLCJoIiwibWF0Y2giLCJwYXJzZUludCIsInJlc29sdmVDbGFpbXMiLCJjbGFpbXMiLCJmYWJyaWMiLCJNYXAiLCJmb3JFYWNoIiwiaSIsImoiLCJwb2ludCIsInNldCIsImdldCIsImNvbmNhdCIsImdldENvbmZsaWN0cyIsIkFycmF5IiwiZnJvbSIsInZhbHVlcyIsImZpbHRlciIsImxlbmd0aCIsInBhcnQxIiwiY29uZmxpY3RzIiwicGFydDIiLCJvayIsIlNldCIsImRlbGV0ZSIsInNoaWZ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLFNBQVNBLFdBQVQsQ0FBcUJDLEtBQXJCLEVBQTRCO0FBQzFCLFNBQU9BLEtBQUssQ0FBQ0MsS0FBTixDQUFZLElBQVosRUFBa0JDLEdBQWxCLENBQXNCQyxLQUFLLElBQUk7QUFDcEMsVUFBTSxHQUFHQyxFQUFILEVBQU9DLENBQVAsRUFBVUMsQ0FBVixFQUFhQyxDQUFiLEVBQWdCQyxDQUFoQixJQUFxQkwsS0FBSyxDQUM3Qk0sS0FEd0IsQ0FDbEIscUNBRGtCLEVBRXhCUCxHQUZ3QixDQUVwQkcsQ0FBQyxJQUFJSyxRQUFRLENBQUNMLENBQUQsQ0FGTyxDQUEzQjtBQUdBLFdBQU87QUFBRUQsTUFBQUEsRUFBRjtBQUFNQyxNQUFBQSxDQUFOO0FBQVNDLE1BQUFBLENBQVQ7QUFBWUMsTUFBQUEsQ0FBWjtBQUFlQyxNQUFBQTtBQUFmLEtBQVA7QUFDRCxHQUxNLENBQVA7QUFNRDs7QUFFRCxTQUFTRyxhQUFULENBQXVCQyxNQUF2QixFQUErQjtBQUM3QixRQUFNQyxNQUFNLEdBQUcsSUFBSUMsR0FBSixFQUFmO0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ0csT0FBUCxDQUFlWixLQUFLLElBQUk7QUFDdEIsU0FBSyxJQUFJYSxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHYixLQUFLLENBQUNJLENBQTFCLEVBQTZCUyxDQUFDLEVBQTlCLEVBQWtDO0FBQ2hDLFdBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR2QsS0FBSyxDQUFDSyxDQUExQixFQUE2QlMsQ0FBQyxFQUE5QixFQUFrQztBQUNoQyxjQUFNQyxLQUFLLEdBQUksSUFBR2YsS0FBSyxDQUFDRSxDQUFOLEdBQVVXLENBQUUsS0FBSWIsS0FBSyxDQUFDRyxDQUFOLEdBQVVXLENBQUUsR0FBOUM7QUFDQUosUUFBQUEsTUFBTSxDQUFDTSxHQUFQLENBQVdELEtBQVgsRUFBa0IsQ0FBQ0wsTUFBTSxDQUFDTyxHQUFQLENBQVdGLEtBQVgsS0FBcUIsRUFBdEIsRUFBMEJHLE1BQTFCLENBQWlDbEIsS0FBSyxDQUFDQyxFQUF2QyxDQUFsQjtBQUNEO0FBQ0Y7QUFDRixHQVBEO0FBUUEsU0FBT1MsTUFBUDtBQUNEOztBQUVELFNBQVNTLFlBQVQsQ0FBc0JULE1BQXRCLEVBQThCO0FBQzVCLFNBQU9VLEtBQUssQ0FBQ0MsSUFBTixDQUFXWCxNQUFNLENBQUNZLE1BQVAsRUFBWCxFQUE0QkMsTUFBNUIsQ0FBbUNyQixDQUFDLElBQUlBLENBQUMsQ0FBQ3NCLE1BQUYsSUFBWSxDQUFwRCxDQUFQO0FBQ0Q7O0FBRU0sU0FBU0MsS0FBVCxDQUFlNUIsS0FBZixFQUFzQjtBQUMzQixRQUFNWSxNQUFNLEdBQUdiLFdBQVcsQ0FBQ0MsS0FBRCxDQUExQjtBQUNBLFFBQU1hLE1BQU0sR0FBR0YsYUFBYSxDQUFDQyxNQUFELENBQTVCO0FBQ0EsUUFBTWlCLFNBQVMsR0FBR1AsWUFBWSxDQUFDVCxNQUFELENBQTlCO0FBQ0EsU0FBT2dCLFNBQVMsQ0FBQ0YsTUFBakI7QUFDRDs7QUFFTSxTQUFTRyxLQUFULENBQWU5QixLQUFmLEVBQXNCO0FBQzNCLFFBQU1ZLE1BQU0sR0FBR2IsV0FBVyxDQUFDQyxLQUFELENBQTFCO0FBQ0EsUUFBTWEsTUFBTSxHQUFHRixhQUFhLENBQUNDLE1BQUQsQ0FBNUI7QUFDQSxRQUFNaUIsU0FBUyxHQUFHUCxZQUFZLENBQUNULE1BQUQsQ0FBOUI7QUFDQSxRQUFNa0IsRUFBRSxHQUFHLElBQUlDLEdBQUosQ0FBUXBCLE1BQU0sQ0FBQ1YsR0FBUCxDQUFXRyxDQUFDLElBQUlBLENBQUMsQ0FBQ0QsRUFBbEIsQ0FBUixDQUFYO0FBQ0F5QixFQUFBQSxTQUFTLENBQUNkLE9BQVYsQ0FBa0JWLENBQUMsSUFBSUEsQ0FBQyxDQUFDVSxPQUFGLENBQVVYLEVBQUUsSUFBSTJCLEVBQUUsQ0FBQ0UsTUFBSCxDQUFVN0IsRUFBVixDQUFoQixDQUF2QjtBQUNBLFNBQU9tQixLQUFLLENBQUNDLElBQU4sQ0FBV08sRUFBWCxFQUFlRyxLQUFmLEVBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHBhcnNlQ2xhaW1zKGlucHV0KSB7XG4gIHJldHVybiBpbnB1dC5zcGxpdCgnXFxuJykubWFwKGNsYWltID0+IHtcbiAgICBjb25zdCBbLCBpZCwgeCwgeSwgdywgaF0gPSBjbGFpbVxuICAgICAgLm1hdGNoKC9eIyhcXGQrKSBAIChcXGQrKSwoXFxkKyk6IChcXGQrKXgoXFxkKykkLylcbiAgICAgIC5tYXAoeCA9PiBwYXJzZUludCh4KSk7XG4gICAgcmV0dXJuIHsgaWQsIHgsIHksIHcsIGggfTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVDbGFpbXMoY2xhaW1zKSB7XG4gIGNvbnN0IGZhYnJpYyA9IG5ldyBNYXAoKTtcbiAgY2xhaW1zLmZvckVhY2goY2xhaW0gPT4ge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2xhaW0udzsgaSsrKSB7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGNsYWltLmg7IGorKykge1xuICAgICAgICBjb25zdCBwb2ludCA9IGAoJHtjbGFpbS54ICsgaX0sICR7Y2xhaW0ueSArIGp9KWA7XG4gICAgICAgIGZhYnJpYy5zZXQocG9pbnQsIChmYWJyaWMuZ2V0KHBvaW50KSB8fCBbXSkuY29uY2F0KGNsYWltLmlkKSk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGZhYnJpYztcbn1cblxuZnVuY3Rpb24gZ2V0Q29uZmxpY3RzKGZhYnJpYykge1xuICByZXR1cm4gQXJyYXkuZnJvbShmYWJyaWMudmFsdWVzKCkpLmZpbHRlcih4ID0+IHgubGVuZ3RoID49IDIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFydDEoaW5wdXQpIHtcbiAgY29uc3QgY2xhaW1zID0gcGFyc2VDbGFpbXMoaW5wdXQpO1xuICBjb25zdCBmYWJyaWMgPSByZXNvbHZlQ2xhaW1zKGNsYWltcyk7XG4gIGNvbnN0IGNvbmZsaWN0cyA9IGdldENvbmZsaWN0cyhmYWJyaWMpO1xuICByZXR1cm4gY29uZmxpY3RzLmxlbmd0aDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnQyKGlucHV0KSB7XG4gIGNvbnN0IGNsYWltcyA9IHBhcnNlQ2xhaW1zKGlucHV0KTtcbiAgY29uc3QgZmFicmljID0gcmVzb2x2ZUNsYWltcyhjbGFpbXMpO1xuICBjb25zdCBjb25mbGljdHMgPSBnZXRDb25mbGljdHMoZmFicmljKTtcbiAgY29uc3Qgb2sgPSBuZXcgU2V0KGNsYWltcy5tYXAoeCA9PiB4LmlkKSk7XG4gIGNvbmZsaWN0cy5mb3JFYWNoKHggPT4geC5mb3JFYWNoKGlkID0+IG9rLmRlbGV0ZShpZCkpKTtcbiAgcmV0dXJuIEFycmF5LmZyb20ob2spLnNoaWZ0KCk7XG59XG4iXX0=