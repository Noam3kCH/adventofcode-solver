{"version":3,"sources":["day13.js"],"names":["position","cart","x","y","onSlash","v","onBackSlash","nextTurn","left","straight","right","onTurn","onMove","c","tick","map","carts","collisions","sort","a","b","forEach","direction","other","find","push","parse","input","replace","split","row","cell","includes","part1","length","part2","splice","indexOf"],"mappings":"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","sourcesContent":["const position = cart => `${cart.x},${cart.y}`;\nconst onSlash = { '>': '^', '<': 'v', '^': '>', v: '<' };\nconst onBackSlash = { '>': 'v', '<': '^', '^': '<', v: '>' };\nconst nextTurn = { left: 'straight', straight: 'right', right: 'left' };\nconst onTurn = {\n  left: { '>': '^', '<': 'v', '^': '<', v: '>' },\n  right: { '>': 'v', '<': '^', '^': '>', v: '<' },\n  straight: { '>': '>', '<': '<', '^': '^', v: 'v' },\n};\nconst onMove = {\n  '>': c => c.x++,\n  '<': c => c.x--,\n  '^': c => c.y--,\n  v: c => c.y++,\n};\n\nfunction tick(map, carts) {\n  const collisions = [];\n  carts.sort((a, b) => a.y - b.y || a.x - b.x);\n  carts.forEach(cart => {\n    onMove[cart.direction](cart);\n    if (map[cart.y][cart.x] === '/') {\n      cart.direction = onSlash[cart.direction];\n    } else if (map[cart.y][cart.x] === '\\\\') {\n      cart.direction = onBackSlash[cart.direction];\n    } else if (map[cart.y][cart.x] === '+') {\n      cart.direction = onTurn[cart.nextTurn][cart.direction];\n      cart.nextTurn = nextTurn[cart.nextTurn];\n    }\n    const other = carts.find(x => x !== cart && position(x) === position(cart));\n    if (other) {\n      collisions.push(cart, other);\n    }\n  });\n  return collisions;\n}\n\nfunction parse(input) {\n  const carts = [];\n  const map = input\n    .replace(/[v^]/g, '|')\n    .replace(/[<>]/g, '-')\n    .split('\\n');\n  input.split('\\n').forEach((row, y) =>\n    row.split('').forEach((cell, x) => {\n      if ('v^<>'.includes(cell)) {\n        carts.push({ direction: cell, nextTurn: 'left', x, y });\n      }\n    }),\n  );\n  return { map, carts };\n}\n\nexport function part1(input) {\n  const { map, carts } = parse(input);\n  let collisions = [];\n  while (collisions.length === 0) {\n    collisions = tick(map, carts);\n  }\n  return position(collisions[0]);\n}\n\nexport function part2(input) {\n  const { map, carts } = parse(input);\n  while (carts.length > 1) {\n    const collisions = tick(map, carts);\n    collisions.forEach(cart => carts.splice(carts.indexOf(cart), 1));\n  }\n  return position(carts[0]);\n}\n"]}