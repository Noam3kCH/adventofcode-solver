b2e71b2d5a9bfe4f44f77cdaab69ccb0
"use strict";

var _day = require("./day15.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day15 2018', () => {
  describe('part1', () => {
    it('should work for part 1 examples 1', () => {
      expect((0, _day.part1)(['#######', '#.G...#', '#...EG#', '#.#.#G#', '#..G#E#', '#.....#', '#######'].join('\n'))).toEqual(27730);
    });
    it('should work for part 1 examples 2', () => {
      expect((0, _day.part1)(['#######', '#G..#E#', '#E#E.E#', '#G.##.#', '#...#E#', '#...E.#', '#######'].join('\n'))).toEqual(36334);
    });
    it('should work for part 1 examples 3', () => {
      expect((0, _day.part1)(['#######', '#E.G#.#', '#.#G..#', '#G.#.G#', '#G..#.#', '#...E.#', '#######'].join('\n'))).toEqual(27755);
    });
    it('should work for part 1 examples 4', () => {
      expect((0, _day.part1)(['#######', '#.E...#', '#.#..G#', '#.###.#', '#E#G#G#', '#...#G#', '#######'].join('\n'))).toEqual(28944);
    });
    it('should work for part 1 examples 5', () => {
      expect((0, _day.part1)(['#########', '#G......#', '#.E.#...#', '#..##..G#', '#...##..#', '#...#...#', '#.G...G.#', '#.....G.#', '#########'].join('\n'))).toEqual(18740);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(189000);
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples 1', () => {
      expect((0, _day.part2)(['#######', '#.G...#', '#...EG#', '#.#.#G#', '#..G#E#', '#.....#', '#######'].join('\n'))).toEqual(4988);
    });
    it('should work for part 2 examples 2', () => {
      expect((0, _day.part2)(['#######', '#E..EG#', '#.#G.E#', '#E.##E#', '#G..#.#', '#..E#.#', '#######'].join('\n'))).toEqual(31284);
    });
    it('should work for part 2 examples 3', () => {
      expect((0, _day.part2)(['#######', '#E.G#.#', '#.#G..#', '#G.#.G#', '#G..#.#', '#...E.#', '#######'].join('\n'))).toEqual(3478);
    });
    it('should work for part 2 examples 4', () => {
      expect((0, _day.part2)(['#######', '#.E...#', '#.#..G#', '#.###.#', '#E#G#G#', '#...#G#', '#######'].join('\n'))).toEqual(6474);
    });
    it('should work for part 2 examples 5', () => {
      expect((0, _day.part2)(['#########', '#G......#', '#.E.#...#', '#..##..G#', '#...##..#', '#...#...#', '#.G...G.#', '#.....G.#', '#########'].join('\n'))).toEqual(1140);
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(38512);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,