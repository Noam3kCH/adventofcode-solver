{"version":3,"sources":["day10.spec.js"],"names":["input","url","describe","it","part1","part2","join","expect","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAClC,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAmB,cACvB,CACE,qCADF,EAEE,qCAFF,EAGE,qCAHF,EAIE,qCAJF,EAKE,qCALF,EAME,qCANF,EAOE,qCAPF,EAQE,qCARF,EASE,qCATF,EAUE,qCAVF,EAWE,qCAXF,EAYE,qCAZF,EAaE,qCAbF,EAcE,qCAdF,EAeE,qCAfF,EAgBE,qCAhBF,EAiBE,qCAjBF,EAkBE,qCAlBF,EAmBE,qCAnBF,EAoBE,qCApBF,EAqBE,qCArBF,EAsBE,qCAtBF,EAuBE,qCAvBF,EAwBE,qCAxBF,EAyBE,qCAzBF,EA0BE,qCA1BF,EA2BE,qCA3BF,EA4BE,qCA5BF,EA6BE,qCA7BF,EA8BE,qCA9BF,EA+BE,qCA/BF,EAgCEC,IAhCF,CAgCO,IAhCP,CADuB,CAAzB;AAmCAC,MAAAA,MAAM,CAACH,KAAD,CAAN,CAAcI,OAAd,CACE,CACE,EADF,EAEE,YAFF,EAGE,YAHF,EAIE,YAJF,EAKE,YALF,EAME,YANF,EAOE,YAPF,EAQE,YARF,EASE,YATF,EAUEF,IAVF,CAUO,IAVP,CADF;AAaAC,MAAAA,MAAM,CAACF,KAAD,CAAN,CAAcG,OAAd,CAAsB,CAAtB;AACD,KAlDC,CAAF;AAoDAL,IAAAA,EAAE,CAAC,uBAAD,EAA0B,MAAM;AAChC,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAmB,cAAIL,KAAJ,CAAzB;AACAO,MAAAA,MAAM,CAACH,KAAD,CAAN,CAAcI,OAAd,CACE,CACE,EADF,EAEE,gEAFF,EAGE,gEAHF,EAIE,gEAJF,EAKE,gEALF,EAME,gEANF,EAOE,gEAPF,EAQE,gEARF,EASE,gEATF,EAUE,gEAVF,EAWE,gEAXF,EAYEF,IAZF,CAYO,IAZP,CADF,EAFgC,CAgB7B;;AACHC,MAAAA,MAAM,CAACF,KAAD,CAAN,CAAcG,OAAd,CAAsB,KAAtB;AACD,KAlBC,CAAF;AAmBD,GAxEO,CAAR;AAyED,CA1EO,CAAR","sourcesContent":["import { day } from './day10.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day10 2018', () => {\n  describe('part1', () => {\n    it('should work for example', () => {\n      const { part1, part2 } = day(\n        [\n          'position=< 9,  1> velocity=< 0,  2>',\n          'position=< 7,  0> velocity=<-1,  0>',\n          'position=< 3, -2> velocity=<-1,  1>',\n          'position=< 6, 10> velocity=<-2, -1>',\n          'position=< 2, -4> velocity=< 2,  2>',\n          'position=<-6, 10> velocity=< 2, -2>',\n          'position=< 1,  8> velocity=< 1, -1>',\n          'position=< 1,  7> velocity=< 1,  0>',\n          'position=<-3, 11> velocity=< 1, -2>',\n          'position=< 7,  6> velocity=<-1, -1>',\n          'position=<-2,  3> velocity=< 1,  0>',\n          'position=<-4,  3> velocity=< 2,  0>',\n          'position=<10, -3> velocity=<-1,  1>',\n          'position=< 5, 11> velocity=< 1, -2>',\n          'position=< 4,  7> velocity=< 0, -1>',\n          'position=< 8, -2> velocity=< 0,  1>',\n          'position=<15,  0> velocity=<-2,  0>',\n          'position=< 1,  6> velocity=< 1,  0>',\n          'position=< 8,  9> velocity=< 0, -1>',\n          'position=< 3,  3> velocity=<-1,  1>',\n          'position=< 0,  5> velocity=< 0, -1>',\n          'position=<-2,  2> velocity=< 2,  0>',\n          'position=< 5, -2> velocity=< 1,  2>',\n          'position=< 1,  4> velocity=< 2,  1>',\n          'position=<-2,  7> velocity=< 2, -2>',\n          'position=< 3,  6> velocity=<-1, -1>',\n          'position=< 5,  0> velocity=< 1,  0>',\n          'position=<-6,  0> velocity=< 2,  0>',\n          'position=< 5,  9> velocity=< 1, -2>',\n          'position=<14,  7> velocity=<-2,  0>',\n          'position=<-3,  6> velocity=< 2, -1>',\n        ].join('\\n'),\n      );\n      expect(part1).toEqual(\n        [\n          '',\n          '#...#..###',\n          '#...#...#.',\n          '#...#...#.',\n          '#####...#.',\n          '#...#...#.',\n          '#...#...#.',\n          '#...#...#.',\n          '#...#..###',\n        ].join('\\n'),\n      );\n      expect(part2).toEqual(3);\n    });\n\n    it('should work for input', () => {\n      const { part1, part2 } = day(input);\n      expect(part1).toEqual(\n        [\n          '',\n          '######..######...####...#####....####....####....####......###',\n          '.....#.......#..#....#..#....#..#....#..#....#..#....#......#.',\n          '.....#.......#..#.......#....#..#.......#.......#...........#.',\n          '....#.......#...#.......#....#..#.......#.......#...........#.',\n          '...#.......#....#.......#####...#.......#.......#...........#.',\n          '..#.......#.....#.......#....#..#..###..#..###..#...........#.',\n          '.#.......#......#.......#....#..#....#..#....#..#...........#.',\n          '#.......#.......#.......#....#..#....#..#....#..#.......#...#.',\n          '#.......#.......#....#..#....#..#...##..#...##..#....#..#...#.',\n          '######..######...####...#####....###.#...###.#...####....###..',\n        ].join('\\n'),\n      ); //ZZCBGGCJ\n      expect(part2).toEqual(10886);\n    });\n  });\n});\n"]}