058749ee4666c98bd87d1a3de5bc425a
"use strict";

var _day = require("./day02.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day02 2018', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)(['abcdef', 'bababc', 'abbcde', 'abcccd', 'aabcdd', 'abcdee', 'ababab'].join('\n'))).toEqual(12);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(7221);
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples', () => {
      expect((0, _day.part2)(['abcde', 'fghij', 'klmno', 'pqrst', 'fguij', 'axcye', 'wvxyz'].join('\n'))).toEqual('fgij');
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual('mkcdflathzwsvjxrevymbdpoq');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTAyLnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0Iiwiam9pbiIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7Ozs7QUFFQSxNQUFNQSxLQUFLLEdBQUcsd0JBQVUsS0FBWUMsR0FBdEIsQ0FBZDtBQUVBQyxRQUFRLENBQUMsWUFBRCxFQUFlLE1BQU07QUFDM0JBLEVBQUFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBTTtBQUN0QkMsSUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLE1BQU07QUFDMUNDLE1BQUFBLE1BQU0sQ0FDSixnQkFDRSxDQUNFLFFBREYsRUFFRSxRQUZGLEVBR0UsUUFIRixFQUlFLFFBSkYsRUFLRSxRQUxGLEVBTUUsUUFORixFQU9FLFFBUEYsRUFRRUMsSUFSRixDQVFPLElBUlAsQ0FERixDQURJLENBQU4sQ0FZRUMsT0FaRixDQVlVLEVBWlY7QUFhRCxLQWRDLENBQUY7QUFnQkFILElBQUFBLEVBQUUsQ0FBQyw4QkFBRCxFQUFpQyxNQUFNO0FBQ3ZDQyxNQUFBQSxNQUFNLENBQUMsZ0JBQU1KLEtBQU4sQ0FBRCxDQUFOLENBQXFCTSxPQUFyQixDQUE2QixJQUE3QjtBQUNELEtBRkMsQ0FBRjtBQUdELEdBcEJPLENBQVI7QUFzQkFKLEVBQUFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBTTtBQUN0QkMsSUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLE1BQU07QUFDMUNDLE1BQUFBLE1BQU0sQ0FDSixnQkFDRSxDQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLE9BQW5CLEVBQTRCLE9BQTVCLEVBQXFDLE9BQXJDLEVBQThDLE9BQTlDLEVBQXVELE9BQXZELEVBQWdFQyxJQUFoRSxDQUNFLElBREYsQ0FERixDQURJLENBQU4sQ0FNRUMsT0FORixDQU1VLE1BTlY7QUFPRCxLQVJDLENBQUY7QUFVQUgsSUFBQUEsRUFBRSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDdkNDLE1BQUFBLE1BQU0sQ0FBQyxnQkFBTUosS0FBTixDQUFELENBQU4sQ0FBcUJNLE9BQXJCLENBQTZCLDJCQUE3QjtBQUNELEtBRkMsQ0FBRjtBQUdELEdBZE8sQ0FBUjtBQWVELENBdENPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJ0MSwgcGFydDIgfSBmcm9tICcuL2RheTAyLmpzJztcbmltcG9ydCByZWFkSW5wdXQgZnJvbSAnLi4vdXRpbHMvcmVhZC1pbnB1dCc7XG5cbmNvbnN0IGlucHV0ID0gcmVhZElucHV0KGltcG9ydC5tZXRhLnVybCk7XG5cbmRlc2NyaWJlKCdkYXkwMiAyMDE4JywgKCkgPT4ge1xuICBkZXNjcmliZSgncGFydDEnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDEgZXhhbXBsZXMnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoXG4gICAgICAgIHBhcnQxKFxuICAgICAgICAgIFtcbiAgICAgICAgICAgICdhYmNkZWYnLFxuICAgICAgICAgICAgJ2JhYmFiYycsXG4gICAgICAgICAgICAnYWJiY2RlJyxcbiAgICAgICAgICAgICdhYmNjY2QnLFxuICAgICAgICAgICAgJ2FhYmNkZCcsXG4gICAgICAgICAgICAnYWJjZGVlJyxcbiAgICAgICAgICAgICdhYmFiYWInLFxuICAgICAgICAgIF0uam9pbignXFxuJyksXG4gICAgICAgICksXG4gICAgICApLnRvRXF1YWwoMTIpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDEgaW5wdXQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QocGFydDEoaW5wdXQpKS50b0VxdWFsKDcyMjEpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgncGFydDInLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDIgZXhhbXBsZXMnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoXG4gICAgICAgIHBhcnQyKFxuICAgICAgICAgIFsnYWJjZGUnLCAnZmdoaWonLCAna2xtbm8nLCAncHFyc3QnLCAnZmd1aWonLCAnYXhjeWUnLCAnd3Z4eXonXS5qb2luKFxuICAgICAgICAgICAgJ1xcbicsXG4gICAgICAgICAgKSxcbiAgICAgICAgKSxcbiAgICAgICkudG9FcXVhbCgnZmdpaicpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDIgaW5wdXQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QocGFydDIoaW5wdXQpKS50b0VxdWFsKCdta2NkZmxhdGh6d3N2anhyZXZ5bWJkcG9xJyk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=