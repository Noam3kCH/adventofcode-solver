3068c27f1e94c48a18d5f2fbe4221db2
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.part1 = part1;
exports.part2 = part2;

function isOpen({
  x,
  y
}, magicNumber) {
  const num = x * x + 3 * x + 2 * x * y + y + y * y + magicNumber;
  return num.toString(2).split('').filter(x => x === '1').length % 2 === 0;
}

function getNeighbors(point) {
  return [{
    x: point.x - 1,
    y: point.y,
    distance: point.distance + 1
  }, {
    x: point.x + 1,
    y: point.y,
    distance: point.distance + 1
  }, {
    x: point.x,
    y: point.y - 1,
    distance: point.distance + 1
  }, {
    x: point.x,
    y: point.y + 1,
    distance: point.distance + 1
  }].filter(p => p.x >= 0 && p.y >= 0);
}

function cellId({
  x,
  y
}) {
  return `${x}-${y}`;
}

function solveMaze(input, source, destination) {
  const magicNumber = parseInt(input);
  let queue = [source];
  const maze = {
    [cellId(source)]: {
      distance: 0,
      open: true
    }
  };

  while (queue.length) {
    const next = queue.shift();

    if (next.x === destination.x && next.y === destination.y) {
      return maze;
    } else {
      const neighbors = getNeighbors(next).filter(x => !maze[cellId(x)]);
      const distance = maze[cellId(next)].distance + 1;
      neighbors.forEach(x => maze[cellId(x)] = {
        distance,
        open: isOpen(x, magicNumber)
      });
      queue = queue.concat(neighbors.filter(x => maze[cellId(x)].open));
    }
  }
}

function part1(input, destination = {
  x: 31,
  y: 39
}) {
  const maze = solveMaze(input, {
    x: 1,
    y: 1
  }, destination);
  return maze[cellId(destination)].distance;
}

function part2(input, destination = {
  x: 31,
  y: 39
}) {
  const maze = solveMaze(input, {
    x: 1,
    y: 1
  }, destination);
  return Object.values(maze).filter(x => x.distance <= 50 && x.open).length;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTEzLmpzIl0sIm5hbWVzIjpbImlzT3BlbiIsIngiLCJ5IiwibWFnaWNOdW1iZXIiLCJudW0iLCJ0b1N0cmluZyIsInNwbGl0IiwiZmlsdGVyIiwibGVuZ3RoIiwiZ2V0TmVpZ2hib3JzIiwicG9pbnQiLCJkaXN0YW5jZSIsInAiLCJjZWxsSWQiLCJzb2x2ZU1hemUiLCJpbnB1dCIsInNvdXJjZSIsImRlc3RpbmF0aW9uIiwicGFyc2VJbnQiLCJxdWV1ZSIsIm1hemUiLCJvcGVuIiwibmV4dCIsInNoaWZ0IiwibmVpZ2hib3JzIiwiZm9yRWFjaCIsImNvbmNhdCIsInBhcnQxIiwicGFydDIiLCJPYmplY3QiLCJ2YWx1ZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsU0FBU0EsTUFBVCxDQUFnQjtBQUFFQyxFQUFBQSxDQUFGO0FBQUtDLEVBQUFBO0FBQUwsQ0FBaEIsRUFBMEJDLFdBQTFCLEVBQXVDO0FBQ3JDLFFBQU1DLEdBQUcsR0FBR0gsQ0FBQyxHQUFHQSxDQUFKLEdBQVEsSUFBSUEsQ0FBWixHQUFnQixJQUFJQSxDQUFKLEdBQVFDLENBQXhCLEdBQTRCQSxDQUE1QixHQUFnQ0EsQ0FBQyxHQUFHQSxDQUFwQyxHQUF3Q0MsV0FBcEQ7QUFDQSxTQUNFQyxHQUFHLENBQ0FDLFFBREgsQ0FDWSxDQURaLEVBRUdDLEtBRkgsQ0FFUyxFQUZULEVBR0dDLE1BSEgsQ0FHVU4sQ0FBQyxJQUFJQSxDQUFDLEtBQUssR0FIckIsRUFHMEJPLE1BSDFCLEdBSUUsQ0FKRixLQUtBLENBTkY7QUFRRDs7QUFFRCxTQUFTQyxZQUFULENBQXNCQyxLQUF0QixFQUE2QjtBQUMzQixTQUFPLENBQ0w7QUFBRVQsSUFBQUEsQ0FBQyxFQUFFUyxLQUFLLENBQUNULENBQU4sR0FBVSxDQUFmO0FBQWtCQyxJQUFBQSxDQUFDLEVBQUVRLEtBQUssQ0FBQ1IsQ0FBM0I7QUFBOEJTLElBQUFBLFFBQVEsRUFBRUQsS0FBSyxDQUFDQyxRQUFOLEdBQWlCO0FBQXpELEdBREssRUFF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M0QsUUFBTWtCLElBQUksR0FBR04sU0FBUyxDQUFDQyxLQUFELEVBQVE7QUFBRWQsSUFBQUEsQ0FBQyxFQUFFLENBQUw7QUFBUUMsSUFBQUEsQ0FBQyxFQUFFO0FBQVgsR0FBUixFQUF3QmUsV0FBeEIsQ0FBdEI7QUFDQSxTQUFPRyxJQUFJLENBQUNQLE1BQU0sQ0FBQ0ksV0FBRCxDQUFQLENBQUosQ0FBMEJOLFFBQWpDO0FBQ0Q7O0FBRU0sU0FBU2lCLEtBQVQsQ0FBZWIsS0FBZixFQUFzQkUsV0FBVyxHQUFHO0FBQUVoQixFQUFBQSxDQUFDLEVBQUUsRUFBTDtBQUFTQyxFQUFBQSxDQUFDLEVBQUU7QUFBWixDQUFwQyxFQUFzRDtBQUMzRCxRQUFNa0IsSUFBSSxHQUFHTixTQUFTLENBQUNDLEtBQUQsRUFBUTtBQUFFZCxJQUFBQSxDQUFDLEVBQUUsQ0FBTDtBQUFRQyxJQUFBQSxDQUFDLEVBQUU7QUFBWCxHQUFSLEVBQXdCZSxXQUF4QixDQUF0QjtBQUNBLFNBQU9ZLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjVixJQUFkLEVBQW9CYixNQUFwQixDQUEyQk4sQ0FBQyxJQUFJQSxDQUFDLENBQUNVLFFBQUYsSUFBYyxFQUFkLElBQW9CVixDQUFDLENBQUNvQixJQUF0RCxFQUE0RGIsTUFBbkU7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlzT3Blbih7IHgsIHkgfSwgbWFnaWNOdW1iZXIpIHtcbiAgY29uc3QgbnVtID0geCAqIHggKyAzICogeCArIDIgKiB4ICogeSArIHkgKyB5ICogeSArIG1hZ2ljTnVtYmVyO1xuICByZXR1cm4gKFxuICAgIG51bVxuICAgICAgLnRvU3RyaW5nKDIpXG4gICAgICAuc3BsaXQoJycpXG4gICAgICAuZmlsdGVyKHggPT4geCA9PT0gJzEnKS5sZW5ndGggJVxuICAgICAgMiA9PT1cbiAgICAwXG4gICk7XG59XG5cbmZ1bmN0aW9uIGdldE5laWdoYm9ycyhwb2ludCkge1xuICByZXR1cm4gW1xuICAgIHsgeDogcG9pbnQueCAtIDEsIHk6IHBvaW50LnksIGRpc3RhbmNlOiBwb2ludC5kaXN0YW5jZSArIDEgfSxcbiAgICB7IHg6IHBvaW50LnggKyAxLCB5OiBwb2ludC55LCBkaXN0YW5jZTogcG9pbnQuZGlzdGFuY2UgKyAxIH0sXG4gICAgeyB4OiBwb2ludC54LCB5OiBwb2ludC55IC0gMSwgZGlzdGFuY2U6IHBvaW50LmRpc3RhbmNlICsgMSB9LFxuICAgIHsgeDogcG9pbnQueCwgeTogcG9pbnQueSArIDEsIGRpc3RhbmNlOiBwb2ludC5kaXN0YW5jZSArIDEgfSxcbiAgXS5maWx0ZXIocCA9PiBwLnggPj0gMCAmJiBwLnkgPj0gMCk7XG59XG5cbmZ1bmN0aW9uIGNlbGxJZCh7IHgsIHkgfSkge1xuICByZXR1cm4gYCR7eH0tJHt5fWA7XG59XG5cbmZ1bmN0aW9uIHNvbHZlTWF6ZShpbnB1dCwgc291cmNlLCBkZXN0aW5hdGlvbikge1xuICBjb25zdCBtYWdpY051bWJlciA9IHBhcnNlSW50KGlucHV0KTtcbiAgbGV0IHF1ZXVlID0gW3NvdXJjZV07XG4gIGNvbnN0IG1hemUgPSB7IFtjZWxsSWQoc291cmNlKV06IHsgZGlzdGFuY2U6IDAsIG9wZW46IHRydWUgfSB9O1xuICB3aGlsZSAocXVldWUubGVuZ3RoKSB7XG4gICAgY29uc3QgbmV4dCA9IHF1ZXVlLnNoaWZ0KCk7XG4gICAgaWYgKG5leHQueCA9PT0gZGVzdGluYXRpb24ueCAmJiBuZXh0LnkgPT09IGRlc3RpbmF0aW9uLnkpIHtcbiAgICAgIHJldHVybiBtYXplO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBuZWlnaGJvcnMgPSBnZXROZWlnaGJvcnMobmV4dCkuZmlsdGVyKHggPT4gIW1hemVbY2VsbElkKHgpXSk7XG4gICAgICBjb25zdCBkaXN0YW5jZSA9IG1hemVbY2VsbElkKG5leHQpXS5kaXN0YW5jZSArIDE7XG4gICAgICBuZWlnaGJvcnMuZm9yRWFjaChcbiAgICAgICAgeCA9PiAobWF6ZVtjZWxsSWQoeCldID0geyBkaXN0YW5jZSwgb3BlbjogaXNPcGVuKHgsIG1hZ2ljTnVtYmVyKSB9KSxcbiAgICAgICk7XG4gICAgICBxdWV1ZSA9IHF1ZXVlLmNvbmNhdChuZWlnaGJvcnMuZmlsdGVyKHggPT4gbWF6ZVtjZWxsSWQoeCldLm9wZW4pKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnQxKGlucHV0LCBkZXN0aW5hdGlvbiA9IHsgeDogMzEsIHk6IDM5IH0pIHtcbiAgY29uc3QgbWF6ZSA9IHNvbHZlTWF6ZShpbnB1dCwgeyB4OiAxLCB5OiAxIH0sIGRlc3RpbmF0aW9uKTtcbiAgcmV0dXJuIG1hemVbY2VsbElkKGRlc3RpbmF0aW9uKV0uZGlzdGFuY2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJ0MihpbnB1dCwgZGVzdGluYXRpb24gPSB7IHg6IDMxLCB5OiAzOSB9KSB7XG4gIGNvbnN0IG1hemUgPSBzb2x2ZU1hemUoaW5wdXQsIHsgeDogMSwgeTogMSB9LCBkZXN0aW5hdGlvbik7XG4gIHJldHVybiBPYmplY3QudmFsdWVzKG1hemUpLmZpbHRlcih4ID0+IHguZGlzdGFuY2UgPD0gNTAgJiYgeC5vcGVuKS5sZW5ndGg7XG59XG4iXX0=