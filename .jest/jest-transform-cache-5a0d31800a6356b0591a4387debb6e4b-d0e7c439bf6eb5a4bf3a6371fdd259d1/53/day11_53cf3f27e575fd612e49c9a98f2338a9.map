{"version":3,"sources":["day11.js"],"names":["step","x","y","direction","parse","input","split","reduce","parse2","furthest","point","Math","max","distance","diagonal","min","abs","straight","part1","part2"],"mappings":"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","sourcesContent":["function step({ x, y }, direction) {\n  switch (direction) {\n    case 's':\n      return { x: x + 0, y: y - 2 };\n    case 'n':\n      return { x: x + 0, y: y + 2 };\n    case 'w':\n      return { x: x - 2, y: y + 0 };\n    case 'e':\n      return { x: x + 2, y: y + 0 };\n    case 'sw':\n      return { x: x - 1, y: y - 1 };\n    case 'se':\n      return { x: x + 1, y: y - 1 };\n    case 'nw':\n      return { x: x - 1, y: y + 1 };\n    case 'ne':\n      return { x: x + 1, y: y + 1 };\n    default:\n  }\n}\n\nfunction parse(input) {\n  return input.split(',').reduce(step, { x: 0, y: 0 });\n}\n\nfunction parse2(input) {\n  return input.split(',').reduce(\n    ({ furthest, point }, direction) => {\n      return {\n        furthest: Math.max(furthest, distance(step(point, direction))),\n        point: step(point, direction),\n      };\n    },\n    { furthest: 0, point: { x: 0, y: 0 } },\n  );\n}\n\nfunction distance({ x, y }) {\n  const diagonal = Math.min(Math.abs(x), Math.abs(y));\n  const straight = (Math.max(Math.abs(x), Math.abs(y)) - diagonal) / 2;\n  return diagonal + straight;\n}\n\nexport const part1 = input => distance(parse(input));\nexport const part2 = input => parse2(input).furthest;\n"]}