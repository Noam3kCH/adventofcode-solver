b13991d2c69ee90935d726c6ff97f3b2
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.part2 = exports.part1 = void 0;

function parse({
  score,
  level,
  removed,
  mode
}, next) {
  if (mode === 'read') {
    switch (next) {
      case '{':
        return {
          level: level + 1,
          score: score + level + 1,
          removed,
          mode
        };

      case '}':
        return {
          level: level - 1,
          score,
          removed,
          mode
        };

      case '<':
        return {
          level,
          score,
          removed,
          mode: 'garbage'
        };

      case '!':
        return {
          level,
          score,
          removed,
          mode: 'ignore-read'
        };

      default:
        return {
          level,
          score,
          removed,
          mode
        };
    }
  } else if (mode === 'garbage') {
    switch (next) {
      case '>':
        return {
          level,
          score,
          removed,
          mode: 'read'
        };

      case '!':
        return {
          level,
          score,
          removed,
          mode: 'ignore-garbage'
        };

      default:
        return {
          level,
          score,
          removed: removed + 1,
          mode
        };
    }
  } else {
    return {
      level,
      score,
      removed,
      mode: mode.replace('ignore-', '')
    };
  }
}

function process(input) {
  return input.split('').reduce(parse, {
    score: 0,
    level: 0,
    removed: 0,
    mode: 'read'
  });
}

const part1 = input => process(input).score;

exports.part1 = part1;

const part2 = input => process(input).removed;

exports.part2 = part2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTA5LmpzIl0sIm5hbWVzIjpbInBhcnNlIiwic2NvcmUiLCJsZXZlbCIsInJlbW92ZWQiLCJtb2RlIiwibmV4dCIsInJlcGxhY2UiLCJwcm9jZXNzIiwiaW5wdXQiLCJzcGxpdCIsInJlZHVjZSIsInBhcnQxIiwicGFydDIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxTQUFTQSxLQUFULENBQWU7QUFBRUMsRUFBQUEsS0FBRjtBQUFTQyxFQUFBQSxLQUFUO0FBQWdCQyxFQUFBQSxPQUFoQjtBQUF5QkMsRUFBQUE7QUFBekIsQ0FBZixFQUFnREMsSUFBaEQsRUFBc0Q7QUFDcEQsTUFBSUQsSUFBSSxLQUFLLE1BQWIsRUFBcUI7QUFDbkIsWUFBUUMsSUFBUjtBQUNFLFdBQUssR0FBTDtBQUNFLGVBQU87QUFBRUgsVUFBQUEsS0FBSyxFQUFFQSxLQUFLLEdBQUcsQ0FBakI7QUFBb0JELFVBQUFBLEtBQUssRUFBRUEsS0FBSyxHQUFHQyxLQUFSLEdBQWdCLENBQTNDO0FBQThDQyxVQUFBQSxPQUE5QztBQUF1REMsVUFBQUE7QUFBdkQsU0FBUDs7QUFDRixXQUFLLEdBQUw7QUFDRSxlQUFPO0FBQUVGLFVBQUFBLEtBQUssRUFBRUEsS0FBSyxHQUFHLENBQWpCO0FBQW9CRCxVQUFBQSxLQUFwQjtBQUEyQkUsVUFBQUEsT0FBM0I7QUFBb0NDLFVBQUFBO0FBQXBDLFNBQVA7O0FBQ0YsV0FBSyxHQUFMO0FBQ0UsZUFBTztBQUFFRixVQUFBQSxLQUFGO0FBQVNELFVBQUFBLEtBQVQ7QUFBZ0JFLFVBQUFBLE9BQWhCO0FBQXlCQyxVQUFBQSxJQUFJLEVBQUU7QUFBL0IsU0FBUDs7QUFDRixXQUFLLEdBQUw7QUFDRSxlQUFPO0FBQUVGLFVBQUFBLEtBQUY7QUFBU0QsVUFBQUEsS0FBVDtBQUFnQkUsVUFBQUEsT0FBaEI7QUFBeUJDLFVBQUFBLElBQUksRUFBRTtBQUEvQixTQUFQOztBQUNGO0FBQ0UsZUFBTztBQUFFRixVQUFBQSxLQUFGO0FBQVNELFVBQUFBLEtBQVQ7QUFBZ0JFLFVBQUFBLE9BQWhCO0FBQXlCQyxVQUFBQTtBQUF6QixTQUFQO0FBVko7QUFZRCxHQWJELE1BYU8sSUFBSUEsSUFBSSxLQUFLLFNBQWIsRUFBd0I7QUFDN0IsWUFBUUMsSUFBUjtBQUNFLFdBQUssR0FBTDtBQUNFLGVBQU87QUFBRUgsVUFBQUEsS0FBRjtBQUFTRCxVQUFBQSxLQUFUO0FBQWdCRSxVQUFBQSxPQUFoQjtBQUF5QkMsVUFBQUEsSUFBSSxFQUFFO0FBQS9CLFNBQVA7O0FBQ0YsV0FBSyxHQUFMO0FBQ0UsZUFBTztBQUFFRixVQUFBQSxLQUFGO0FBQVNELFVBQUFBLEtBQVQ7QUFBZ0JFLFVBQUFBLE9BQWhCO0FBQXlCQyxVQUFBQSxJQUFJLEVBQUU7QUFBL0IsU0FBUDs7QUFDRjtBQUNFLGVBQU87QUFBRUYsVUFBQUEsS0FBRjtBQUFTRCxVQUFBQSxLQUFUO0FBQWdCRSxVQUFBQSxPQUFPLEVBQUVBLE9BQU8sR0FBRyxDQUFuQztBQUFzQ0MsVUFBQUE7QUFBdEMsU0FBUDtBQU5KO0FBUUQsR0FUTSxNQVNBO0FBQ0wsV0FBTztBQUFFRixNQUFBQSxLQUFGO0FBQVNELE1BQUFBLEtBQVQ7QUFBZ0JFLE1BQUFBLE9BQWhCO0FBQXlCQyxNQUFBQSxJQUFJLEVBQUVBLElBQUksQ0FBQ0UsT0FBTCxDQUFhLFNBQWIsRUFBd0IsRUFBeEI7QUFBL0IsS0FBUDtBQUNEO0FBQ0Y7O0FBRUQsU0FBU0MsT0FBVCxDQUFpQkMsS0FBakIsRUFBd0I7QUFDdEIsU0FBT0EsS0FBSyxDQUNUQyxLQURJLENBQ0UsRUFERixFQUVKQyxNQUZJLENBRUdWLEtBRkgsRUFFVTtBQUFFQyxJQUFBQSxLQUFLLEVBQUUsQ0FBVDtBQUFZQyxJQUFBQSxLQUFLLEVBQUUsQ0FBbkI7QUFBc0JDLElBQUFBLE9BQU8sRUFBRSxDQUEvQjtBQUFrQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQXhDLEdBRlYsQ0FBUDtBQUdEOztBQUVNLE1BQU1PLEtBQUssR0FBR0gsS0FBSyxJQUFJRCxPQUFPLENBQUNDLEtBQUQsQ0FBUCxDQUFlUCxLQUF0Qzs7OztBQUNBLE1BQU1XLEtBQUssR0FBR0osS0FBSyxJQUFJRCxPQUFPLENBQUNDLEtBQUQsQ0FBUCxDQUFlTCxPQUF0QyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHBhcnNlKHsgc2NvcmUsIGxldmVsLCByZW1vdmVkLCBtb2RlIH0sIG5leHQpIHtcbiAgaWYgKG1vZGUgPT09ICdyZWFkJykge1xuICAgIHN3aXRjaCAobmV4dCkge1xuICAgICAgY2FzZSAneyc6XG4gICAgICAgIHJldHVybiB7IGxldmVsOiBsZXZlbCArIDEsIHNjb3JlOiBzY29yZSArIGxldmVsICsgMSwgcmVtb3ZlZCwgbW9kZSB9O1xuICAgICAgY2FzZSAnfSc6XG4gICAgICAgIHJldHVybiB7IGxldmVsOiBsZXZlbCAtIDEsIHNjb3JlLCByZW1vdmVkLCBtb2RlIH07XG4gICAgICBjYXNlICc8JzpcbiAgICAgICAgcmV0dXJuIHsgbGV2ZWwsIHNjb3JlLCByZW1vdmVkLCBtb2RlOiAnZ2FyYmFnZScgfTtcbiAgICAgIGNhc2UgJyEnOlxuICAgICAgICByZXR1cm4geyBsZXZlbCwgc2NvcmUsIHJlbW92ZWQsIG1vZGU6ICdpZ25vcmUtcmVhZCcgfTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiB7IGxldmVsLCBzY29yZSwgcmVtb3ZlZCwgbW9kZSB9O1xuICAgIH1cbiAgfSBlbHNlIGlmIChtb2RlID09PSAnZ2FyYmFnZScpIHtcbiAgICBzd2l0Y2ggKG5leHQpIHtcbiAgICAgIGNhc2UgJz4nOlxuICAgICAgICByZXR1cm4geyBsZXZlbCwgc2NvcmUsIHJlbW92ZWQsIG1vZGU6ICdyZWFkJyB9O1xuICAgICAgY2FzZSAnISc6XG4gICAgICAgIHJldHVybiB7IGxldmVsLCBzY29yZSwgcmVtb3ZlZCwgbW9kZTogJ2lnbm9yZS1nYXJiYWdlJyB9O1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHsgbGV2ZWwsIHNjb3JlLCByZW1vdmVkOiByZW1vdmVkICsgMSwgbW9kZSB9O1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geyBsZXZlbCwgc2NvcmUsIHJlbW92ZWQsIG1vZGU6IG1vZGUucmVwbGFjZSgnaWdub3JlLScsICcnKSB9O1xuICB9XG59XG5cbmZ1bmN0aW9uIHByb2Nlc3MoaW5wdXQpIHtcbiAgcmV0dXJuIGlucHV0XG4gICAgLnNwbGl0KCcnKVxuICAgIC5yZWR1Y2UocGFyc2UsIHsgc2NvcmU6IDAsIGxldmVsOiAwLCByZW1vdmVkOiAwLCBtb2RlOiAncmVhZCcgfSk7XG59XG5cbmV4cG9ydCBjb25zdCBwYXJ0MSA9IGlucHV0ID0+IHByb2Nlc3MoaW5wdXQpLnNjb3JlO1xuZXhwb3J0IGNvbnN0IHBhcnQyID0gaW5wdXQgPT4gcHJvY2VzcyhpbnB1dCkucmVtb3ZlZDtcbiJdfQ==