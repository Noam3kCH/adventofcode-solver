aced7fc1f1fce597bb7e4a8b30ee21e0
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.part2 = exports.part1 = void 0;

var _jsCombinatorics = _interopRequireDefault(require("js-combinatorics"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function f(boxes, total, part) {
  const rest = (all, sub) => all.filter(x => sub.indexOf(x) === -1);

  const product = x => x.reduce((p, x) => p * x);

  for (let i = 1; i <= boxes.length; i++) {
    const options = _jsCombinatorics.default.combination(boxes, i).filter(a => a.reduce((s, x) => s + x) === total);

    if (options.length) {
      if (part === 1) {
        return true;
      } else {
        const good = options.sort((a, b) => product(a) - product(b)).find(x => f(rest(boxes, x), total, part - 1));
        return product(good);
      }
    }
  }
}

function solve(input, x) {
  const boxes = input.split('\n').map(x => parseInt(x));
  const total = boxes.reduce((sum, x) => sum + x);
  return f(boxes, total / x, x);
}

const part1 = input => solve(input, 3);

exports.part1 = part1;

const part2 = input => solve(input, 4);

exports.part2 = part2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTI0LmpzIl0sIm5hbWVzIjpbImYiLCJib3hlcyIsInRvdGFsIiwicGFydCIsInJlc3QiLCJhbGwiLCJzdWIiLCJmaWx0ZXIiLCJ4IiwiaW5kZXhPZiIsInByb2R1Y3QiLCJyZWR1Y2UiLCJwIiwiaSIsImxlbmd0aCIsIm9wdGlvbnMiLCJDb21iaW5hdG9yaWNzIiwiY29tYmluYXRpb24iLCJhIiwicyIsImdvb2QiLCJzb3J0IiwiYiIsImZpbmQiLCJzb2x2ZSIsImlucHV0Iiwic3BsaXQiLCJtYXAiLCJwYXJzZUludCIsInN1bSIsInBhcnQxIiwicGFydDIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLFNBQVNBLENBQVQsQ0FBV0MsS0FBWCxFQUFrQkMsS0FBbEIsRUFBeUJDLElBQXpCLEVBQStCO0FBQzdCLFFBQU1DLElBQUksR0FBRyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBY0QsR0FBRyxDQUFDRSxNQUFKLENBQVdDLENBQUMsSUFBSUYsR0FBRyxDQUFDRyxPQUFKLENBQVlELENBQVosTUFBbUIsQ0FBQyxDQUFwQyxDQUEzQjs7QUFDQSxRQUFNRSxPQUFPLEdBQUdGLENBQUMsSUFBSUEsQ0FBQyxDQUFDRyxNQUFGLENBQVMsQ0FBQ0MsQ0FBRCxFQUFJSixDQUFKLEtBQVVJLENBQUMsR0FBR0osQ0FBdkIsQ0FBckI7O0FBRUEsT0FBSyxJQUFJSyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxJQUFJWixLQUFLLENBQUNhLE1BQTNCLEVBQW1DRCxDQUFDLEVBQXBDLEVBQXdDO0FBQ3RDLFVBQU1FLE9BQU8sR0FBR0MseUJBQWNDLFdBQWQsQ0FBMEJoQixLQUExQixFQUFpQ1ksQ0FBakMsRUFBb0NOLE1BQXBDLENBQ2RXLENBQUMsSUFBSUEsQ0FBQyxDQUFDUCxNQUFGLENBQVMsQ0FBQ1EsQ0FBRCxFQUFJWCxDQUFKLEtBQVVXLENBQUMsR0FBR1gsQ0FBdkIsTUFBOEJOLEtBRHJCLENBQWhCOztBQUdBLFFBQUlhLE9BQU8sQ0FBQ0QsTUFBWixFQUFvQjtBQUNsQixVQUFJWCxJQUFJLEtBQUssQ0FBYixFQUFnQjtBQUNkLGVBQU8sSUFBUDtBQUNELE9BRkQsTUFFTztBQUNMLGNBQU1pQixJQUFJLEdBQUdMLE9BQU8sQ0FDakJNLElBRFUsQ0FDTCxDQUFDSCxDQUFELEVBQUlJLENBQUosS0FBVVosT0FBTyxDQUFDUSxDQUFELENBQVAsR0FBYVIsT0FBTyxDQUFDWSxDQUFELENBRHpCLEVBRVZDLElBRlUsQ0FFTGYsQ0FBQyxJQUFJUixDQUFDLENBQUNJLElBQUksQ0FBQ0gsS0FBRCxFQUFRTyxDQUFSLENBQUwsRUFBaUJOLEtBQWpCLEVBQXdCQyxJQUFJLEdBQUcsQ0FBL0IsQ0FGRCxDQUFiO0FBR0EsZUFBT08sT0FBTyxDQUFDVSxJQUFELENBQWQ7QUFDRDtBQUNGO0FBQ0Y7QUFDRjs7QUFFRCxTQUFTSSxLQUFULENBQWVDLEtBQWYsRUFBc0JqQixDQUF0QixFQUF5QjtBQUN2QixRQUFNUCxLQUFLLEdBQUd3QixLQUFLLENBQUNDLEtBQU4sQ0FBWSxJQUFaLEVBQWtCQyxHQUFsQixDQUFzQm5CLENBQUMsSUFBSW9CLFFBQVEsQ0FBQ3BCLENBQUQsQ0FBbkMsQ0FBZDtBQUNBLFFBQU1OLEtBQUssR0FBR0QsS0FBSyxDQUFDVSxNQUFOLENBQWEsQ0FBQ2tCLEdBQUQsRUFBTXJCLENBQU4sS0FBWXFCLEdBQUcsR0FBR3JCLENBQS9CLENBQWQ7QUFDQSxTQUFPUixDQUFDLENBQUNDLEtBQUQsRUFBUUMsS0FBSyxHQUFHTSxDQUFoQixFQUFtQkEsQ0FBbkIsQ0FBUjtBQUNEOztBQUVNLE1BQU1zQixLQUFLLEdBQUdMLEtBQUssSUFBSUQsS0FBSyxDQUFDQyxLQUFELEVBQVEsQ0FBUixDQUE1Qjs7OztBQUNBLE1BQU1NLEtBQUssR0FBR04sS0FBSyxJQUFJRCxLQUFLLENBQUNDLEtBQUQsRUFBUSxDQUFSLENBQTVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbWJpbmF0b3JpY3MgZnJvbSAnanMtY29tYmluYXRvcmljcyc7XG5cbmZ1bmN0aW9uIGYoYm94ZXMsIHRvdGFsLCBwYXJ0KSB7XG4gIGNvbnN0IHJlc3QgPSAoYWxsLCBzdWIpID0+IGFsbC5maWx0ZXIoeCA9PiBzdWIuaW5kZXhPZih4KSA9PT0gLTEpO1xuICBjb25zdCBwcm9kdWN0ID0geCA9PiB4LnJlZHVjZSgocCwgeCkgPT4gcCAqIHgpO1xuXG4gIGZvciAobGV0IGkgPSAxOyBpIDw9IGJveGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IENvbWJpbmF0b3JpY3MuY29tYmluYXRpb24oYm94ZXMsIGkpLmZpbHRlcihcbiAgICAgIGEgPT4gYS5yZWR1Y2UoKHMsIHgpID0+IHMgKyB4KSA9PT0gdG90YWwsXG4gICAgKTtcbiAgICBpZiAob3B0aW9ucy5sZW5ndGgpIHtcbiAgICAgIGlmIChwYXJ0ID09PSAxKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgZ29vZCA9IG9wdGlvbnNcbiAgICAgICAgICAuc29ydCgoYSwgYikgPT4gcHJvZHVjdChhKSAtIHByb2R1Y3QoYikpXG4gICAgICAgICAgLmZpbmQoeCA9PiBmKHJlc3QoYm94ZXMsIHgpLCB0b3RhbCwgcGFydCAtIDEpKTtcbiAgICAgICAgcmV0dXJuIHByb2R1Y3QoZ29vZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHNvbHZlKGlucHV0LCB4KSB7XG4gIGNvbnN0IGJveGVzID0gaW5wdXQuc3BsaXQoJ1xcbicpLm1hcCh4ID0+IHBhcnNlSW50KHgpKTtcbiAgY29uc3QgdG90YWwgPSBib3hlcy5yZWR1Y2UoKHN1bSwgeCkgPT4gc3VtICsgeCk7XG4gIHJldHVybiBmKGJveGVzLCB0b3RhbCAvIHgsIHgpO1xufVxuXG5leHBvcnQgY29uc3QgcGFydDEgPSBpbnB1dCA9PiBzb2x2ZShpbnB1dCwgMyk7XG5leHBvcnQgY29uc3QgcGFydDIgPSBpbnB1dCA9PiBzb2x2ZShpbnB1dCwgNCk7XG4iXX0=