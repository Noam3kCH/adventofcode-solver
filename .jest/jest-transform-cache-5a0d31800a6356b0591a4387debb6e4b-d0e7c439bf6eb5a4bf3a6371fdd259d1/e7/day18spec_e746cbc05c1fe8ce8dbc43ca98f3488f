92e795035e41f6cdd223b37008f5a132
"use strict";

var _day = require("./day18.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day18 2017', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)(['set a 1', 'add a 2', 'mul a a', 'mod a 5', 'snd a', 'set a 0', 'rcv a', 'jgz a -1', 'set a 1', 'jgz a -2'].join('\n'))).toEqual(4);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(4601);
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples', () => {// expect(part2('1')).toEqual('1');
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(6858);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTE4LnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0Iiwiam9pbiIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7Ozs7QUFFQSxNQUFNQSxLQUFLLEdBQUcsd0JBQVUsS0FBWUMsR0FBdEIsQ0FBZDtBQUVBQyxRQUFRLENBQUMsWUFBRCxFQUFlLE1BQU07QUFDM0JBLEVBQUFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBTTtBQUN0QkMsSUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLE1BQU07QUFDMUNDLE1BQUFBLE1BQU0sQ0FDSixnQkFDRSxDQUNFLFNBREYsRUFFRSxTQUZGLEVBR0UsU0FIRixFQUlFLFNBSkYsRUFLRSxPQUxGLEVBTUUsU0FORixFQU9FLE9BUEYsRUFRRSxVQVJGLEVBU0UsU0FURixFQVVFLFVBVkYsRUFXRUMsSUFYRixDQVdPLElBWFAsQ0FERixDQURJLENBQU4sQ0FlRUMsT0FmRixDQWVVLENBZlY7QUFnQkQsS0FqQkMsQ0FBRjtBQW1CQUgsSUFBQUEsRUFBRSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDdkNDLE1BQUFBLE1BQU0sQ0FBQyxnQkFBTUosS0FBTixDQUFELENBQU4sQ0FBcUJNLE9BQXJCLENBQTZCLElBQTdCO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0F2Qk8sQ0FBUjtBQXlCQUosRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTSxDQUMxQztBQUNELEtBRkMsQ0FBRjtBQUlBQSxJQUFBQSxFQUFFLENBQUMsOEJBQUQsRUFBaUMsTUFBTTtBQUN2Q0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNSixLQUFOLENBQUQsQ0FBTixDQUFxQk0sT0FBckIsQ0FBNkIsSUFBN0I7QUFDRCxLQUZDLENBQUY7QUFHRCxHQVJPLENBQVI7QUFTRCxDQW5DTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFydDEsIHBhcnQyIH0gZnJvbSAnLi9kYXkxOC5qcyc7XG5pbXBvcnQgcmVhZElucHV0IGZyb20gJy4uL3V0aWxzL3JlYWQtaW5wdXQnO1xuXG5jb25zdCBpbnB1dCA9IHJlYWRJbnB1dChpbXBvcnQubWV0YS51cmwpO1xuXG5kZXNjcmliZSgnZGF5MTggMjAxNycsICgpID0+IHtcbiAgZGVzY3JpYmUoJ3BhcnQxJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAxIGV4YW1wbGVzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KFxuICAgICAgICBwYXJ0MShcbiAgICAgICAgICBbXG4gICAgICAgICAgICAnc2V0IGEgMScsXG4gICAgICAgICAgICAnYWRkIGEgMicsXG4gICAgICAgICAgICAnbXVsIGEgYScsXG4gICAgICAgICAgICAnbW9kIGEgNScsXG4gICAgICAgICAgICAnc25kIGEnLFxuICAgICAgICAgICAgJ3NldCBhIDAnLFxuICAgICAgICAgICAgJ3JjdiBhJyxcbiAgICAgICAgICAgICdqZ3ogYSAtMScsXG4gICAgICAgICAgICAnc2V0IGEgMScsXG4gICAgICAgICAgICAnamd6IGEgLTInLFxuICAgICAgICAgIF0uam9pbignXFxuJyksXG4gICAgICAgICksXG4gICAgICApLnRvRXF1YWwoNCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBpbnB1dCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MShpbnB1dCkpLnRvRXF1YWwoNDYwMSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdwYXJ0MicsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMiBleGFtcGxlcycsICgpID0+IHtcbiAgICAgIC8vIGV4cGVjdChwYXJ0MignMScpKS50b0VxdWFsKCcxJyk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMiBpbnB1dCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MihpbnB1dCkpLnRvRXF1YWwoNjg1OCk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=