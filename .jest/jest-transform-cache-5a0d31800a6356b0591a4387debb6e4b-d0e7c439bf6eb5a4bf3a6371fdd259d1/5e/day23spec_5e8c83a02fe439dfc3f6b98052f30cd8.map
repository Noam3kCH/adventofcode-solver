{"version":3,"sources":["day23.spec.js"],"names":["input","url","oldInput","toString","replace","describe","it","expect","join","toEqual","a","b","c","d","index"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AACA,MAAMC,QAAQ,GAAG,wBAAU,KAAYD,GAAZ,CAAgBE,QAAhB,GAA2BC,OAA3B,CAAmC,KAAnC,EAA0C,IAA1C,CAAV,CAAjB;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CAAC,UAAD,EAAa,OAAb,EAAsB,OAAtB,EAA+B,OAA/B,EAAwC,SAAxC,EAAmD,OAAnD,EAA4DC,IAA5D,CACE,IADF,CADF,CADI,CAAN,CAMEC,OANF,CAMU,EANV;AAOAF,MAAAA,MAAM,CAAC,gBAAML,QAAN,EAAgB;AAAEQ,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE,CAAX;AAAcC,QAAAA,CAAC,EAAE,CAAjB;AAAoBC,QAAAA,CAAC,EAAE,CAAvB;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAAhB,CAAD,CAAN,CAA8DL,OAA9D,CACE,MADF,EAR0C,CAW1C;;AACAF,MAAAA,MAAM,CACJ,gBACE,CACE,SADF,EAEE,OAFF,EAGE,OAHF,EAIE,OAJF,EAKE,SALF,EAME,OANF,EAOE,OAPF,EAQEC,IARF,CAQO,IARP,CADF,CADI,CAAN,CAYEC,OAZF,CAYU,CAZV;AAaD,KAzBC,CAAF;AA2BAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMP,KAAN,CAAD,CAAN,CAAqBS,OAArB,CAA6B,KAA7B;AACD,KAFC,CAAF;AAGD,GA/BO,CAAR;AAiCAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMP,KAAN,CAAD,CAAN,CAAqBS,OAArB,CAA6B,SAA7B;AACD,KAFC,CAAF;AAGD,GAJO,CAAR;AAKD,CAvCO,CAAR","sourcesContent":["import { part1, part2 } from './day23.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\nconst oldInput = readInput(import.meta.url.toString().replace(/23/g, '12'));\n\ndescribe('day23 2016', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(\n          ['cpy 41 a', 'inc a', 'inc a', 'dec a', 'jnz a 2', 'dec a'].join(\n            '\\n',\n          ),\n        ),\n      ).toEqual(42);\n      expect(part1(oldInput, { a: 0, b: 0, c: 0, d: 0, index: 0 })).toEqual(\n        317993,\n      );\n      // expect(day(oldInput, {a: 0, b: 0, c: 1, d: 0, index: 0}).part2).toEqual(9227647);\n      expect(\n        part1(\n          [\n            'cpy 2 a',\n            'tgl a',\n            'tgl a',\n            'tgl a',\n            'cpy 1 a',\n            'dec a',\n            'dec a',\n          ].join('\\n'),\n        ),\n      ).toEqual(3);\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(10880);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(479007440);\n    });\n  });\n});\n"]}