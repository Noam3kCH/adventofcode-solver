{"version":3,"sources":["day17.js"],"names":["getNeighbors","point","U","D","L","R","x","y","path","filter","p","solve","input","shortest","queue","max","length","next","shift","Math","doors","slice","split","map","includes","concat","part1","part2"],"mappings":";;;;;;;AAAA;;;;AAEA,SAASA,YAAT,CAAsBC,KAAtB,EAA6B,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAA7B,EAA2C;AACzC,SAAO,CACLH,CAAC,IAAI;AAAEI,IAAAA,CAAC,EAAEL,KAAK,CAACK,CAAX;AAAcC,IAAAA,CAAC,EAAEN,KAAK,CAACM,CAAN,GAAU,CAA3B;AAA8BC,IAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,GAAa;AAAjD,GADA,EAELL,CAAC,IAAI;AAAEG,IAAAA,CAAC,EAAEL,KAAK,CAACK,CAAX;AAAcC,IAAAA,CAAC,EAAEN,KAAK,CAACM,CAAN,GAAU,CAA3B;AAA8BC,IAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,GAAa;AAAjD,GAFA,EAGLJ,CAAC,IAAI;AAAEE,IAAAA,CAAC,EAAEL,KAAK,CAACK,CAAN,GAAU,CAAf;AAAkBC,IAAAA,CAAC,EAAEN,KAAK,CAACM,CAA3B;AAA8BC,IAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,GAAa;AAAjD,GAHA,EAILH,CAAC,IAAI;AAAEC,IAAAA,CAAC,EAAEL,KAAK,CAACK,CAAN,GAAU,CAAf;AAAkBC,IAAAA,CAAC,EAAEN,KAAK,CAACM,CAA3B;AAA8BC,IAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,GAAa;AAAjD,GAJA,EAKLC,MALK,CAKEC,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACJ,CAAF,IAAO,CAAZ,IAAiBI,CAAC,CAACH,CAAF,IAAO,CAAxB,IAA6BG,CAAC,CAACJ,CAAF,IAAO,CAApC,IAAyCI,CAAC,CAACH,CAAF,IAAO,CALvD,CAAP;AAMD;;AAED,SAASI,KAAT,CAAeC,KAAf,EAAsBC,QAAQ,GAAG,IAAjC,EAAuC;AACrC,MAAIC,KAAK,GAAG,CAAC;AAAER,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE,CAAX;AAAcC,IAAAA,IAAI,EAAE;AAApB,GAAD,CAAZ;AAAA,MACEO,GAAG,GAAG,CAAC,CADT;;AAEA,SAAOD,KAAK,CAACE,MAAN,GAAe,CAAtB,EAAyB;AACvB,UAAMC,IAAI,GAAGH,KAAK,CAACI,KAAN,EAAb;;AACA,QAAID,IAAI,CAACX,CAAL,KAAW,CAAX,IAAgBW,IAAI,CAACV,CAAL,KAAW,CAA/B,EAAkC;AAChC,UAAIM,QAAJ,EAAc;AACZ,eAAOI,IAAI,CAACT,IAAZ;AACD,OAFD,MAEO;AACLO,QAAAA,GAAG,GAAGI,IAAI,CAACJ,GAAL,CAASA,GAAT,EAAcE,IAAI,CAACT,IAAL,CAAUQ,MAAxB,CAAN;AACD;AACF,KAND,MAMO;AACL,YAAMI,KAAK,GAAG,iBAAIR,KAAK,GAAGK,IAAI,CAACT,IAAjB,EACXa,KADW,CACL,CADK,EACF,CADE,EAEXC,KAFW,CAEL,EAFK,EAGXC,GAHW,CAGPjB,CAAC,IAAI,QAAQkB,QAAR,CAAiBlB,CAAjB,CAHE,CAAd;AAIAQ,MAAAA,KAAK,GAAGA,KAAK,CAACW,MAAN,CAAazB,YAAY,CAACiB,IAAD,EAAOG,KAAP,CAAzB,CAAR;AACD;AACF;;AACD,SAAOL,GAAP;AACD;;AAEM,MAAMW,KAAK,GAAGd,KAAK,IAAID,KAAK,CAACC,KAAD,EAAQ,IAAR,CAA5B;;;;AACA,MAAMe,KAAK,GAAGf,KAAK,IAAID,KAAK,CAACC,KAAD,EAAQ,KAAR,CAA5B","sourcesContent":["import md5 from '../utils/md5.js';\n\nfunction getNeighbors(point, [U, D, L, R]) {\n  return [\n    U && { x: point.x, y: point.y - 1, path: point.path + 'U' },\n    D && { x: point.x, y: point.y + 1, path: point.path + 'D' },\n    L && { x: point.x - 1, y: point.y, path: point.path + 'L' },\n    R && { x: point.x + 1, y: point.y, path: point.path + 'R' },\n  ].filter(p => p && p.x >= 0 && p.y >= 0 && p.x <= 3 && p.y <= 3);\n}\n\nfunction solve(input, shortest = true) {\n  let queue = [{ x: 0, y: 0, path: '' }],\n    max = -1;\n  while (queue.length > 0) {\n    const next = queue.shift();\n    if (next.x === 3 && next.y === 3) {\n      if (shortest) {\n        return next.path;\n      } else {\n        max = Math.max(max, next.path.length);\n      }\n    } else {\n      const doors = md5(input + next.path)\n        .slice(0, 4)\n        .split('')\n        .map(x => 'bcdef'.includes(x));\n      queue = queue.concat(getNeighbors(next, doors));\n    }\n  }\n  return max;\n}\n\nexport const part1 = input => solve(input, true);\nexport const part2 = input => solve(input, false);\n"]}