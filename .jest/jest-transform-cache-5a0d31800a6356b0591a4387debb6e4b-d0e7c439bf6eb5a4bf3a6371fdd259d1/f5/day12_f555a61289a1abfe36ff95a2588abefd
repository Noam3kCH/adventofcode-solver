e63807d1a99bc9bf300b8f9c122e553e
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.part2 = exports.part1 = void 0;

function toReducer(str) {
  const params = str.split(/\s+/);
  const ops = {
    cpy: (src, register) => state => state[register] = src.match(/^\d+$/) ? parseInt(src) : state[src],
    inc: register => state => state[register]++,
    dec: register => state => state[register]--,
    jnz: (register, distance) => state => state.index += state[register] === 0 ? 0 : parseInt(distance) - 1
  };
  const cmd = ops[params.shift()](...params);
  return state => {
    cmd(state);
    state.index++;
  };
}

function run(commands, state) {
  while (commands.length > state.index) {
    commands[state.index](state);
  }

  return state;
}

const part1 = input => run(input.split('\n').map(toReducer), {
  a: 0,
  b: 0,
  c: 0,
  d: 0,
  index: 0
}).a;

exports.part1 = part1;

const part2 = input => run(input.split('\n').map(toReducer), {
  a: 0,
  b: 0,
  c: 1,
  d: 0,
  index: 0
}).a;

exports.part2 = part2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTEyLmpzIl0sIm5hbWVzIjpbInRvUmVkdWNlciIsInN0ciIsInBhcmFtcyIsInNwbGl0Iiwib3BzIiwiY3B5Iiwic3JjIiwicmVnaXN0ZXIiLCJzdGF0ZSIsIm1hdGNoIiwicGFyc2VJbnQiLCJpbmMiLCJkZWMiLCJqbnoiLCJkaXN0YW5jZSIsImluZGV4IiwiY21kIiwic2hpZnQiLCJydW4iLCJjb21tYW5kcyIsImxlbmd0aCIsInBhcnQxIiwiaW5wdXQiLCJtYXAiLCJhIiwiYiIsImMiLCJkIiwicGFydDIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxTQUFTQSxTQUFULENBQW1CQyxHQUFuQixFQUF3QjtBQUN0QixRQUFNQyxNQUFNLEdBQUdELEdBQUcsQ0FBQ0UsS0FBSixDQUFVLEtBQVYsQ0FBZjtBQUNBLFFBQU1DLEdBQUcsR0FBRztBQUNWQyxJQUFBQSxHQUFHLEVBQUUsQ0FBQ0MsR0FBRCxFQUFNQyxRQUFOLEtBQW1CQyxLQUFLLElBQzFCQSxLQUFLLENBQUNELFFBQUQsQ0FBTCxHQUFrQkQsR0FBRyxDQUFDRyxLQUFKLENBQVUsT0FBVixJQUFxQkMsUUFBUSxDQUFDSixHQUFELENBQTdCLEdBQXFDRSxLQUFLLENBQUNGLEdBQUQsQ0FGckQ7QUFHVkssSUFBQUEsR0FBRyxFQUFFSixRQUFRLElBQUlDLEtBQUssSUFBSUEsS0FBSyxDQUFDRCxRQUFELENBQUwsRUFIaEI7QUFJVkssSUFBQUEsR0FBRyxFQUFFTCxRQUFRLElBQUlDLEtBQUssSUFBSUEsS0FBSyxDQUFDRCxRQUFELENBQUwsRUFKaEI7QUFLVk0sSUFBQUEsR0FBRyxFQUFFLENBQUNOLFFBQUQsRUFBV08sUUFBWCxLQUF3Qk4sS0FBSyxJQUMvQkEsS0FBSyxDQUFDTyxLQUFOLElBQWVQLEtBQUssQ0FBQ0QsUUFBRCxDQUFMLEtBQW9CLENBQXBCLEdBQXdCLENBQXhCLEdBQTRCRyxRQUFRLENBQUNJLFFBQUQsQ0FBUixHQUFxQjtBQU56RCxHQUFaO0FBUUEsUUFBTUUsR0FBRyxHQUFHWixHQUFHLENBQUNGLE1BQU0sQ0FBQ2UsS0FBUCxFQUFELENBQUgsQ0FBb0IsR0FBR2YsTUFBdkIsQ0FBWjtBQUNBLFNBQU9NLEtBQUssSUFBSTtBQUNkUSxJQUFBQSxHQUFHLENBQUNSLEtBQUQsQ0FBSDtBQUNBQSxJQUFBQSxLQUFLLENBQUNPLEtBQU47QUFDRCxHQUhEO0FBSUQ7O0FBRUQsU0FBU0csR0FBVCxDQUFhQyxRQUFiLEVBQXVCWCxLQUF2QixFQUE4QjtBQUM1QixTQUFPVyxRQUFRLENBQUNDLE1BQVQsR0FBa0JaLEtBQUssQ0FBQ08sS0FBL0IsRUFBc0M7QUFDcENJLElBQUFBLFFBQVEsQ0FBQ1gsS0FBSyxDQUFDTyxLQUFQLENBQVIsQ0FBc0JQLEtBQXRCO0FBQ0Q7O0FBQ0QsU0FBT0EsS0FBUDtBQUNEOztBQUVNLE1BQU1hLEtBQUssR0FBR0MsS0FBSyxJQUN4QkosR0FBRyxDQUFDSSxLQUFLLENBQUNuQixLQUFOLENBQVksSUFBWixFQUFrQm9CLEdBQWxCLENBQXNCdkIsU0FBdEIsQ0FBRCxFQUFtQztBQUFFd0IsRUFBQUEsQ0FBQyxFQUFFLENBQUw7QUFBUUMsRUFBQUEsQ0FBQyxFQUFFLENBQVg7QUFBY0MsRUFBQUEsQ0FBQyxFQUFFLENBQWpCO0FBQW9CQyxFQUFBQSxDQUFDLEVBQUUsQ0FBdkI7QUFBMEJaLEVBQUFBLEtBQUssRUFBRTtBQUFqQyxDQUFuQyxDQUFILENBQTRFUyxDQUR2RTs7OztBQUVBLE1BQU1JLEtBQUssR0FBR04sS0FBSyxJQUN4QkosR0FBRyxDQUFDSSxLQUFLLENBQUNuQixLQUFOLENBQVksSUFBWixFQUFrQm9CLEdBQWxCLENBQXNCdkIsU0FBdEIsQ0FBRCxFQUFtQztBQUFFd0IsRUFBQUEsQ0FBQyxFQUFFLENBQUw7QUFBUUMsRUFBQUEsQ0FBQyxFQUFFLENBQVg7QUFBY0MsRUFBQUEsQ0FBQyxFQUFFLENBQWpCO0FBQW9CQyxFQUFBQSxDQUFDLEVBQUUsQ0FBdkI7QUFBMEJaLEVBQUFBLEtBQUssRUFBRTtBQUFqQyxDQUFuQyxDQUFILENBQTRFUyxDQUR2RSIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHRvUmVkdWNlcihzdHIpIHtcbiAgY29uc3QgcGFyYW1zID0gc3RyLnNwbGl0KC9cXHMrLyk7XG4gIGNvbnN0IG9wcyA9IHtcbiAgICBjcHk6IChzcmMsIHJlZ2lzdGVyKSA9PiBzdGF0ZSA9PlxuICAgICAgKHN0YXRlW3JlZ2lzdGVyXSA9IHNyYy5tYXRjaCgvXlxcZCskLykgPyBwYXJzZUludChzcmMpIDogc3RhdGVbc3JjXSksXG4gICAgaW5jOiByZWdpc3RlciA9PiBzdGF0ZSA9PiBzdGF0ZVtyZWdpc3Rlcl0rKyxcbiAgICBkZWM6IHJlZ2lzdGVyID0+IHN0YXRlID0+IHN0YXRlW3JlZ2lzdGVyXS0tLFxuICAgIGpuejogKHJlZ2lzdGVyLCBkaXN0YW5jZSkgPT4gc3RhdGUgPT5cbiAgICAgIChzdGF0ZS5pbmRleCArPSBzdGF0ZVtyZWdpc3Rlcl0gPT09IDAgPyAwIDogcGFyc2VJbnQoZGlzdGFuY2UpIC0gMSksXG4gIH07XG4gIGNvbnN0IGNtZCA9IG9wc1twYXJhbXMuc2hpZnQoKV0oLi4ucGFyYW1zKTtcbiAgcmV0dXJuIHN0YXRlID0+IHtcbiAgICBjbWQoc3RhdGUpO1xuICAgIHN0YXRlLmluZGV4Kys7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHJ1bihjb21tYW5kcywgc3RhdGUpIHtcbiAgd2hpbGUgKGNvbW1hbmRzLmxlbmd0aCA+IHN0YXRlLmluZGV4KSB7XG4gICAgY29tbWFuZHNbc3RhdGUuaW5kZXhdKHN0YXRlKTtcbiAgfVxuICByZXR1cm4gc3RhdGU7XG59XG5cbmV4cG9ydCBjb25zdCBwYXJ0MSA9IGlucHV0ID0+XG4gIHJ1bihpbnB1dC5zcGxpdCgnXFxuJykubWFwKHRvUmVkdWNlciksIHsgYTogMCwgYjogMCwgYzogMCwgZDogMCwgaW5kZXg6IDAgfSkuYTtcbmV4cG9ydCBjb25zdCBwYXJ0MiA9IGlucHV0ID0+XG4gIHJ1bihpbnB1dC5zcGxpdCgnXFxuJykubWFwKHRvUmVkdWNlciksIHsgYTogMCwgYjogMCwgYzogMSwgZDogMCwgaW5kZXg6IDAgfSkuYTtcbiJdfQ==