{"version":3,"sources":["day07.spec.js"],"names":["input","url","describe","it","expect","join","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,WADF,EAEE,WAFF,EAGE,WAHF,EAIE,WAJF,EAKE,WALF,EAME,+BANF,EAOE,WAPF,EAQE,+BARF,EASE,+BATF,EAUE,WAVF,EAWE,+BAXF,EAYE,WAZF,EAaE,WAbF,EAcEC,IAdF,CAcO,IAdP,CADF,CADI,CAAN,CAkBEC,OAlBF,CAkBU,MAlBV;AAmBD,KApBC,CAAF;AAsBAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,QAA7B;AACD,KAFC,CAAF;AAGD,GA1BO,CAAR;AA4BAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,WADF,EAEE,WAFF,EAGE,WAHF,EAIE,WAJF,EAKE,WALF,EAME,+BANF,EAOE,WAPF,EAQE,+BARF,EASE,+BATF,EAUE,WAVF,EAWE,+BAXF,EAYE,WAZF,EAaE,WAbF,EAcEC,IAdF,CAcO,IAdP,CADF,CADI,CAAN,CAkBEC,OAlBF,CAkBU,EAlBV;AAmBD,KApBC,CAAF;AAsBAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,IAA7B;AACD,KAFC,CAAF;AAGD,GA1BO,CAAR;AA2BD,CAxDO,CAAR","sourcesContent":["import { part1, part2 } from './day07.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day07 2017', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(\n          [\n            'pbga (66)',\n            'xhth (57)',\n            'ebii (61)',\n            'havc (66)',\n            'ktlj (57)',\n            'fwft (72) -> ktlj, cntj, xhth',\n            'qoyq (66)',\n            'padx (45) -> pbga, havc, qoyq',\n            'tknk (41) -> ugml, padx, fwft',\n            'jptl (61)',\n            'ugml (68) -> gyxo, ebii, jptl',\n            'gyxo (61)',\n            'cntj (57)',\n          ].join('\\n'),\n        ),\n      ).toEqual('tknk');\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual('aapssr');\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      expect(\n        part2(\n          [\n            'pbga (66)',\n            'xhth (57)',\n            'ebii (61)',\n            'havc (66)',\n            'ktlj (57)',\n            'fwft (72) -> ktlj, cntj, xhth',\n            'qoyq (66)',\n            'padx (45) -> pbga, havc, qoyq',\n            'tknk (41) -> ugml, padx, fwft',\n            'jptl (61)',\n            'ugml (68) -> gyxo, ebii, jptl',\n            'gyxo (61)',\n            'cntj (57)',\n          ].join('\\n'),\n        ),\n      ).toEqual(60);\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(1458);\n    });\n  });\n});\n"]}