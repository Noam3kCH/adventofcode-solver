53445a28900bc1a1017532ab57f03a8e
"use strict";

var _day = require("./day07.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day07 2017', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)(['pbga (66)', 'xhth (57)', 'ebii (61)', 'havc (66)', 'ktlj (57)', 'fwft (72) -> ktlj, cntj, xhth', 'qoyq (66)', 'padx (45) -> pbga, havc, qoyq', 'tknk (41) -> ugml, padx, fwft', 'jptl (61)', 'ugml (68) -> gyxo, ebii, jptl', 'gyxo (61)', 'cntj (57)'].join('\n'))).toEqual('tknk');
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual('aapssr');
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples', () => {
      expect((0, _day.part2)(['pbga (66)', 'xhth (57)', 'ebii (61)', 'havc (66)', 'ktlj (57)', 'fwft (72) -> ktlj, cntj, xhth', 'qoyq (66)', 'padx (45) -> pbga, havc, qoyq', 'tknk (41) -> ugml, padx, fwft', 'jptl (61)', 'ugml (68) -> gyxo, ebii, jptl', 'gyxo (61)', 'cntj (57)'].join('\n'))).toEqual(60);
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(1458);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTA3LnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0Iiwiam9pbiIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7Ozs7QUFFQSxNQUFNQSxLQUFLLEdBQUcsd0JBQVUsS0FBWUMsR0FBdEIsQ0FBZDtBQUVBQyxRQUFRLENBQUMsWUFBRCxFQUFlLE1BQU07QUFDM0JBLEVBQUFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsTUFBTTtBQUN0QkMsSUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLE1BQU07QUFDMUNDLE1BQUFBLE1BQU0sQ0FDSixnQkFDRSxDQUNFLFdBREYsRUFFRSxXQUZGLEVBR0UsV0FIRixFQUlFLFdBSkYsRUFLRSxXQUxGLEVBTUUsK0JBTkYsRUFPRSxXQVBGLEVBUUUsK0JBUkYsRUFTRSwrQkFURixFQVVFLFdBVkYsRUFXRSwrQkFYRixFQVlFLFdBWkYsRUFhRSxXQWJGLEVBY0VDLElBZEYsQ0FjTyxJQWRQLENBREYsQ0FESSxDQUFOLENBa0JFQyxPQWxCRixDQWtCVSxNQWxCVjtBQW1CRCxLQXBCQyxDQUFGO0FBc0JBSCxJQUFBQSxFQUFFLENBQUMsOEJBQUQsRUFBaUMsTUFBTTtBQUN2Q0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNSixLQUFOLENBQUQsQ0FBTixDQUFxQk0sT0FBckIsQ0FBNkIsUUFBN0I7QUFDRCxLQUZDLENBQUY7QUFHRCxHQTFCTyxDQUFSO0FBNEJBSixFQUFBQSxRQUFRLENBQUMsT0FBRCxFQUFVLE1BQU07QUFDdEJDLElBQUFBLEVBQUUsQ0FBQyxpQ0FBRCxFQUFvQyxNQUFNO0FBQzFDQyxNQUFBQSxNQUFNLENBQ0osZ0JBQ0UsQ0FDRSxXQURGLEVBRUUsV0FGRixFQUdFLFdBSEYsRUFJRSxXQUpGLEVBS0UsV0FMRixFQU1FLCtCQU5GLEVBT0UsV0FQRixFQVFFLCtCQVJGLEVBU0UsK0JBVEYsRUFVRSxXQVZGLEVBV0UsK0JBWEYsRUFZRSxXQVpGLEVBYUUsV0FiRixFQWNFQyxJQWRGLENBY08sSUFkUCxDQURGLENBREksQ0FBTixDQWtCRUMsT0FsQkYsQ0FrQlUsRUFsQlY7QUFtQkQsS0FwQkMsQ0FBRjtBQXNCQUgsSUFBQUEsRUFBRSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDdkNDLE1BQUFBLE1BQU0sQ0FBQyxnQkFBTUosS0FBTixDQUFELENBQU4sQ0FBcUJNLE9BQXJCLENBQTZCLElBQTdCO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0ExQk8sQ0FBUjtBQTJCRCxDQXhETyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFydDEsIHBhcnQyIH0gZnJvbSAnLi9kYXkwNy5qcyc7XG5pbXBvcnQgcmVhZElucHV0IGZyb20gJy4uL3V0aWxzL3JlYWQtaW5wdXQnO1xuXG5jb25zdCBpbnB1dCA9IHJlYWRJbnB1dChpbXBvcnQubWV0YS51cmwpO1xuXG5kZXNjcmliZSgnZGF5MDcgMjAxNycsICgpID0+IHtcbiAgZGVzY3JpYmUoJ3BhcnQxJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAxIGV4YW1wbGVzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KFxuICAgICAgICBwYXJ0MShcbiAgICAgICAgICBbXG4gICAgICAgICAgICAncGJnYSAoNjYpJyxcbiAgICAgICAgICAgICd4aHRoICg1NyknLFxuICAgICAgICAgICAgJ2ViaWkgKDYxKScsXG4gICAgICAgICAgICAnaGF2YyAoNjYpJyxcbiAgICAgICAgICAgICdrdGxqICg1NyknLFxuICAgICAgICAgICAgJ2Z3ZnQgKDcyKSAtPiBrdGxqLCBjbnRqLCB4aHRoJyxcbiAgICAgICAgICAgICdxb3lxICg2NiknLFxuICAgICAgICAgICAgJ3BhZHggKDQ1KSAtPiBwYmdhLCBoYXZjLCBxb3lxJyxcbiAgICAgICAgICAgICd0a25rICg0MSkgLT4gdWdtbCwgcGFkeCwgZndmdCcsXG4gICAgICAgICAgICAnanB0bCAoNjEpJyxcbiAgICAgICAgICAgICd1Z21sICg2OCkgLT4gZ3l4bywgZWJpaSwganB0bCcsXG4gICAgICAgICAgICAnZ3l4byAoNjEpJyxcbiAgICAgICAgICAgICdjbnRqICg1NyknLFxuICAgICAgICAgIF0uam9pbignXFxuJyksXG4gICAgICAgICksXG4gICAgICApLnRvRXF1YWwoJ3RrbmsnKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAxIGlucHV0JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQxKGlucHV0KSkudG9FcXVhbCgnYWFwc3NyJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdwYXJ0MicsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMiBleGFtcGxlcycsICgpID0+IHtcbiAgICAgIGV4cGVjdChcbiAgICAgICAgcGFydDIoXG4gICAgICAgICAgW1xuICAgICAgICAgICAgJ3BiZ2EgKDY2KScsXG4gICAgICAgICAgICAneGh0aCAoNTcpJyxcbiAgICAgICAgICAgICdlYmlpICg2MSknLFxuICAgICAgICAgICAgJ2hhdmMgKDY2KScsXG4gICAgICAgICAgICAna3RsaiAoNTcpJyxcbiAgICAgICAgICAgICdmd2Z0ICg3MikgLT4ga3RsaiwgY250aiwgeGh0aCcsXG4gICAgICAgICAgICAncW95cSAoNjYpJyxcbiAgICAgICAgICAgICdwYWR4ICg0NSkgLT4gcGJnYSwgaGF2YywgcW95cScsXG4gICAgICAgICAgICAndGtuayAoNDEpIC0+IHVnbWwsIHBhZHgsIGZ3ZnQnLFxuICAgICAgICAgICAgJ2pwdGwgKDYxKScsXG4gICAgICAgICAgICAndWdtbCAoNjgpIC0+IGd5eG8sIGViaWksIGpwdGwnLFxuICAgICAgICAgICAgJ2d5eG8gKDYxKScsXG4gICAgICAgICAgICAnY250aiAoNTcpJyxcbiAgICAgICAgICBdLmpvaW4oJ1xcbicpLFxuICAgICAgICApLFxuICAgICAgKS50b0VxdWFsKDYwKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAyIGlucHV0JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQyKGlucHV0KSkudG9FcXVhbCgxNDU4KTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==