{"version":3,"sources":["day04.js"],"names":["calcSleep","input","lines","split","sort","map","x","regex","time","verb","id","match","parseInt","sleep","Map","initial","total","mins","current","start","forEach","line","guard","get","i","set","sleepyMin","Array","from","entries","a","b","pop","sleepyGuard","fn","checksum","sleepy","min","part1","part2"],"mappings":"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","sourcesContent":["function calcSleep(input) {\n  const lines = input\n    .split('\\n')\n    .sort()\n    .map(x => {\n      const regex = /^\\[[\\d-]+ \\d+:([\\d]+)\\] .* (#|asleep|up)(\\d+)?/;\n      const [, time, verb, id] = x.match(regex);\n      return { time: parseInt(time), verb, id };\n    });\n  const sleep = new Map();\n  const initial = () => ({ total: 0, mins: new Map() });\n  let current, start;\n  lines.forEach(line => {\n    if (line.verb === '#') {\n      current = line.id;\n    } else if (line.verb === 'asleep') {\n      start = line.time;\n    } else {\n      const guard = sleep.get(current) || initial();\n      for (let i = start; i < line.time; i++) {\n        guard.total++;\n        guard.mins.set(i, (guard.mins.get(i) || 0) + 1);\n      }\n      sleep.set(current, guard);\n    }\n  });\n  return sleep;\n}\n\nfunction sleepyMin(guard) {\n  return Array.from(guard.mins.entries())\n    .sort((a, b) => a[1] - b[1])\n    .pop();\n}\n\nfunction sleepyGuard(sleep, fn) {\n  return Array.from(sleep.entries())\n    .sort((a, b) => fn(a[1], b[1]))\n    .pop();\n}\n\nfunction checksum(input, fn) {\n  const sleep = calcSleep(input);\n  const sleepy = sleepyGuard(sleep, fn);\n  const min = sleepyMin(sleepy[1]);\n  return min[0] * sleepy[0];\n}\n\nexport function part1(input) {\n  return checksum(input, (a, b) => a.total - b.total);\n}\n\nexport function part2(input) {\n  return checksum(input, (a, b) => sleepyMin(a)[1] - sleepyMin(b)[1]);\n}\n"]}