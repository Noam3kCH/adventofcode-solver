{"version":3,"sources":["day18.js"],"names":["calcRow","row","split","map","x","i","l","c","r","join","solve","input","rows","count","match","length","part1","part2"],"mappings":";;;;;;;AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOA,GAAG,CACPC,KADI,CACE,EADF,EAEJC,GAFI,CAEA,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACb,UAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAY,CAACP,GAAG,CAACI,CAAC,GAAG,CAAL,CAAH,IAAc,GAAf,EAAoBJ,GAAG,CAACI,CAAD,CAAvB,EAA4BJ,GAAG,CAACI,CAAC,GAAG,CAAL,CAAH,IAAc,GAA1C,CAAlB;AACA,WAAQC,CAAC,KAAKC,CAAN,IAAWD,CAAC,KAAKE,CAAlB,IAAyBA,CAAC,KAAKD,CAAN,IAAWC,CAAC,KAAKF,CAA1C,GAA+C,GAA/C,GAAqD,GAA5D;AACD,GALI,EAMJG,IANI,CAMC,EAND,CAAP;AAOD;;AAED,SAASC,KAAT,CAAeC,KAAf,EAAsBC,IAAtB,EAA4B;AAC1B,MAAIX,GAAJ;AAAA,MACEY,KAAK,GAAG,CADV;;AAEA,OAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,IAApB,EAA0BP,CAAC,EAA3B,EAA+B;AAC7BJ,IAAAA,GAAG,GAAGI,CAAC,KAAK,CAAN,GAAUM,KAAV,GAAkBX,OAAO,CAACC,GAAD,CAA/B;AACAY,IAAAA,KAAK,IAAIZ,GAAG,CAACa,KAAJ,CAAU,KAAV,EAAiBC,MAA1B;AACD;;AACD,SAAOF,KAAP;AACD;;AAEM,MAAMG,KAAK,GAAG,CAACL,KAAD,EAAQC,IAAI,GAAG,EAAf,KAAsBF,KAAK,CAACC,KAAD,EAAQC,IAAR,CAAzC;;;;AACA,MAAMK,KAAK,GAAG,CAACN,KAAD,EAAQC,IAAI,GAAG,GAAf,KAAuBF,KAAK,CAACC,KAAD,EAAQC,IAAR,CAA1C","sourcesContent":["function calcRow(row) {\n  return row\n    .split('')\n    .map((x, i) => {\n      const [l, c, r] = [row[i - 1] || '.', row[i], row[i + 1] || '.'];\n      return (l !== c && l !== r) || (r !== c && r !== l) ? '^' : '.';\n    })\n    .join('');\n}\n\nfunction solve(input, rows) {\n  let row,\n    count = 0;\n  for (let i = 0; i < rows; i++) {\n    row = i === 0 ? input : calcRow(row);\n    count += row.match(/\\./g).length;\n  }\n  return count;\n}\n\nexport const part1 = (input, rows = 40) => solve(input, rows);\nexport const part2 = (input, rows = 4e5) => solve(input, rows);\n"]}