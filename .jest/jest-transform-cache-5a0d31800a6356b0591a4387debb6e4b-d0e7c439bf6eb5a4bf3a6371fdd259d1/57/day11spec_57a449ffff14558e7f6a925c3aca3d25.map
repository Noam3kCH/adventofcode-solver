{"version":3,"sources":["day11.spec.js"],"names":["input","url","describe","it","expect","join","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,8FADF,EAEE,iDAFF,EAGE,+CAHF,EAIE,6CAJF,EAKEC,IALF,CAKO,IALP,CADF,CADI,CAAN,CASEC,OATF,CASU,EATV;AAUD,KAXC,CAAF;AAaAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,EAA7B;AACD,KAFC,CAAF;AAGD,GAjBO,CAAR;AAmBAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,EAA7B;AACD,KAFC,CAAF;AAGD,GAJO,CAAR;AAKD,CAzBO,CAAR","sourcesContent":["import { part1, part2 } from './day11.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day11 2016', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(\n          [\n            'The first floor contains a hydrogen-compatible microchip and a lithium-compatible microchip.',\n            'The second floor contains a hydrogen generator.',\n            'The third floor contains a lithium generator.',\n            'The fourth floor contains nothing relevant.',\n          ].join('\\n'),\n        ),\n      ).toEqual(11);\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(33);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(57);\n    });\n  });\n});\n"]}