7e0ce99afe42d5fe6cbf16d75228cc85
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.part1 = part1;
exports.part2 = part2;
const directions = {
  D: {
    y: 1,
    x: 0
  },
  R: {
    y: 0,
    x: 1
  },
  U: {
    y: -1,
    x: 0
  },
  L: {
    y: 0,
    x: -1
  }
};

function move(keypad, position, step) {
  const next = {
    x: position.x + step.x,
    y: position.y + step.y
  };
  return keypad[next.y] && keypad[next.y][next.x] ? next : position;
}

function solve(input, keypad, start) {
  return input.split('\n').map(line => line.split('')).reduce((code, line) => {
    return code.concat(line.reduce((position, step) => {
      return move(keypad, position, directions[step]);
    }, code[code.length - 1] || start));
  }, []).map(key => keypad[key.y][key.x]).join('');
}

function part1(input) {
  const keypad1 = [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']];
  return solve(input, keypad1, {
    x: 1,
    y: 1
  });
}

function part2(input) {
  const keypad2 = [[NaN, NaN, '1', NaN, NaN], [NaN, '2', '3', '4', NaN], ['5', '6', '7', '8', '9'], [NaN, 'A', 'B', 'C', NaN], [NaN, NaN, 'D', NaN, NaN]];
  return solve(input, keypad2, {
    x: 0,
    y: 2
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTAyLmpzIl0sIm5hbWVzIjpbImRpcmVjdGlvbnMiLCJEIiwieSIsIngiLCJSIiwiVSIsIkwiLCJtb3ZlIiwia2V5cGFkIiwicG9zaXRpb24iLCJzdGVwIiwibmV4dCIsInNvbHZlIiwiaW5wdXQiLCJzdGFydCIsInNwbGl0IiwibWFwIiwibGluZSIsInJlZHVjZSIsImNvZGUiLCJjb25jYXQiLCJsZW5ndGgiLCJrZXkiLCJqb2luIiwicGFydDEiLCJrZXlwYWQxIiwicGFydDIiLCJrZXlwYWQyIiwiTmFOIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBTUEsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxDQUFDLEVBQUU7QUFBRUMsSUFBQUEsQ0FBQyxFQUFFLENBQUw7QUFBUUMsSUFBQUEsQ0FBQyxFQUFFO0FBQVgsR0FEYztBQUVqQkMsRUFBQUEsQ0FBQyxFQUFFO0FBQUVGLElBQUFBLENBQUMsRUFBRSxDQUFMO0FBQVFDLElBQUFBLENBQUMsRUFBRTtBQUFYLEdBRmM7QUFHakJFLEVBQUFBLENBQUMsRUFBRTtBQUFFSCxJQUFBQSxDQUFDLEVBQUUsQ0FBQyxDQUFOO0FBQVNDLElBQUFBLENBQUMsRUFBRTtBQUFaLEdBSGM7QUFJakJHLEVBQUFBLENBQUMsRUFBRTtBQUFFSixJQUFBQSxDQUFDLEVBQUUsQ0FBTDtBQUFRQyxJQUFBQSxDQUFDLEVBQUUsQ0FBQztBQUFaO0FBSmMsQ0FBbkI7O0FBT0EsU0FBU0ksSUFBVCxDQUFjQyxNQUFkLEVBQXNCQyxRQUF0QixFQUFnQ0MsSUFBaEMsRUFBc0M7QUFDcEMsUUFBTUMsSUFBSSxHQUFHO0FBQUVSLElBQUFBLENBQUMsRUFBRU0sUUFBUSxDQUFDTixDQUFULEdBQWFPLElBQUksQ0FBQ1AsQ0FBdkI7QUFBMEJELElBQUFBLENBQUMsRUFBRU8sUUFBUSxDQUFDUCxDQUFULEdBQWFRLElBQUksQ0FBQ1I7QUFBL0MsR0FBYjtBQUNBLFNBQU9NLE1BQU0sQ0FBQ0csSUFBSSxDQUFDVCxDQUFOLENBQU4sSUFBa0JNLE1BQU0sQ0FBQ0csSUFBSSxDQUFDVCxDQUFOLENBQU4sQ0FBZVMsSUFBSSxDQUFDUixDQUFwQixDQUFsQixHQUEyQ1EsSUFBM0MsR0FBa0RGLFFBQXpEO0FBQ0Q7O0FBRUQsU0FBU0csS0FBVCxDQUFlQyxLQUFmLEVBQXNCTCxNQUF0QixFQUE4Qk0sS0FBOUIsRUFBcUM7QUFDbkMsU0FBT0QsS0FBSyxDQUNURSxLQURJLENBQ0UsSUFERixFQUVKQyxHQUZJLENBRUFDLElBQUksSUFBSUEsSUFBSSxDQUFDRixLQUFMLENBQVcsRUFBWCxDQUZSLEVBR0pHLE1BSEksQ0FHRyxDQUFDQyxJQUFELEVBQU9GLElBQVAsS0FBZ0I7QUFDdEIsV0FBT0UsSUFBSSxDQUFDQyxNQUFMLENBQ0xILElBQUksQ0FBQ0MsTUFBTCxDQUFZLENBQUNULFFBQUQsRUFBV0MsSUFBWCxLQUFvQjtBQUM5QixhQUFPSCxJQUFJLENBQUNDLE1BQUQsRUFBU0MsUUFBVCxFQUFtQlQsVUFBVSxDQUFDVSxJQUFELENBQTdCLENBQVg7QUFDRCxLQUZELEVBRUdTLElBQUksQ0FBQ0EsSUFBSSxDQUFDRSxNQUFMLEdBQWMsQ0FBZixDQUFKLElBQXlCUCxLQUY1QixDQURLLENBQVA7QUFLRCxHQVRJLEVBU0YsRUFURSxFQVVKRSxHQVZJLENBVUFNLEdBQUcsSUFBSWQsTUFBTSxDQUFDYyxHQUFHLENBQUNwQixDQUFMLENBQU4sQ0FBY29CLEdBQUcsQ0FBQ25CLENBQWxCLENBVlAsRUFXSm9CLElBWEksQ0FXQyxFQVhELENBQVA7QUFZRDs7QUFFTSxTQUFTQyxLQUFULENBQWVYLEtBQWYsRUFBc0I7QUFDM0IsUUFBTVksT0FBTyxHQUFHLENBQ2QsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsQ0FEYyxFQUVkLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLENBRmMsRUFHZCxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxDQUhjLENBQWhCO0FBS0EsU0FBT2IsS0FBSyxDQUFDQyxLQUFELEVBQVFZLE9BQVIsRUFBaUI7QUFBRXRCLElBQUFBLENBQUMsRUFBRSxDQUFMO0FBQVFELElBQUFBLENBQUMsRUFBRTtBQUFYLEdBQWpCLENBQVo7QUFDRDs7QUFFTSxTQUFTd0IsS0FBVCxDQUFlYixLQUFmLEVBQXNCO0FBQzNCLFFBQU1jLE9BQU8sR0FBRyxDQUNkLENBQUNDLEdBQUQsRUFBTUEsR0FBTixFQUFXLEdBQVgsRUFBZ0JBLEdBQWhCLEVBQXFCQSxHQUFyQixDQURjLEVBRWQsQ0FBQ0EsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLEVBQWdCLEdBQWhCLEVBQXFCQSxHQUFyQixDQUZjLEVBR2QsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsRUFBZ0IsR0FBaEIsRUFBcUIsR0FBckIsQ0FIYyxFQUlkLENBQUNBLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxFQUFnQixHQUFoQixFQUFxQkEsR0FBckIsQ0FKYyxFQUtkLENBQUNBLEdBQUQsRUFBTUEsR0FBTixFQUFXLEdBQVgsRUFBZ0JBLEdBQWhCLEVBQXFCQSxHQUFyQixDQUxjLENBQWhCO0FBT0EsU0FBT2hCLEtBQUssQ0FBQ0MsS0FBRCxFQUFRYyxPQUFSLEVBQWlCO0FBQUV4QixJQUFBQSxDQUFDLEVBQUUsQ0FBTDtBQUFRRCxJQUFBQSxDQUFDLEVBQUU7QUFBWCxHQUFqQixDQUFaO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkaXJlY3Rpb25zID0ge1xuICBEOiB7IHk6IDEsIHg6IDAgfSxcbiAgUjogeyB5OiAwLCB4OiAxIH0sXG4gIFU6IHsgeTogLTEsIHg6IDAgfSxcbiAgTDogeyB5OiAwLCB4OiAtMSB9LFxufTtcblxuZnVuY3Rpb24gbW92ZShrZXlwYWQsIHBvc2l0aW9uLCBzdGVwKSB7XG4gIGNvbnN0IG5leHQgPSB7IHg6IHBvc2l0aW9uLnggKyBzdGVwLngsIHk6IHBvc2l0aW9uLnkgKyBzdGVwLnkgfTtcbiAgcmV0dXJuIGtleXBhZFtuZXh0LnldICYmIGtleXBhZFtuZXh0LnldW25leHQueF0gPyBuZXh0IDogcG9zaXRpb247XG59XG5cbmZ1bmN0aW9uIHNvbHZlKGlucHV0LCBrZXlwYWQsIHN0YXJ0KSB7XG4gIHJldHVybiBpbnB1dFxuICAgIC5zcGxpdCgnXFxuJylcbiAgICAubWFwKGxpbmUgPT4gbGluZS5zcGxpdCgnJykpXG4gICAgLnJlZHVjZSgoY29kZSwgbGluZSkgPT4ge1xuICAgICAgcmV0dXJuIGNvZGUuY29uY2F0KFxuICAgICAgICBsaW5lLnJlZHVjZSgocG9zaXRpb24sIHN0ZXApID0+IHtcbiAgICAgICAgICByZXR1cm4gbW92ZShrZXlwYWQsIHBvc2l0aW9uLCBkaXJlY3Rpb25zW3N0ZXBdKTtcbiAgICAgICAgfSwgY29kZVtjb2RlLmxlbmd0aCAtIDFdIHx8IHN0YXJ0KSxcbiAgICAgICk7XG4gICAgfSwgW10pXG4gICAgLm1hcChrZXkgPT4ga2V5cGFkW2tleS55XVtrZXkueF0pXG4gICAgLmpvaW4oJycpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFydDEoaW5wdXQpIHtcbiAgY29uc3Qga2V5cGFkMSA9IFtcbiAgICBbJzEnLCAnMicsICczJ10sXG4gICAgWyc0JywgJzUnLCAnNiddLFxuICAgIFsnNycsICc4JywgJzknXSxcbiAgXTtcbiAgcmV0dXJuIHNvbHZlKGlucHV0LCBrZXlwYWQxLCB7IHg6IDEsIHk6IDEgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJ0MihpbnB1dCkge1xuICBjb25zdCBrZXlwYWQyID0gW1xuICAgIFtOYU4sIE5hTiwgJzEnLCBOYU4sIE5hTl0sXG4gICAgW05hTiwgJzInLCAnMycsICc0JywgTmFOXSxcbiAgICBbJzUnLCAnNicsICc3JywgJzgnLCAnOSddLFxuICAgIFtOYU4sICdBJywgJ0InLCAnQycsIE5hTl0sXG4gICAgW05hTiwgTmFOLCAnRCcsIE5hTiwgTmFOXSxcbiAgXTtcbiAgcmV0dXJuIHNvbHZlKGlucHV0LCBrZXlwYWQyLCB7IHg6IDAsIHk6IDIgfSk7XG59XG4iXX0=