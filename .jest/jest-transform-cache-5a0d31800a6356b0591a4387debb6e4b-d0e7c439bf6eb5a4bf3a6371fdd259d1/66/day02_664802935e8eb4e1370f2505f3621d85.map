{"version":3,"sources":["day02.js"],"names":["directions","D","y","x","R","U","L","move","keypad","position","step","next","solve","input","start","split","map","line","reduce","code","concat","length","key","join","part1","keypad1","part2","keypad2","NaN"],"mappings":"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","sourcesContent":["const directions = {\n  D: { y: 1, x: 0 },\n  R: { y: 0, x: 1 },\n  U: { y: -1, x: 0 },\n  L: { y: 0, x: -1 },\n};\n\nfunction move(keypad, position, step) {\n  const next = { x: position.x + step.x, y: position.y + step.y };\n  return keypad[next.y] && keypad[next.y][next.x] ? next : position;\n}\n\nfunction solve(input, keypad, start) {\n  return input\n    .split('\\n')\n    .map(line => line.split(''))\n    .reduce((code, line) => {\n      return code.concat(\n        line.reduce((position, step) => {\n          return move(keypad, position, directions[step]);\n        }, code[code.length - 1] || start),\n      );\n    }, [])\n    .map(key => keypad[key.y][key.x])\n    .join('');\n}\n\nexport function part1(input) {\n  const keypad1 = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n  ];\n  return solve(input, keypad1, { x: 1, y: 1 });\n}\n\nexport function part2(input) {\n  const keypad2 = [\n    [NaN, NaN, '1', NaN, NaN],\n    [NaN, '2', '3', '4', NaN],\n    ['5', '6', '7', '8', '9'],\n    [NaN, 'A', 'B', 'C', NaN],\n    [NaN, NaN, 'D', NaN, NaN],\n  ];\n  return solve(input, keypad2, { x: 0, y: 2 });\n}\n"]}