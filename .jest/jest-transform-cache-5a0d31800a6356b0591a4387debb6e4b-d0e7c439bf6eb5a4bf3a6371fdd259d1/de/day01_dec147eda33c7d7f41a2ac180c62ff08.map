{"version":3,"sources":["day01.js"],"names":["directions","y","x","day","input","destination","split","map","turn","count","match","parseInt","reduce","state","next","direction","length","Array","fill","history","twice","NaN","part1","Math","abs","part2"],"mappings":"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","sourcesContent":["const directions = [\n  { y: 1, x: 0 },\n  { y: 0, x: 1 },\n  { y: -1, x: 0 },\n  { y: 0, x: -1 },\n];\nexport function day(input) {\n  const destination = input\n    .split(', ')\n    .map(x => {\n      const [, turn, count] = x.match(/^(R|L)(\\d+)$/);\n      return { turn: turn === 'R' ? 1 : -1, count: parseInt(count) };\n    })\n    .reduce(\n      (state, next) => {\n        const direction =\n          (state.direction + next.turn + directions.length) % directions.length;\n        return new Array(next.count).fill().reduce(state => {\n          const x = state.x + directions[direction].x;\n          const y = state.y + directions[direction].y;\n          if (state.history[`${x},${y}`]) {\n            state.twice = state.twice || { x, y };\n          } else {\n            state.history[`${x},${y}`] = true;\n          }\n          return {\n            direction,\n            x,\n            y,\n            history: state.history,\n            twice: state.twice,\n          };\n        }, state);\n      },\n      { direction: 0, x: 0, y: 0, history: { '0,0': true } },\n    );\n  destination.twice = destination.twice || { x: NaN, y: NaN };\n\n  const part1 = Math.abs(destination.x) + Math.abs(destination.y);\n  const part2 = Math.abs(destination.twice.x) + Math.abs(destination.twice.y);\n  return { part1, part2 };\n}\n"]}