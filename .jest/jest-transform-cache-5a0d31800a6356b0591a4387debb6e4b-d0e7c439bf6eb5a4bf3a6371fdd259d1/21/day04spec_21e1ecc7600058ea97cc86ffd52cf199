c3f9c77539fdbc4135c4c5347e6d1a67
"use strict";

var _day = require("./day04.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day04 2016', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      let s1, s2, s3, s4;
      expect((0, _day.part1)(s1 = 'aaaaa-bbb-z-y-x-123[abxyz]')).toEqual(123);
      expect((0, _day.part1)(s2 = 'a-b-c-d-e-f-g-h-987[abcde]')).toEqual(987);
      expect((0, _day.part1)(s3 = 'not-a-real-room-404[oarel]')).toEqual(404);
      expect((0, _day.part1)(s4 = 'totally-real-room-200[decoy]')).toEqual(0);
      expect((0, _day.part1)([s1, s2, s3, s4].join('\n'))).toEqual(1514);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(245102);
    });
  });
  describe('part2', () => {
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(324);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTA0LnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiczEiLCJzMiIsInMzIiwiczQiLCJleHBlY3QiLCJ0b0VxdWFsIiwiam9pbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7OztBQUVBLE1BQU1BLEtBQUssR0FBRyx3QkFBVSxLQUFZQyxHQUF0QixDQUFkO0FBRUFDLFFBQVEsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUMzQkEsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQyxVQUFJQyxFQUFKLEVBQVFDLEVBQVIsRUFBWUMsRUFBWixFQUFnQkMsRUFBaEI7QUFDQUMsTUFBQUEsTUFBTSxDQUFDLGdCQUFPSixFQUFFLEdBQUcsNEJBQVosQ0FBRCxDQUFOLENBQW1ESyxPQUFuRCxDQUEyRCxHQUEzRDtBQUNBRCxNQUFBQSxNQUFNLENBQUMsZ0JBQU9ILEVBQUUsR0FBRyw0QkFBWixDQUFELENBQU4sQ0FBbURJLE9BQW5ELENBQTJELEdBQTNEO0FBQ0FELE1BQUFBLE1BQU0sQ0FBQyxnQkFBT0YsRUFBRSxHQUFHLDRCQUFaLENBQUQsQ0FBTixDQUFtREcsT0FBbkQsQ0FBMkQsR0FBM0Q7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFPRCxFQUFFLEdBQUcsOEJBQVosQ0FBRCxDQUFOLENBQXFERSxPQUFyRCxDQUE2RCxDQUE3RDtBQUNBRCxNQUFBQSxNQUFNLENBQUMsZ0JBQU0sQ0FBQ0osRUFBRCxFQUFLQyxFQUFMLEVBQVNDLEVBQVQsRUFBYUMsRUFBYixFQUFpQkcsSUFBakIsQ0FBc0IsSUFBdEIsQ0FBTixDQUFELENBQU4sQ0FBMkNELE9BQTNDLENBQW1ELElBQW5EO0FBQ0QsS0FQQyxDQUFGO0FBU0FOLElBQUFBLEVBQUUsQ0FBQyw4QkFBRCxFQUFpQyxNQUFNO0FBQ3ZDSyxNQUFBQSxNQUFNLENBQUMsZ0JBQU1SLEtBQU4sQ0FBRCxDQUFOLENBQXFCUyxPQUFyQixDQUE2QixNQUE3QjtBQUNELEtBRkMsQ0FBRjtBQUdELEdBYk8sQ0FBUjtBQWVBUCxFQUFBQSxRQUFRLENBQUMsT0FBRCxFQUFVLE1BQU07QUFDdEJDLElBQUFBLEVBQUUsQ0FBQyw4QkFBRCxFQUFpQyxNQUFNO0FBQ3ZDSyxNQUFBQSxNQUFNLENBQUMsZ0JBQU1SLEtBQU4sQ0FBRCxDQUFOLENBQXFCUyxPQUFyQixDQUE2QixHQUE3QjtBQUNELEtBRkMsQ0FBRjtBQUdELEdBSk8sQ0FBUjtBQUtELENBckJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJ0MSwgcGFydDIgfSBmcm9tICcuL2RheTA0LmpzJztcbmltcG9ydCByZWFkSW5wdXQgZnJvbSAnLi4vdXRpbHMvcmVhZC1pbnB1dCc7XG5cbmNvbnN0IGlucHV0ID0gcmVhZElucHV0KGltcG9ydC5tZXRhLnVybCk7XG5cbmRlc2NyaWJlKCdkYXkwNCAyMDE2JywgKCkgPT4ge1xuICBkZXNjcmliZSgncGFydDEnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDEgZXhhbXBsZXMnLCAoKSA9PiB7XG4gICAgICBsZXQgczEsIHMyLCBzMywgczQ7XG4gICAgICBleHBlY3QocGFydDEoKHMxID0gJ2FhYWFhLWJiYi16LXkteC0xMjNbYWJ4eXpdJykpKS50b0VxdWFsKDEyMyk7XG4gICAgICBleHBlY3QocGFydDEoKHMyID0gJ2EtYi1jLWQtZS1mLWctaC05ODdbYWJjZGVdJykpKS50b0VxdWFsKDk4Nyk7XG4gICAgICBleHBlY3QocGFydDEoKHMzID0gJ25vdC1hLXJlYWwtcm9vbS00MDRbb2FyZWxdJykpKS50b0VxdWFsKDQwNCk7XG4gICAgICBleHBlY3QocGFydDEoKHM0ID0gJ3RvdGFsbHktcmVhbC1yb29tLTIwMFtkZWNveV0nKSkpLnRvRXF1YWwoMCk7XG4gICAgICBleHBlY3QocGFydDEoW3MxLCBzMiwgczMsIHM0XS5qb2luKCdcXG4nKSkpLnRvRXF1YWwoMTUxNCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBpbnB1dCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MShpbnB1dCkpLnRvRXF1YWwoMjQ1MTAyKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3BhcnQyJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAyIGlucHV0JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQyKGlucHV0KSkudG9FcXVhbCgzMjQpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19