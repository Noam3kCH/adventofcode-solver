{"version":3,"sources":["day13.spec.js"],"names":["input","url","describe","it","expect","join","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,gBADF,EAEE,gBAFF,EAGE,gBAHF,EAIE,eAJF,EAKE,iBALF,EAME,gBANF,EAOEC,IAPF,CAOO,IAPP,CADF,CADI,CAAN,CAWEC,OAXF,CAWU,KAXV;AAYD,KAbC,CAAF;AAeAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,OAA7B;AACD,KAFC,CAAF;AAGD,GAnBO,CAAR;AAqBAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBACE,CACE,UADF,EAEE,SAFF,EAGE,UAHF,EAIE,SAJF,EAKE,UALF,EAME,SANF,EAOE,UAPF,EAQEC,IARF,CAQO,IARP,CADF,CADI,CAAN,CAYEC,OAZF,CAYU,KAZV;AAaD,KAdC,CAAF;AAgBAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,OAA7B;AACD,KAFC,CAAF;AAGD,GApBO,CAAR;AAqBD,CA3CO,CAAR","sourcesContent":["import { part1, part2 } from './day13.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day13 2018', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(\n          [\n            '/->-\\\\        ',\n            '|   |  /----\\\\',\n            '| /-+--+-\\\\  |',\n            '| | |  | v  |',\n            '\\\\-+-/  \\\\-+--/',\n            '  \\\\------/   ',\n          ].join('\\n'),\n        ),\n      ).toEqual('7,3');\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual('94,78');\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 examples', () => {\n      expect(\n        part2(\n          [\n            '/>-<\\\\  ',\n            '|   |  ',\n            '| /<+-\\\\',\n            '| | | v',\n            '\\\\>+</ |',\n            '  |   ^',\n            '  \\\\<->/',\n          ].join('\\n'),\n        ),\n      ).toEqual('6,4');\n    });\n\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual('26,85');\n    });\n  });\n});\n"]}