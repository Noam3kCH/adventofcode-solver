{"version":3,"sources":["day08.js"],"names":["parse","input","dic","inc","a","b","dec","split","map","x","variable","operator","param","compVariable","compOperator","compParam","state","parseInt","execute","commands","reduce","cmd","executeMax","max","registers","Object","values","sort","pop","part1","part2"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAMC,GAAG,GAAG;AACVC,IAAAA,GAAG,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CADT;AAEVC,IAAAA,GAAG,EAAE,CAACF,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAFT;AAGV,SAAK,CAACD,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAHT;AAIV,SAAK,CAACD,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAJT;AAKV,UAAM,CAACD,CAAD,EAAIC,CAAJ,KAAUD,CAAC,IAAIC,CALX;AAMV,UAAM,CAACD,CAAD,EAAIC,CAAJ,KAAUD,CAAC,IAAIC,CANX;AAOV,UAAM,CAACD,CAAD,EAAIC,CAAJ,KAAUD,CAAC,KAAKC,CAPZ;AAQV,UAAM,CAACD,CAAD,EAAIC,CAAJ,KAAUD,CAAC,KAAKC;AARZ,GAAZ;AAUA,SAAOJ,KAAK,CAACM,KAAN,CAAY,IAAZ,EAAkBC,GAAlB,CAAsBC,CAAC,IAAI;AAChC,UAAM,CACJC,QADI,EAEJC,QAFI,EAGJC,KAHI,GAKJC,YALI,EAMJC,YANI,EAOJC,SAPI,IAQFN,CAAC,CAACF,KAAF,CAAQ,KAAR,CARJ;AASA,WAAOS,KAAK,IAAI;AACdA,MAAAA,KAAK,CAACN,QAAD,CAAL,GAAkBM,KAAK,CAACN,QAAD,CAAL,IAAmB,CAArC;AACAM,MAAAA,KAAK,CAACH,YAAD,CAAL,GAAsBG,KAAK,CAACH,YAAD,CAAL,IAAuB,CAA7C;;AACA,UAAIX,GAAG,CAACY,YAAD,CAAH,CAAkBE,KAAK,CAACH,YAAD,CAAvB,EAAuCI,QAAQ,CAACF,SAAD,CAA/C,CAAJ,EAAiE;AAC/DC,QAAAA,KAAK,CAACN,QAAD,CAAL,GAAkBR,GAAG,CAACS,QAAD,CAAH,CAAcK,KAAK,CAACN,QAAD,CAAnB,EAA+BO,QAAQ,CAACL,KAAD,CAAvC,CAAlB;AACD;;AACD,aAAOI,KAAP;AACD,KAPD;AAQD,GAlBM,CAAP;AAmBD;;AAED,SAASE,OAAT,CAAiBC,QAAjB,EAA2B;AACzB,SAAOA,QAAQ,CAACC,MAAT,CAAgB,CAACJ,KAAD,EAAQK,GAAR,KAAgBA,GAAG,CAACL,KAAD,CAAnC,EAA4C,EAA5C,CAAP;AACD;;AAED,SAASM,UAAT,CAAoBH,QAApB,EAA8B;AAC5B,QAAMH,KAAK,GAAG,EAAd;AACA,SAAOG,QAAQ,CAACX,GAAT,CAAaa,GAAG,IAAIE,GAAG,CAACF,GAAG,CAACL,KAAD,CAAJ,CAAvB,CAAP;AACD;;AAED,SAASO,GAAT,CAAaC,SAAb,EAAwB;AACtB,SAAOC,MAAM,CAACC,MAAP,CAAcF,SAAd,EACJG,IADI,CACC,CAACvB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CADf,EAEJuB,GAFI,EAAP;AAGD;;AAEM,MAAMC,KAAK,GAAG5B,KAAK,IAAIsB,GAAG,CAACL,OAAO,CAAClB,KAAK,CAACC,KAAD,CAAN,CAAR,CAA1B;;;;AACA,MAAM6B,KAAK,GAAG7B,KAAK,IAAIsB,GAAG,CAACD,UAAU,CAACtB,KAAK,CAACC,KAAD,CAAN,CAAX,CAA1B","sourcesContent":["// ev dec -705 if cag != 2\n// b dec -195 if ty >= -8\n// red dec -404 if v > -7\n// d inc -971 if k >= -9\n// k inc 303 if k > -8\n\nfunction parse(input) {\n  const dic = {\n    inc: (a, b) => a + b,\n    dec: (a, b) => a - b,\n    '>': (a, b) => a > b,\n    '<': (a, b) => a < b,\n    '>=': (a, b) => a >= b,\n    '<=': (a, b) => a <= b,\n    '==': (a, b) => a === b,\n    '!=': (a, b) => a !== b,\n  };\n  return input.split('\\n').map(x => {\n    const [\n      variable,\n      operator,\n      param,\n      ,\n      compVariable,\n      compOperator,\n      compParam,\n    ] = x.split(/\\s+/);\n    return state => {\n      state[variable] = state[variable] || 0;\n      state[compVariable] = state[compVariable] || 0;\n      if (dic[compOperator](state[compVariable], parseInt(compParam))) {\n        state[variable] = dic[operator](state[variable], parseInt(param));\n      }\n      return state;\n    };\n  });\n}\n\nfunction execute(commands) {\n  return commands.reduce((state, cmd) => cmd(state), {});\n}\n\nfunction executeMax(commands) {\n  const state = {};\n  return commands.map(cmd => max(cmd(state)));\n}\n\nfunction max(registers) {\n  return Object.values(registers)\n    .sort((a, b) => a - b)\n    .pop();\n}\n\nexport const part1 = input => max(execute(parse(input)));\nexport const part2 = input => max(executeMax(parse(input)));\n"]}