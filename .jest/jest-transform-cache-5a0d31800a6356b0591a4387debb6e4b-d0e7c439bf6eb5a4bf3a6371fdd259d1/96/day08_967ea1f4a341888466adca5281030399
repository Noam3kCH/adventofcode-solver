7b17e964b5264329aa9d7f5e4238e1b0
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.part2 = exports.part1 = void 0;

// ev dec -705 if cag != 2
// b dec -195 if ty >= -8
// red dec -404 if v > -7
// d inc -971 if k >= -9
// k inc 303 if k > -8
function parse(input) {
  const dic = {
    inc: (a, b) => a + b,
    dec: (a, b) => a - b,
    '>': (a, b) => a > b,
    '<': (a, b) => a < b,
    '>=': (a, b) => a >= b,
    '<=': (a, b) => a <= b,
    '==': (a, b) => a === b,
    '!=': (a, b) => a !== b
  };
  return input.split('\n').map(x => {
    const [variable, operator, param,, compVariable, compOperator, compParam] = x.split(/\s+/);
    return state => {
      state[variable] = state[variable] || 0;
      state[compVariable] = state[compVariable] || 0;

      if (dic[compOperator](state[compVariable], parseInt(compParam))) {
        state[variable] = dic[operator](state[variable], parseInt(param));
      }

      return state;
    };
  });
}

function execute(commands) {
  return commands.reduce((state, cmd) => cmd(state), {});
}

function executeMax(commands) {
  const state = {};
  return commands.map(cmd => max(cmd(state)));
}

function max(registers) {
  return Object.values(registers).sort((a, b) => a - b).pop();
}

const part1 = input => max(execute(parse(input)));

exports.part1 = part1;

const part2 = input => max(executeMax(parse(input)));

exports.part2 = part2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTA4LmpzIl0sIm5hbWVzIjpbInBhcnNlIiwiaW5wdXQiLCJkaWMiLCJpbmMiLCJhIiwiYiIsImRlYyIsInNwbGl0IiwibWFwIiwieCIsInZhcmlhYmxlIiwib3BlcmF0b3IiLCJwYXJhbSIsImNvbXBWYXJpYWJsZSIsImNvbXBPcGVyYXRvciIsImNvbXBQYXJhbSIsInN0YXRlIiwicGFyc2VJbnQiLCJleGVjdXRlIiwiY29tbWFuZHMiLCJyZWR1Y2UiLCJjbWQiLCJleGVjdXRlTWF4IiwibWF4IiwicmVnaXN0ZXJzIiwiT2JqZWN0IiwidmFsdWVzIiwic29ydCIsInBvcCIsInBhcnQxIiwicGFydDIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsU0FBU0EsS0FBVCxDQUFlQyxLQUFmLEVBQXNCO0FBQ3BCLFFBQU1DLEdBQUcsR0FBRztBQUNWQyxJQUFBQSxHQUFHLEVBQUUsQ0FBQ0MsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsR0FBR0MsQ0FEVDtBQUVWQyxJQUFBQSxHQUFHLEVBQUUsQ0FBQ0YsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsR0FBR0MsQ0FGVDtBQUdWLFNBQUssQ0FBQ0QsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsR0FBR0MsQ0FIVDtBQUlWLFNBQUssQ0FBQ0QsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsR0FBR0MsQ0FKVDtBQUtWLFVBQU0sQ0FBQ0QsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsSUFBSUMsQ0FMWDtBQU1WLFVBQU0sQ0FBQ0QsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsSUFBSUMsQ0FOWDtBQU9WLFVBQU0sQ0FBQ0QsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsS0FBS0MsQ0FQWjtBQVFWLFVBQU0sQ0FBQ0QsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsS0FBS0M7QUFSWixHQUFaO0FBVUEsU0FBT0osS0FBSyxDQUFDTSxLQUFOLENBQVksSUFBWixFQUFrQkMsR0FBbEIsQ0FBc0JDLENBQUMsSUFBSTtBQUNoQyxVQUFNLENBQ0pDLFFBREksRUFFSkMsUUFGSSxFQUdKQyxLQUhJLEdBS0pDLFlBTEksRUFNSkMsWUFOSSxFQU9KQyxTQVBJLElBUUZOLENBQUMsQ0FBQ0YsS0FBRixDQUFRLEtBQVIsQ0FSSjtBQVNBLFdBQU9TLEtBQUssSUFBSTtBQUNkQSxNQUFBQSxLQUFLLENBQUNOLFFBQUQsQ0FBTCxHQUFrQk0sS0FBSyxDQUFDTixRQUFELENBQUwsSUFBbUIsQ0FBckM7QUFDQU0sTUFBQUEsS0FBSyxDQUFDSCxZQUFELENBQUwsR0FBc0JHLEtBQUssQ0FBQ0gsWUFBRCxDQUFMLElBQXVCLENBQTdDOztBQUNBLFVBQUlYLEdBQUcsQ0FBQ1ksWUFBRCxDQUFILENBQWtCRSxLQUFLLENBQUNILFlBQUQsQ0FBdkIsRUFBdUNJLFFBQVEsQ0FBQ0YsU0FBRCxDQUEvQyxDQUFKLEVBQWlFO0FBQy9EQyxRQUFBQSxLQUFLLENBQUNOLFFBQUQsQ0FBTCxHQUFrQlIsR0FBRyxDQUFDUyxRQUFELENBQUgsQ0FBY0ssS0FBSyxDQUFDTixRQUFELENBQW5CLEVBQStCTyxRQUFRLENBQUNMLEtBQUQsQ0FBdkMsQ0FBbEI7QUFDRDs7QUFDRCxhQUFPSSxLQUFQO0FBQ0QsS0FQRDtBQVFELEdBbEJNLENBQVA7QUFtQkQ7O0FBRUQsU0FBU0UsT0FBVCxDQUFpQkMsUUFBakIsRUFBMkI7QUFDekIsU0FBT0EsUUFBUSxDQUFDQyxNQUFULENBQWdCLENBQUNKLEtBQUQsRUFBUUssR0FBUixLQUFnQkEsR0FBRyxDQUFDTCxLQUFELENBQW5DLEVBQTRDLEVBQTVDLENBQVA7QUFDRDs7QUFFRCxTQUFTTSxVQUFULENBQW9CSCxRQUFwQixFQUE4QjtBQUM1QixRQUFNSCxLQUFLLEdBQUcsRUFBZDtBQUNBLFNBQU9HLFFBQVEsQ0FBQ1gsR0FBVCxDQUFhYSxHQUFHLElBQUlFLEdBQUcsQ0FBQ0YsR0FBRyxDQUFDTCxLQUFELENBQUosQ0FBdkIsQ0FBUDtBQUNEOztBQUVELFNBQVNPLEdBQVQsQ0FBYUMsU0FBYixFQUF3QjtBQUN0QixTQUFPQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0YsU0FBZCxFQUNKRyxJQURJLENBQ0MsQ0FBQ3ZCLENBQUQsRUFBSUMsQ0FBSixLQUFVRCxDQUFDLEdBQUdDLENBRGYsRUFFSnVCLEdBRkksRUFBUDtBQUdEOztBQUVNLE1BQU1DLEtBQUssR0FBRzVCLEtBQUssSUFBSXNCLEdBQUcsQ0FBQ0wsT0FBTyxDQUFDbEIsS0FBSyxDQUFDQyxLQUFELENBQU4sQ0FBUixDQUExQjs7OztBQUNBLE1BQU02QixLQUFLLEdBQUc3QixLQUFLLElBQUlzQixHQUFHLENBQUNELFVBQVUsQ0FBQ3RCLEtBQUssQ0FBQ0MsS0FBRCxDQUFOLENBQVgsQ0FBMUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBldiBkZWMgLTcwNSBpZiBjYWcgIT0gMlxuLy8gYiBkZWMgLTE5NSBpZiB0eSA+PSAtOFxuLy8gcmVkIGRlYyAtNDA0IGlmIHYgPiAtN1xuLy8gZCBpbmMgLTk3MSBpZiBrID49IC05XG4vLyBrIGluYyAzMDMgaWYgayA+IC04XG5cbmZ1bmN0aW9uIHBhcnNlKGlucHV0KSB7XG4gIGNvbnN0IGRpYyA9IHtcbiAgICBpbmM6IChhLCBiKSA9PiBhICsgYixcbiAgICBkZWM6IChhLCBiKSA9PiBhIC0gYixcbiAgICAnPic6IChhLCBiKSA9PiBhID4gYixcbiAgICAnPCc6IChhLCBiKSA9PiBhIDwgYixcbiAgICAnPj0nOiAoYSwgYikgPT4gYSA+PSBiLFxuICAgICc8PSc6IChhLCBiKSA9PiBhIDw9IGIsXG4gICAgJz09JzogKGEsIGIpID0+IGEgPT09IGIsXG4gICAgJyE9JzogKGEsIGIpID0+IGEgIT09IGIsXG4gIH07XG4gIHJldHVybiBpbnB1dC5zcGxpdCgnXFxuJykubWFwKHggPT4ge1xuICAgIGNvbnN0IFtcbiAgICAgIHZhcmlhYmxlLFxuICAgICAgb3BlcmF0b3IsXG4gICAgICBwYXJhbSxcbiAgICAgICxcbiAgICAgIGNvbXBWYXJpYWJsZSxcbiAgICAgIGNvbXBPcGVyYXRvcixcbiAgICAgIGNvbXBQYXJhbSxcbiAgICBdID0geC5zcGxpdCgvXFxzKy8pO1xuICAgIHJldHVybiBzdGF0ZSA9PiB7XG4gICAgICBzdGF0ZVt2YXJpYWJsZV0gPSBzdGF0ZVt2YXJpYWJsZV0gfHwgMDtcbiAgICAgIHN0YXRlW2NvbXBWYXJpYWJsZV0gPSBzdGF0ZVtjb21wVmFyaWFibGVdIHx8IDA7XG4gICAgICBpZiAoZGljW2NvbXBPcGVyYXRvcl0oc3RhdGVbY29tcFZhcmlhYmxlXSwgcGFyc2VJbnQoY29tcFBhcmFtKSkpIHtcbiAgICAgICAgc3RhdGVbdmFyaWFibGVdID0gZGljW29wZXJhdG9yXShzdGF0ZVt2YXJpYWJsZV0sIHBhcnNlSW50KHBhcmFtKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGV4ZWN1dGUoY29tbWFuZHMpIHtcbiAgcmV0dXJuIGNvbW1hbmRzLnJlZHVjZSgoc3RhdGUsIGNtZCkgPT4gY21kKHN0YXRlKSwge30pO1xufVxuXG5mdW5jdGlvbiBleGVjdXRlTWF4KGNvbW1hbmRzKSB7XG4gIGNvbnN0IHN0YXRlID0ge307XG4gIHJldHVybiBjb21tYW5kcy5tYXAoY21kID0+IG1heChjbWQoc3RhdGUpKSk7XG59XG5cbmZ1bmN0aW9uIG1heChyZWdpc3RlcnMpIHtcbiAgcmV0dXJuIE9iamVjdC52YWx1ZXMocmVnaXN0ZXJzKVxuICAgIC5zb3J0KChhLCBiKSA9PiBhIC0gYilcbiAgICAucG9wKCk7XG59XG5cbmV4cG9ydCBjb25zdCBwYXJ0MSA9IGlucHV0ID0+IG1heChleGVjdXRlKHBhcnNlKGlucHV0KSkpO1xuZXhwb3J0IGNvbnN0IHBhcnQyID0gaW5wdXQgPT4gbWF4KGV4ZWN1dGVNYXgocGFyc2UoaW5wdXQpKSk7XG4iXX0=