{"version":3,"sources":["day06.js"],"names":["day","input","banks","split","map","x","parseInt","memory","rounds","join","undefined","iterator","reduce","biggest","i","arr","blocks","splice","pop","length","Math","floor","part1","part2"],"mappings":";;;;;;;AAAO,SAASA,GAAT,CAAaC,KAAb,EAAoB;AACzB,QAAMC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAY,KAAZ,EAAmBC,GAAnB,CAAuBC,CAAC,IAAIC,QAAQ,CAACD,CAAD,CAApC,CAAd;AACA,QAAME,MAAM,GAAG,EAAf;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,SAAOD,MAAM,CAACL,KAAK,CAACO,IAAN,CAAW,GAAX,CAAD,CAAN,KAA4BC,SAAnC,EAA8C;AAC5CH,IAAAA,MAAM,CAACL,KAAK,CAACO,IAAN,CAAW,GAAX,CAAD,CAAN,GAA0BD,MAA1B;AACAA,IAAAA,MAAM;AAEN,UAAMG,QAAQ,GAAGT,KAAK,CAACU,MAAN,CACf,CAACC,OAAD,EAAUR,CAAV,EAAaS,CAAb,EAAgBC,GAAhB,KAAyBV,CAAC,GAAGU,GAAG,CAACF,OAAD,CAAP,GAAmBC,CAAnB,GAAuBD,OADjC,EAEf,CAFe,CAAjB;AAIA,UAAMG,MAAM,GAAGd,KAAK,CAACe,MAAN,CAAaN,QAAb,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BO,GAA7B,EAAf;;AACA,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAAK,CAACiB,MAA1B,EAAkCL,CAAC,EAAnC,EAAuC;AACrCZ,MAAAA,KAAK,CAACY,CAAD,CAAL,IAAYM,IAAI,CAACC,KAAL,CAAWL,MAAM,GAAGd,KAAK,CAACiB,MAA1B,CAAZ;;AACA,UACE,CAACL,CAAC,GAAGH,QAAJ,GAAeT,KAAK,CAACiB,MAAtB,IAAgCjB,KAAK,CAACiB,MAAtC,IAAgDH,MAAM,GAAGd,KAAK,CAACiB,MAA/D,IACAL,CAAC,KAAKH,QAFR,EAGE;AACAT,QAAAA,KAAK,CAACY,CAAD,CAAL;AACD;AACF;AACF;;AACD,QAAMQ,KAAK,GAAGd,MAAd;AACA,QAAMe,KAAK,GAAGf,MAAM,GAAGD,MAAM,CAACL,KAAK,CAACO,IAAN,CAAW,GAAX,CAAD,CAA7B;AACA,SAAO;AAAEa,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACD","sourcesContent":["export function day(input) {\n  const banks = input.split(/\\s+/).map(x => parseInt(x));\n  const memory = {};\n  let rounds = 0;\n  while (memory[banks.join('-')] === undefined) {\n    memory[banks.join('-')] = rounds;\n    rounds++;\n\n    const iterator = banks.reduce(\n      (biggest, x, i, arr) => (x > arr[biggest] ? i : biggest),\n      0,\n    );\n    const blocks = banks.splice(iterator, 1, 0).pop();\n    for (let i = 0; i < banks.length; i++) {\n      banks[i] += Math.floor(blocks / banks.length);\n      if (\n        (i - iterator + banks.length) % banks.length <= blocks % banks.length &&\n        i !== iterator\n      ) {\n        banks[i]++;\n      }\n    }\n  }\n  const part1 = rounds;\n  const part2 = rounds - memory[banks.join('-')];\n  return { part1, part2 };\n}\n"]}