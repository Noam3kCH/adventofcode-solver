cf7cc5ec93c41e2ec94087df9bb2b047
"use strict";

var _day = require("./day10.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day10 2017', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)('3,4,1,5', 5)).toEqual(12);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(9656);
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples', () => {
      expect((0, _day.part2)('')).toEqual('a2582a3a0e66e6e86e3812dcb672a272');
      expect((0, _day.part2)('AoC 2017')).toEqual('33efeb34ea91902bb2f59c9920caa6cd');
      expect((0, _day.part2)('1,2,3')).toEqual('3efbe78a8d82f29979031a4aa0b16a9d');
      expect((0, _day.part2)('1,2,4')).toEqual('63960835bcdc130f0b66d7ff4f6a5a8e');
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual('20b7b54c92bf73cf3e5631458a715149');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTEwLnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7OztBQUVBLE1BQU1BLEtBQUssR0FBRyx3QkFBVSxLQUFZQyxHQUF0QixDQUFkO0FBRUFDLFFBQVEsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUMzQkEsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLFNBQU4sRUFBaUIsQ0FBakIsQ0FBRCxDQUFOLENBQTRCQyxPQUE1QixDQUFvQyxFQUFwQztBQUNELEtBRkMsQ0FBRjtBQUlBRixJQUFBQSxFQUFFLENBQUMsOEJBQUQsRUFBaUMsTUFBTTtBQUN2Q0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNSixLQUFOLENBQUQsQ0FBTixDQUFxQkssT0FBckIsQ0FBNkIsSUFBN0I7QUFDRCxLQUZDLENBQUY7QUFHRCxHQVJPLENBQVI7QUFVQUgsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLEVBQU4sQ0FBRCxDQUFOLENBQWtCQyxPQUFsQixDQUEwQixrQ0FBMUI7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLFVBQU4sQ0FBRCxDQUFOLENBQTBCQyxPQUExQixDQUFrQyxrQ0FBbEM7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLE9BQU4sQ0FBRCxDQUFOLENBQXVCQyxPQUF2QixDQUErQixrQ0FBL0I7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLGdCQUFNLE9BQU4sQ0FBRCxDQUFOLENBQXVCQyxPQUF2QixDQUErQixrQ0FBL0I7QUFDRCxLQUxDLENBQUY7QUFPQUYsSUFBQUEsRUFBRSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDdkNDLE1BQUFBLE1BQU0sQ0FBQyxnQkFBTUosS0FBTixDQUFELENBQU4sQ0FBcUJLLE9BQXJCLENBQTZCLGtDQUE3QjtBQUNELEtBRkMsQ0FBRjtBQUdELEdBWE8sQ0FBUjtBQVlELENBdkJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJ0MSwgcGFydDIgfSBmcm9tICcuL2RheTEwLmpzJztcbmltcG9ydCByZWFkSW5wdXQgZnJvbSAnLi4vdXRpbHMvcmVhZC1pbnB1dCc7XG5cbmNvbnN0IGlucHV0ID0gcmVhZElucHV0KGltcG9ydC5tZXRhLnVybCk7XG5cbmRlc2NyaWJlKCdkYXkxMCAyMDE3JywgKCkgPT4ge1xuICBkZXNjcmliZSgncGFydDEnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDEgZXhhbXBsZXMnLCAoKSA9PiB7XG4gICAgICBleHBlY3QocGFydDEoJzMsNCwxLDUnLCA1KSkudG9FcXVhbCgxMik7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMSBpbnB1dCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MShpbnB1dCkpLnRvRXF1YWwoOTY1Nik7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdwYXJ0MicsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMiBleGFtcGxlcycsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MignJykpLnRvRXF1YWwoJ2EyNTgyYTNhMGU2NmU2ZTg2ZTM4MTJkY2I2NzJhMjcyJyk7XG4gICAgICBleHBlY3QocGFydDIoJ0FvQyAyMDE3JykpLnRvRXF1YWwoJzMzZWZlYjM0ZWE5MTkwMmJiMmY1OWM5OTIwY2FhNmNkJyk7XG4gICAgICBleHBlY3QocGFydDIoJzEsMiwzJykpLnRvRXF1YWwoJzNlZmJlNzhhOGQ4MmYyOTk3OTAzMWE0YWEwYjE2YTlkJyk7XG4gICAgICBleHBlY3QocGFydDIoJzEsMiw0JykpLnRvRXF1YWwoJzYzOTYwODM1YmNkYzEzMGYwYjY2ZDdmZjRmNmE1YThlJyk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHdvcmsgZm9yIHBhcnQgMiBpbnB1dCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChwYXJ0MihpbnB1dCkpLnRvRXF1YWwoJzIwYjdiNTRjOTJiZjczY2YzZTU2MzE0NThhNzE1MTQ5Jyk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=