{"version":3,"sources":["day23.spec.js"],"names":["input","url","describe","it","expect","join","toEqual"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,MAAMA,KAAK,GAAG,wBAAU,KAAYC,GAAtB,CAAd;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,MAAAA,MAAM,CACJ,gBAAM,CAAC,OAAD,EAAU,WAAV,EAAuB,OAAvB,EAAgC,OAAhC,EAAyCC,IAAzC,CAA8C,IAA9C,CAAN,CADI,CAAN,CAEEC,OAFF,CAEU,CAFV;AAGD,KAJC,CAAF;AAMAH,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,GAA7B;AACD,KAFC,CAAF;AAGD,GAVO,CAAR;AAYAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,MAAAA,MAAM,CAAC,gBAAMJ,KAAN,CAAD,CAAN,CAAqBM,OAArB,CAA6B,GAA7B;AACD,KAFC,CAAF;AAGD,GAJO,CAAR;AAKD,CAlBO,CAAR","sourcesContent":["import { part1, part2 } from './day23.js';\nimport readInput from '../utils/read-input';\n\nconst input = readInput(import.meta.url);\n\ndescribe('day23 2015', () => {\n  describe('part1', () => {\n    it('should work for part 1 examples', () => {\n      expect(\n        part1(['inc b', 'jio b, +2', 'tpl b', 'inc b'].join('\\n')),\n      ).toEqual(2);\n    });\n\n    it('should work for part 1 input', () => {\n      expect(part1(input)).toEqual(255);\n    });\n  });\n\n  describe('part2', () => {\n    it('should work for part 2 input', () => {\n      expect(part2(input)).toEqual(334);\n    });\n  });\n});\n"]}