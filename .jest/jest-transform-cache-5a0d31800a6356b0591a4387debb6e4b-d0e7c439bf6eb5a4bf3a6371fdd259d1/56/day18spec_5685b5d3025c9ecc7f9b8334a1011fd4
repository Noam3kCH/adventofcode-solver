71285ec8ac5a29cc0fccd6230888ddf7
"use strict";

var _day = require("./day18.js");

var _readInput = _interopRequireDefault(require("../utils/read-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = Object.freeze({
  url: require('url').pathToFileURL(__filename)
});
const input = (0, _readInput.default)(meta.url);
describe('day18 2015', () => {
  describe('part1', () => {
    it('should work for part 1 examples', () => {
      expect((0, _day.part1)(`.#.#.#
...##.
#....#
..#...
#.#..#
####..`, 4)).toEqual(4);
    });
    it('should work for part 1 input', () => {
      expect((0, _day.part1)(input)).toEqual(814);
    });
  });
  describe('part2', () => {
    it('should work for part 2 examples', () => {
      expect((0, _day.part2)(`##.#.#
...##.
#....#
..#...
#.#..#
####.#`, 5)).toEqual(17);
    });
    it('should work for part 2 input', () => {
      expect((0, _day.part2)(input)).toEqual(924);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRheTE4LnNwZWMuanMiXSwibmFtZXMiOlsiaW5wdXQiLCJ1cmwiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7OztBQUVBLE1BQU1BLEtBQUssR0FBRyx3QkFBVSxLQUFZQyxHQUF0QixDQUFkO0FBRUFDLFFBQVEsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUMzQkEsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUNKLGdCQUNHOzs7OztPQURILEVBT0UsQ0FQRixDQURJLENBQU4sQ0FVRUMsT0FWRixDQVVVLENBVlY7QUFXRCxLQVpDLENBQUY7QUFjQUYsSUFBQUEsRUFBRSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDdkNDLE1BQUFBLE1BQU0sQ0FBQyxnQkFBTUosS0FBTixDQUFELENBQU4sQ0FBcUJLLE9BQXJCLENBQTZCLEdBQTdCO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0FsQk8sQ0FBUjtBQW9CQUgsRUFBQUEsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUMxQ0MsTUFBQUEsTUFBTSxDQUNKLGdCQUNHOzs7OztPQURILEVBT0UsQ0FQRixDQURJLENBQU4sQ0FVRUMsT0FWRixDQVVVLEVBVlY7QUFXRCxLQVpDLENBQUY7QUFjQUYsSUFBQUEsRUFBRSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDdkNDLE1BQUFBLE1BQU0sQ0FBQyxnQkFBTUosS0FBTixDQUFELENBQU4sQ0FBcUJLLE9BQXJCLENBQTZCLEdBQTdCO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0FsQk8sQ0FBUjtBQW1CRCxDQXhDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFydDEsIHBhcnQyIH0gZnJvbSAnLi9kYXkxOC5qcyc7XG5pbXBvcnQgcmVhZElucHV0IGZyb20gJy4uL3V0aWxzL3JlYWQtaW5wdXQnO1xuXG5jb25zdCBpbnB1dCA9IHJlYWRJbnB1dChpbXBvcnQubWV0YS51cmwpO1xuXG5kZXNjcmliZSgnZGF5MTggMjAxNScsICgpID0+IHtcbiAgZGVzY3JpYmUoJ3BhcnQxJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAxIGV4YW1wbGVzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KFxuICAgICAgICBwYXJ0MShcbiAgICAgICAgICBgLiMuIy4jXG4uLi4jIy5cbiMuLi4uI1xuLi4jLi4uXG4jLiMuLiNcbiMjIyMuLmAsXG4gICAgICAgICAgNCxcbiAgICAgICAgKSxcbiAgICAgICkudG9FcXVhbCg0KTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAxIGlucHV0JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQxKGlucHV0KSkudG9FcXVhbCg4MTQpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgncGFydDInLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCB3b3JrIGZvciBwYXJ0IDIgZXhhbXBsZXMnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoXG4gICAgICAgIHBhcnQyKFxuICAgICAgICAgIGAjIy4jLiNcbi4uLiMjLlxuIy4uLi4jXG4uLiMuLi5cbiMuIy4uI1xuIyMjIy4jYCxcbiAgICAgICAgICA1LFxuICAgICAgICApLFxuICAgICAgKS50b0VxdWFsKDE3KTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgd29yayBmb3IgcGFydCAyIGlucHV0JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHBhcnQyKGlucHV0KSkudG9FcXVhbCg5MjQpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19